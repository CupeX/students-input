{"version":3,"sources":["components/layout/MainNavigation.js","components/UI/Card.js","pages/HomePage.js","components/layout/AddPage.js","pages/AddPage.js","components/firebase.js","components/students/StudentsList.js","pages/studentsPage/AllStudentsPage.js","components/comon/BaseInput.js","components/students/StudentForm.js","components/students/AddNewStudent.js","pages/studentsPage/AddStudentPage.js","components/students/EditStudent.js","pages/studentsPage/EditStudentPage.js","components/professors/ProfessorsList.js","components/professors/Profesors.js","pages/professorsPage/AllProfessorsPage.js","components/professors/ProfessorForm.js","components/professors/AddNewProfessor.js","pages/professorsPage/AddProfessorsPage.js","components/professors/EditProfessor.js","pages/professorsPage/EditProfessorPage.js","components/subjects/AddProfToSubjectList.js","components/subjects/ModalProfList.js","components/subjects/AddStudentToSubjectList.js","components/subjects/ModalStudentsList.js","components/subjects/SubjectsList.js","pages/subjectsPage/AllSubjectsPage.js","components/subjects/SubjectForm.js","components/subjects/AddNewSubject.js","pages/subjectsPage/AddSubjectPage.js","components/subjects/EditSubject.js","pages/subjectsPage/EditSubjectPage.js","components/professors/ProfessorDetailsTest.js","components/students/StudentDetailsTest.js","components/subjects/SubjectDetailsTest.js","components/comon/LoadingData.js","App.js","reportWebVitals.js","index.js"],"names":["MainNavigation","history","useHistory","useState","isOpen","setIsOpen","Navbar","className","expand","NavbarBrand","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","onChange","e","push","testing","target","value","Card","props","children","HomePage","AddNew","AddPage","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","StudentsList","match","useRouteMatch","userStudents","setUserStudents","isLoading","setIsLoading","postRef","collection","useEffect","get","then","students","forEach","student","data","id","payload","find","x","checkPassHandler","studentId","prompt","filter","st","map","password","doc","delete","console","log","removeStudentHandler","alert","content","sortProperty","sort","a","b","sorted","JSON","parse","stringify","sortHandler","ListGroup","ListGroupItem","fName","lName","year","url","Button","color","AllStudentsPage","BaseInput","InputGroup","InputGroupAddon","addonType","InputGroupText","label","Input","placeholder","type","StudentForm","React","memo","enteredFName","setEnteredFName","enteredLName","setEnteredLName","enteredYear","setEnteredYear","enteredPass","setEnteredPass","setFormValid","setStudent","onSubmit","preventDefault","subjects","onAddStudent","replace","min","AddNewStudent","add","docRef","AddStudentPage","EditStudent","params","useParams","editedStudent","update","EditStudentsPage","ProfessorsList","userProfessors","setUserProfessors","professors","professor","professorId","Profesors","AllProfessorsPage","ProfessorForm","profName","setProfName","profLName","setProfLName","professorData","subject","onAddProfessor","AddNewProfessor","AddProfessorsPage","EditProfessor","setProfessor","editedprofessor","EditProfessorPage","AddProffesorToSubjectList","style","textAlign","subjectId","onAddProfessorToSubject","ModalProfList","userSubjects","profRef","subjRef","onCloseModal","AddProfToSubjectList","AddStudentToSubjectList","filteredList","Object","keys","includes","onAddStudentToSubject","ModalStudentsList","subjectObj","undefined","set","merge","removeStudent","SubjectsList","setUserSubjects","setSubjectId","studentsModal","setStudentsModal","professorsModal","setProfessorsModal","onAddProfToSubject","removeSubjectHandler","AllSubjectsPage","SubjectForm","enteredSubject","setEnteredSubject","subjectData","onAddSubject","AddNewSubject","AddSubjectPage","EditSubject","setSubject","subjectRef","editedSubject","EditSubjectPage","ProfessorDetailsTest","StudentDetailsTest","Table","striped","prof","y","SubjectDetailsTest","attendingStudents","LoadingData","isLoadedStudents","setIsLoadedStudents","isLoadedSubjects","setIsLoadedSubjects","isLoadedProfessors","setIsLoadedProfessors","isLoaded","setIsLoaded","profArray","finally","studArray","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.591b93d9.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  NavItem,\n} from 'reactstrap';\n\nimport './MainNavigation.css';\n\nconst MainNavigation = () => {\n  const history = useHistory();\n  const testing = e => {\n    history.push(`/students-input/${e}`);\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <header>\n      <Navbar className=\"px-5 py-3 justify-content-between\" expand=\"md\">\n        <NavbarBrand className=\"logo\">\n          <Link to=\"/students-input\">CupeX first app</Link>\n        </NavbarBrand>\n\n        <NavbarToggler onClick={toggle} />\n\n        <Collapse className=\"flex-grow-0\" isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem className=\"px-2\">\n              <Link to=\"/students-input/all-students\">Students</Link>\n            </NavItem>\n            <NavItem className=\"px-2\">\n              <Link to=\"/students-input/all-subjects\">Subjects</Link>\n            </NavItem>\n            <NavItem className=\"px-2\">\n              <Link to=\"/students-input/all-professors\">Professors</Link>\n            </NavItem>\n            <li>\n              <select\n                className=\"sort-btn\"\n                onChange={e => testing(e.target.value)}\n              >\n                <option value=\"add\">Add new?</option>\n                <option value=\"add-new-student\">Add new student</option>\n                <option value=\"add-new-professor\">Add new profesor</option>\n                <option value=\"add-new-subject\">Add new subject</option>\n              </select>\n            </li>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import Card from '../components/UI/Card';\n\nconst HomePage = () => {\n  return (\n    <Card>\n      <h1>Home Page</h1>\n    </Card>\n  );\n};\n\nexport default HomePage;\n","import { Link } from 'react-router-dom';\nimport Card from '../UI/Card';\n\nimport './index.css';\n\nconst AddNew = () => {\n  return (\n    <Card>\n      <h2>Add new:</h2>\n      <ul className=\"addNewUl\">\n        <li>\n          <Link to=\"/students-input/add-new-student\">\n            <button className=\"change-btn\">student</button>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/students-input/add-new-subject\">\n            <button className=\"change-btn\">subject</button>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/students-input/add-new-professor\">\n            <button className=\"change-btn\">professor</button>\n          </Link>\n        </li>\n      </ul>\n    </Card>\n  );\n};\n\nexport default AddNew;\n","import AddNew from '../components/layout/AddPage';\n\nconst AddPage = () => {\n  return <AddNew />;\n};\n\nexport default AddPage;\n","import firebase from 'firebase';\nrequire('firebase/firestore');\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAmiHfPoCndQtpGB3sdhvNAnzER_NYqRq0',\n  authDomain: 'students-input.firebaseapp.com',\n  databaseURL:\n    'https://students-input-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'students-input',\n  storageBucket: 'students-input.appspot.com',\n  messagingSenderId: '1037427824217',\n  appId: '1:1037427824217:web:edad276ef09ea0b4688348',\n  measurementId: 'G-459YJZBEBM',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nvar db = firebase.firestore();\n\n// export const auth = firebase.auth();\nexport const firestore = firebase.firestore;\nexport default db;\n","import { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport db from '../firebase';\nimport Card from '../UI/Card';\n\n// import './students.css';\nimport { Button, ButtonGroup, ListGroup, ListGroupItem } from 'reactstrap';\n\nconst StudentsList = () => {\n  const match = useRouteMatch();\n  const [userStudents, setUserStudents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  let postRef = db.collection('students');\n\n  useEffect(() => {\n    postRef.get().then(students =>\n      students.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userStudents.find(x => (x.id = id))) {\n          setUserStudents(students => [...students, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n\n  const removeStudentHandler = studentId => {\n    postRef\n      .doc(studentId)\n      .delete()\n      .then(() => {\n        console.log('Student successfully deleted!');\n      });\n  };\n\n  const checkPassHandler = studentId => {\n    const passInput = prompt('enter password');\n    const getPass = userStudents\n      .filter(st => st.id === studentId)\n      .map(st => st.password);\n\n    if (+passInput === +getPass) {\n      removeStudentHandler(studentId);\n      console.log('student deleted');\n    } else {\n      alert('wrong password!');\n    }\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userStudents.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userStudents));\n    setUserStudents(sorted);\n  };\n\n  let content = (\n    <div>\n      <h2> All Students</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n        <option value=\"year\">Date of Birth</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {isLoading && <h2>Loading...</h2>}\n      <ListGroup className=\"mt-5\">\n        {userStudents.map(st => (\n          <ListGroupItem className=\"my-3\" key={st.id} id={st.id}>\n            <div className=\"text-start\">\n              <span>student: </span>\n              <span>{st.fName} </span>\n              <span>{st.lName}, </span>\n              <span>born: {st.year}</span>\n            </div>\n\n            <div className=\"text-end\">\n              <Link to={`${match.url}/details/${st.id}`}>\n                <Button color=\"info\">info</Button>\n              </Link>\n              <Link to={`${match.url}/edit/${st.id}`}>\n                <Button color=\"success\">edit</Button>\n              </Link>\n              <Button color=\"danger\" onClick={() => checkPassHandler(st.id)}>\n                delete\n              </Button>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default StudentsList;\n","import StudentsList from '../../components/students/StudentsList';\n\nconst AllStudentsPage = () => {\n  return <StudentsList />;\n};\n\nexport default AllStudentsPage;\n","import React from 'react';\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\n\nconst BaseInput = props => {\n  return (\n    <InputGroup className=\"py-1\">\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>{props.label}</InputGroupText>\n      </InputGroupAddon>\n      <Input\n        placeholder={props.placeholder}\n        type={props.type}\n        id={props.fName}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    </InputGroup>\n  );\n};\n\nexport default BaseInput;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { InputGroup } from 'reactstrap';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst StudentForm = React.memo(props => {\n  const [enteredFName, setEnteredFName] = useState('');\n  const [enteredLName, setEnteredLName] = useState('');\n  const [enteredYear, setEnteredYear] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n  const [formValid, setFormValid] = useState(false);\n  const [student, setStudent] = useState({});\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (\n      enteredFName === '' ||\n      enteredLName === '' ||\n      enteredYear === '' ||\n      enteredPass === ''\n    ) {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const student = {\n      fName: enteredFName,\n      lName: enteredLName,\n      year: enteredYear,\n      password: enteredPass,\n      subjects: {},\n    };\n    setStudent(student);\n    props.onAddStudent(student);\n\n    // clearing input fields\n    setEnteredFName('');\n    setEnteredLName('');\n    setEnteredYear('');\n    setEnteredPass('');\n    history.replace('/students-input/all-students');\n  };\n\n  const fNameChangeHandler = e => {\n    setEnteredFName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setEnteredLName(e.target.value);\n  };\n  const yearChangeHandler = e => {\n    setEnteredYear(e.target.value);\n  };\n  const passChangeHandler = e => {\n    setEnteredPass(e.target.value);\n  };\n\n  return (\n    <section>\n      <Card>\n        <h2>Students input form</h2>\n\n        <form onSubmit={submitHandler}>\n          <BaseInput\n            type=\"text\"\n            id=\"fName\"\n            onChange={fNameChangeHandler}\n            placeholder={props.student ? `${props.student.fName}` : ''}\n            value={enteredFName}\n            label={'First name:'}\n          />\n\n          <BaseInput\n            type=\"text\"\n            id=\"lName\"\n            onChange={lNameChangeHandler}\n            placeholder={props.student ? `${props.student.lName}` : ''}\n            value={enteredLName}\n            label={'Last name:'}\n          />\n\n          <BaseInput\n            type=\"date\"\n            min=\"1111-01-01\"\n            id=\"year\"\n            onChange={yearChangeHandler}\n            placeholder={props.student ? `${props.student.year}` : ''}\n            value={enteredYear}\n            label={'Birth:'}\n          />\n\n          <BaseInput\n            placeholder={props.student ? `${props.student.password}` : ''}\n            type=\"number\"\n            id=\"pass\"\n            value={enteredPass}\n            onChange={passChangeHandler}\n            label={'Password:'}\n          />\n\n          <div>\n            <button type=\"submit\" className=\"add-btn\">\n              {props.student ? 'save changes' : 'add student'}\n            </button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default StudentForm;\n","import React from 'react';\nimport db from '../firebase';\nimport StudentForm from './StudentForm';\n\nconst AddNewStudent = () => {\n  const addStudentHandler = student => {\n    db.collection('students')\n      .add(student)\n      .then(docRef => {});\n  };\n\n  return <StudentForm onAddStudent={addStudentHandler} />;\n};\n\nexport default AddNewStudent;\n","import AddNewStudent from '../../components/students/AddNewStudent';\n\nconst AddStudentPage = () => {\n  return <AddNewStudent />;\n};\n\nexport default AddStudentPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport StudentForm from './StudentForm';\n\nconst EditStudent = () => {\n  const params = useParams();\n  const [student, setStudent] = useState({});\n  let postRef = db.collection('students').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const student = doc.data();\n      setStudent(student);\n    });\n  }, []);\n\n  const changeHandler = editedStudent => {\n    postRef.update(editedStudent).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <StudentForm onAddStudent={changeHandler} student={student} />;\n};\n\nexport default EditStudent;\n","import EditStudent from '../../components/students/EditStudent';\n\nconst EditStudentsPage = () => {\n  return <EditStudent />;\n};\n\nexport default EditStudentsPage;\n","import { Link, useRouteMatch } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport db from '../firebase';\n\nconst ProfessorsList = props => {\n  const match = useRouteMatch();\n\n  const [userProfessors, setUserProfessors] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  let postRef = db.collection('professors');\n\n  useEffect(() => {\n    postRef.get().then(professors =>\n      professors.forEach(professor => {\n        let data = professor.data();\n        let { id } = professor;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userProfessors.find(x => (x.id = id))) {\n          setUserProfessors(professors => [...professors, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n\n  const removeProfessorHandler = professorId => {\n    postRef\n      .doc(professorId)\n      .delete()\n      .then(() => {\n        console.log('professor successfully deleted!');\n      });\n  };\n\n  if (isLoading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <section>\n      {userProfessors.map(st => (\n        <div className=\"item-wrapper\" key={st.id} id={st.id}>\n          <div className=\"info-wrapper\">\n            <span>professor: </span>\n            <span>{st.fName} </span>\n            <span>{st.lName} </span>\n          </div>\n          <div className=\"btn-wrapper\">\n            <Link to={`${match.url}/details/${st.id}`}>\n              <button className=\"info-btn\">&#8505;</button>\n            </Link>\n            <Link to={`${match.url}/edit/${st.id}`}>\n              <button className=\"change-btn\">edit</button>\n            </Link>\n            <button\n              className=\"delete-btn\"\n              onClick={() => removeProfessorHandler(st.id)}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n      ))}\n    </section>\n  );\n};\n\nexport default ProfessorsList;\n","import { useState } from 'react';\nimport Card from '../UI/Card';\nimport ProfessorsList from './ProfessorsList';\n\nconst Profesors = () => {\n  const [userProfessors, setUserProfessors] = useState([]);\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userProfessors.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userProfessors));\n    setUserProfessors(sorted);\n  };\n\n  const content = (\n    <div>\n      <h2> All Professors</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      <ProfessorsList />\n    </Card>\n  );\n};\n\nexport default Profesors;\n","import Profesors from '../../components/professors/Profesors';\n\nconst AllProfessorsPage = () => {\n  return <Profesors />;\n};\n\nexport default AllProfessorsPage;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst ProfessorForm = React.memo(props => {\n  const [profName, setProfName] = useState('');\n  const [profLName, setProfLName] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (profName === '' || profLName === '') {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const professorData = {\n      fName: profName,\n      lName: profLName,\n      subject: '',\n    };\n\n    props.onAddProfessor(professorData);\n\n    // clearing input fields\n    setProfName('');\n    setProfLName('');\n\n    history.replace('/students-input/all-professors');\n  };\n\n  const fNameChangeHandler = e => {\n    setProfName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setProfLName(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Professor input form</h2>\n      <form onSubmit={submitHandler}>\n        <BaseInput\n          placeholder={props.professor ? `${props.professor.fName}` : ''}\n          type=\"text\"\n          id=\"fName\"\n          value={profName}\n          onChange={fNameChangeHandler}\n          label={'First name:'}\n        />\n        <BaseInput\n          placeholder={props.professor ? `${props.professor.lName}` : ''}\n          type=\"text\"\n          id=\"lName\"\n          value={profLName}\n          onChange={lNameChangeHandler}\n          label={'Last name:'}\n        />\n\n        <div>\n          <button type=\"submit\" className=\"add-btn\">\n            Add professor\n          </button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default ProfessorForm;\n","import React from 'react';\nimport db from '../firebase';\nimport ProfessorForm from './ProfessorForm';\n\nconst AddNewProfessor = () => {\n  const addProfessorHandler = professorData => {\n    db.collection('professors')\n      .add(professorData)\n      .then(docRef => {});\n  };\n\n  return <ProfessorForm onAddProfessor={addProfessorHandler} />;\n};\n\nexport default AddNewProfessor;\n","import AddNewProfessor from '../../components/professors/AddNewProfessor';\n\nconst AddProfessorsPage = () => {\n  return <AddNewProfessor />;\n};\n\nexport default AddProfessorsPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport ProfessorForm from './ProfessorForm';\n\nconst EditProfessor = () => {\n  const params = useParams();\n  const [professor, setProfessor] = useState({});\n  let postRef = db.collection('professors').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const professor = doc.data();\n      setProfessor(professor);\n    });\n  }, []);\n\n  const changeHandler = editedprofessor => {\n    postRef.update(editedprofessor).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <ProfessorForm onAddProfessor={changeHandler} professor={professor} />;\n};\n\nexport default EditProfessor;\n","import EditProfessor from '../../components/professors/EditProfessor';\n\nconst EditProfessorPage = () => {\n  return <EditProfessor />;\n};\n\nexport default EditProfessorPage;\n","const AddProffesorToSubjectList = props => {\n  return (\n    <section>\n      <h2>all professors list</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>teaching</th>\n            <th style={{ textAlign: 'end' }}>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.professors.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n              <td>{st.subject === props.subjectId ? 'yes' : 'x'}</td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => props.onAddProfessorToSubject(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default AddProffesorToSubjectList;\n","import { useState, useEffect } from 'react';\nimport db from '../firebase';\nimport AddProfToSubjectList from './AddProfToSubjectList';\n\nimport './Modal.css';\n\nconst ModalProfList = props => {\n  const subjectId = props.subjectId;\n  const subjectObj = props.userSubjects.find(x => x.id === subjectId);\n  const { subject } = subjectObj;\n\n  const [userProfessors, setUserProfessors] = useState([]);\n  let profRef = db.collection('professors');\n  let subjRef = db.collection('subjects');\n  // let studentRef = db.collection('students');\n\n  useEffect(() => {\n    profRef.get().then(professors =>\n      professors.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready professors in list\n        if (!userProfessors.find(x => (x.id = id))) {\n          setUserProfessors(professors => [...professors, payload]);\n        }\n      })\n    );\n  }, []);\n\n  const addProfessorToSubjectHandler = professorId => {\n    // profRef.doc(professorId).update({ subject: { subjectId, title: subject } });\n    profRef.doc(professorId).update({ subject: subjectId });\n    subjRef.doc(subjectId).update({ professor: professorId });\n\n    // const profObj = userProfessors.find(x => x.id === professorId);\n    // const { fName, lName } = profObj;\n\n    // studentRef.get().then(x => {\n    //   x.forEach(doc => {\n    //     doc.ref.set(\n    //       { subjects: { [subjectId]: { fName, lName }, subject: subject } },\n    //       { merge: true }\n    //     );\n    //   });\n    // });\n\n    // [subjectId]: { professor: { fName, lName } },\n\n    // const updatedSubjectInAllStudents = userStudents.map(x => {\n    //   if (x.subjects && Object.keys(x.subjects).includes(subjectId)) {\n    //     x.subjects[subjectId].title = newSubject;\n    //   }\n    //   return x;\n    // });\n    // setUserStudents(updatedSubjectInAllStudents);\n  };\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddProfToSubjectList\n        subjectId={subjectId}\n        professors={userProfessors}\n        onAddProfessorToSubject={addProfessorToSubjectHandler}\n      />\n    </div>\n  );\n};\n\nexport default ModalProfList;\n","const AddStudentToSubjectList = props => {\n  const filteredList = props.students.filter(\n    x => !Object.keys(x.subjects).includes(props.subjectId)\n  );\n\n  return (\n    <section>\n      <table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th style={{ textAlign: 'end' }}>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredList.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => props.onAddStudentToSubject(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default AddStudentToSubjectList;\n","import { useEffect, useState } from 'react';\nimport db from '../firebase';\nimport AddStudentToSubjectList from './AddStudentToSubjectList';\nimport './Modal.css';\n\nconst ModalStudentsList = props => {\n  const subjectId = props.subjectId;\n  const subjectObj = props.userSubjects.find(x => x.id === subjectId);\n  let { subject, professor } = subjectObj;\n\n  const [userStudents, setUserStudents] = useState([]);\n  let postRef = db.collection('students');\n\n  useEffect(() => {\n    postRef.get().then(students =>\n      students.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userStudents.find(x => (x.id = id))) {\n          setUserStudents(students => [...students, payload]);\n        }\n      })\n    );\n  }, []);\n\n  const addStudentToSubjectHandler = studentId => {\n    if (professor === undefined) {\n      professor = '';\n    } else {\n      postRef\n        .doc(studentId)\n        .set({ subjects: { [subjectId]: '' } }, { merge: true });\n    }\n\n    const removeStudent = userStudents.filter(x => x.id !== studentId);\n    setUserStudents(removeStudent);\n  };\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddStudentToSubjectList\n        subjectId={subjectId}\n        students={userStudents}\n        onAddStudentToSubject={addStudentToSubjectHandler}\n      />\n    </div>\n  );\n};\n\nexport default ModalStudentsList;\n","import { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport db from '../firebase';\nimport Card from '../UI/Card';\nimport ModalProfList from './ModalProfList';\nimport ModalStudentsList from './ModalStudentsList';\n\nconst SubjectsList = props => {\n  const match = useRouteMatch();\n  const [userSubjects, setUserSubjects] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [subjectId, setSubjectId] = useState('');\n  const [studentsModal, setStudentsModal] = useState(false);\n  const [professorsModal, setProfessorsModal] = useState(false);\n\n  useEffect(() => {\n    let subjectRef = db.collection('subjects');\n    subjectRef.get().then(subjects =>\n      subjects.forEach(subject => {\n        let data = subject.data();\n        let { id } = subject;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userSubjects.find(x => (x.id = id))) {\n          setUserSubjects(subjects => [...subjects, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n\n  const removeSubjectHandler = subjectId => {\n    let subjectRef = db.collection('subjects');\n    subjectRef\n      .doc(subjectId)\n      .delete()\n      .then(() => {\n        console.log('Subject successfully deleted!');\n      });\n  };\n\n  const onAddStudentToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setStudentsModal(true);\n  };\n\n  const closeStudentsModal = () => {\n    setStudentsModal(false);\n  };\n\n  const onAddProfToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setProfessorsModal(true);\n  };\n\n  const closeProfessorsModal = () => {\n    setProfessorsModal(false);\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userSubjects.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userSubjects));\n    setUserSubjects(sorted);\n  };\n\n  let content = (\n    <div>\n      <h2> All Subjects</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {isLoading && <h2>Loading...</h2>}\n      {studentsModal && (\n        <ModalStudentsList\n          onCloseModal={closeStudentsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      {professorsModal && (\n        <ModalProfList\n          onCloseModal={closeProfessorsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      {userSubjects.map(st => (\n        <div className=\"item-wrapper\" key={st.id} id={st.id}>\n          <div className=\"info-wrapper\">\n            <span>subject: {st.subject}</span>\n          </div>\n          <div className=\"btn-wrapper\">\n            <Link to={`${match.url}/details/${st.id}`}>\n              <button className=\"info-btn\">&#8505;</button>\n            </Link>\n            <Link to={`${match.url}/edit/${st.id}`}>\n              <button className=\"change-btn\">edit</button>\n            </Link>\n            <button\n              className=\"change-btn\"\n              onClick={() => onAddStudentToSubject(st.id)}\n            >\n              add student\n            </button>\n            <button\n              className=\"change-btn\"\n              onClick={() => onAddProfToSubject(st.id)}\n            >\n              add professor\n            </button>\n\n            <button\n              className=\"delete-btn\"\n              onClick={() => removeSubjectHandler(st.id)}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n      ))}\n    </Card>\n  );\n};\n\nexport default SubjectsList;\n","import SubjectsList from '../../components/subjects/SubjectsList';\n\nconst AllSubjectsPage = () => {\n  return <SubjectsList />;\n};\n\nexport default AllSubjectsPage;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst SubjectForm = React.memo(props => {\n  const [enteredSubject, setEnteredSubject] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (enteredSubject === '') {\n      setFormValid(false);\n      alert('pls enter subject name');\n      return;\n    }\n    setFormValid(true);\n\n    const subjectData = {\n      subject: enteredSubject,\n    };\n\n    props.onAddSubject(subjectData);\n\n    setEnteredSubject('');\n\n    history.replace('/students-input/all-subjects');\n  };\n\n  const subjectChangeHandler = e => {\n    setEnteredSubject(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Subject input form</h2>\n      <form onSubmit={submitHandler}>\n        <BaseInput\n          placeholder={props.subject ? `${props.subject.subject}` : ''}\n          type=\"text\"\n          id=\"subject\"\n          value={enteredSubject}\n          onChange={subjectChangeHandler}\n          label={'Subject title:'}\n        />\n\n        <div>\n          <button type=\"submit\" className=\"add-btn\">\n            {props.subject ? 'save changes' : 'add subject'}\n          </button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default SubjectForm;\n","import React from 'react';\nimport db from '../firebase';\nimport SubjectForm from './SubjectForm';\n\nconst AddNewSubject = () => {\n  const addSubjectHandler = subjectData => {\n    db.collection('subjects')\n      .add(subjectData)\n      .then(docRef => {});\n  };\n\n  return <SubjectForm onAddSubject={addSubjectHandler} />;\n};\n\nexport default AddNewSubject;\n","import AddNewSubject from '../../components/subjects/AddNewSubject';\nconst AddSubjectPage = () => {\n  return <AddNewSubject />;\n};\n\nexport default AddSubjectPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport SubjectForm from './SubjectForm';\n\nconst EditSubject = () => {\n  const params = useParams();\n  const [subject, setSubject] = useState({});\n  let subjectRef = db.collection('subjects').doc(params.id);\n  let profRef = db.collection('profesors');\n\n  useEffect(() => {\n    subjectRef.get().then(doc => {\n      const subject = doc.data();\n      setSubject(subject);\n    });\n  }, []);\n\n  const changeHandler = editedSubject => {\n    subjectRef.update({ subject: editedSubject.subject });\n  };\n\n  return <SubjectForm onAddSubject={changeHandler} subject={subject} />;\n};\n\nexport default EditSubject;\n","import EditSubject from '../../components/subjects/EditSubject';\n\nconst EditSubjectPage = () => {\n  return <EditSubject />;\n};\n\nexport default EditSubjectPage;\n","import { useParams } from 'react-router';\r\nimport Card from '../UI/Card';\r\n\r\nconst ProfessorDetailsTest = props => {\r\n  const params = useParams();\r\n  const professorId = params.id;\r\n\r\n  const professor = props.userProfessors.find(x => x.id === professorId);\r\n\r\n  return (\r\n    <Card>\r\n      <h2>{professor.fName} info:</h2>\r\n\r\n      <table id=\"details-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>subject</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{professor.fName} </span>\r\n            </td>\r\n            <td>\r\n              <span>{professor.lName} </span>\r\n            </td>\r\n            {professor.subject === '' ? (\r\n              <td>not teaching yet</td>\r\n            ) : (\r\n              <td>\r\n                {\r\n                  props.userSubjects.find(x => x.id === professor.subject)\r\n                    .subject\r\n                }\r\n              </td>\r\n            )}\r\n            <td>{professorId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfessorDetailsTest;\r\n","import { useParams } from 'react-router';\r\nimport { Table } from 'reactstrap';\r\nimport Card from '../UI/Card';\r\n\r\nconst StudentDetailsTest = props => {\r\n  const params = useParams();\r\n  const studentId = params.id;\r\n\r\n  const student = props.userStudents.find(x => x.id === studentId);\r\n\r\n  return (\r\n    <Card>\r\n      <h2>\r\n        {student.fName} {student.lName} info:\r\n      </h2>\r\n      <Table className=\"mt-3 mb-5\">\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>date of birth</th>\r\n            <th>password</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{student.fName}</td>\r\n            <td>{student.lName}</td>\r\n            <td>{student.year}</td>\r\n            <td>{student.password}</td>\r\n            <td>{studentId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      <h4>Subjects that {student.fName} attend:</h4>\r\n      <Table striped className=\"student-details-dable\">\r\n        <thead>\r\n          <tr>\r\n            <th>subject</th>\r\n            <th>professor</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {props.userSubjects.map(x => {\r\n            const prof = props.userProfessors.find(y => y.id === x.professor);\r\n\r\n            if (Object.keys(student.subjects).includes(x.id)) {\r\n              return (\r\n                <tr key={x.id}>\r\n                  <td className=\"w50-td\">{x.subject}</td>\r\n\r\n                  <td className=\"w50-td\">\r\n                    {prof.fName} {prof.lName}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StudentDetailsTest;\r\n","import { useParams } from 'react-router';\r\nimport Card from '../UI/Card';\r\n\r\nconst SubjectDetailsTest = props => {\r\n  const params = useParams();\r\n  const subjectId = params.id;\r\n\r\n  const subject = props.userSubjects.find(x => x.id === subjectId);\r\n  const professor = props.userProfessors.find(x => x.id === subject.professor);\r\n  const attendingStudents = props.userStudents.filter(x =>\r\n    Object.keys(x.subjects).includes(subjectId)\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <h2>{subject.subject} info:</h2>\r\n\r\n      <table id=\"details-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>title</th>\r\n            <th>professor</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{subject.subject} </span>\r\n            </td>\r\n            <td>\r\n              <span>\r\n                {professor.fName} {professor.lName}\r\n              </span>\r\n            </td>\r\n            <td>{subjectId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Student that attend this subject:</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {attendingStudents.map(x => (\r\n            <tr key={x.id}>\r\n              <td>\r\n                {x.fName} {x.lName}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SubjectDetailsTest;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport db from '../firebase';\r\nimport ProfessorDetailsTest from '../professors/ProfessorDetailsTest';\r\nimport StudentDetailsTest from '../students/StudentDetailsTest';\r\nimport SubjectDetailsTest from '../subjects/SubjectDetailsTest';\r\nimport Card from '../UI/Card';\r\n\r\nconst LoadingData = () => {\r\n  const [userSubjects, setUserSubjects] = useState({});\r\n  const [userStudents, setUserStudents] = useState([]);\r\n  const [userProfessors, setUserProfessors] = useState([]);\r\n  const [isLoadedStudents, setIsLoadedStudents] = useState(false);\r\n  const [isLoadedSubjects, setIsLoadedSubjects] = useState(false);\r\n  const [isLoadedProfessors, setIsLoadedProfessors] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    if (isLoadedStudents && isLoadedSubjects) {\r\n      setIsLoaded(true);\r\n    }\r\n  }, [isLoadedStudents, isLoadedSubjects, isLoadedProfessors, isLoaded]);\r\n\r\n  useEffect(() => {\r\n    let subjectRef = db.collection('subjects');\r\n    subjectRef\r\n      .get()\r\n      .then(subjects => {\r\n        const profArray = [];\r\n        subjects.forEach(subject => {\r\n          let data = subject.data();\r\n          let { id } = subject;\r\n\r\n          let payload = {\r\n            id,\r\n            ...data,\r\n          };\r\n          profArray.push(payload);\r\n        });\r\n        setUserSubjects(profArray);\r\n      })\r\n      .finally(() => {\r\n        setIsLoadedSubjects(true);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let studentRef = db.collection('students');\r\n    studentRef\r\n      .get()\r\n      .then(students => {\r\n        const studArray = [];\r\n        students.forEach(student => {\r\n          let data = student.data();\r\n          let { id } = student;\r\n\r\n          let payload = {\r\n            id,\r\n            ...data,\r\n          };\r\n          studArray.push(payload);\r\n        });\r\n        setUserStudents(studArray);\r\n      })\r\n      .finally(() => {\r\n        setIsLoadedStudents(true);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let profRef = db.collection('professors');\r\n    profRef\r\n      .get()\r\n      .then(professors => {\r\n        const profArray = [];\r\n        professors.forEach(professor => {\r\n          let data = professor.data();\r\n          let { id } = professor;\r\n\r\n          let payload = {\r\n            id,\r\n            ...data,\r\n          };\r\n          profArray.push(payload);\r\n        });\r\n        setUserProfessors(profArray);\r\n      })\r\n      .finally(() => {\r\n        setIsLoadedProfessors(true);\r\n      });\r\n  }, []);\r\n\r\n  if (!isLoaded) {\r\n    return (\r\n      <Card>\r\n        <h2>Loading...</h2>\r\n      </Card>\r\n    );\r\n  } else {\r\n    if (userSubjects.find(x => x.id === params.id)) {\r\n      return (\r\n        <SubjectDetailsTest\r\n          userSubjects={userSubjects}\r\n          userStudents={userStudents}\r\n          userProfessors={userProfessors}\r\n        />\r\n      );\r\n    } else if (userStudents.find(x => x.id === params.id)) {\r\n      return (\r\n        <StudentDetailsTest\r\n          userSubjects={userSubjects}\r\n          userStudents={userStudents}\r\n          userProfessors={userProfessors}\r\n        />\r\n      );\r\n    } else if (userProfessors.find(x => x.id === params.id)) {\r\n      return (\r\n        <ProfessorDetailsTest\r\n          userSubjects={userSubjects}\r\n          userStudents={userStudents}\r\n          userProfessors={userProfessors}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  //   return;\r\n};\r\n\r\nexport { SubjectDetailsTest };\r\nexport default LoadingData;\r\n","import { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport MainNavigation from './components/layout/MainNavigation';\nimport HomePagePage from './pages/HomePage';\nimport AddPage from './pages/AddPage';\nimport AllStudentsPage from './pages/studentsPage/AllStudentsPage';\nimport AddStudentPage from './pages/studentsPage/AddStudentPage';\nimport EditStudentsPage from './pages/studentsPage/EditStudentPage';\n// import StudentDetailsPage from './pages/studentsPage/StudentDetailsPage';\nimport AllProfessorsPage from './pages/professorsPage/AllProfessorsPage';\nimport AddProfessorsPage from './pages/professorsPage/AddProfessorsPage';\nimport EditProfessorPage from './pages/professorsPage/EditProfessorPage';\n// import ProfessorDetailsPage from './pages/professorsPage/ProffesorDetailsPage';\nimport AllSubjectsPage from './pages/subjectsPage/AllSubjectsPage';\nimport AddSubjectPage from './pages/subjectsPage/AddSubjectPage';\nimport EditSubjectsPage from './pages/subjectsPage/EditSubjectPage';\n// import SubjectDetailsPage from './pages/subjectsPage/SubjectDetailsPage';\n// import SubjectDetailsTest from './components/subjects/SubjectDetailsTest';\nimport LoadingData from './components/comon/LoadingData';\n\nfunction App() {\n  return (\n    <div>\n      <MainNavigation />\n      <Switch>\n        <Route path=\"/students-input\" exact>\n          <HomePagePage />\n        </Route>\n        <Route path=\"/students-input/add\" exact>\n          <AddPage />\n        </Route>\n        <Route path=\"/students-input/all-students\" exact>\n          <AllStudentsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects\" exact>\n          <AllSubjectsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors\" exact>\n          <AllProfessorsPage />\n        </Route>\n        <Route path=\"/students-input/all-students/details/:id\" exact>\n          <LoadingData />\n        </Route>\n        <Route path=\"/students-input/all-students/edit/:id\" exact>\n          <EditStudentsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects/details/:id\" exact>\n          <LoadingData />\n        </Route>\n        <Route path=\"/students-input/all-subjects/edit/:id\" exact>\n          <EditSubjectsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors/details/:id\" exact>\n          <LoadingData />\n        </Route>\n        <Route path=\"/students-input/all-professors/edit/:id\" exact>\n          <EditProfessorPage />\n        </Route>\n        <Route path=\"/students-input/add-new-student\" exact>\n          <AddStudentPage />\n        </Route>\n        <Route path=\"/students-input/add-new-subject\" exact>\n          <AddSubjectPage />\n        </Route>\n        <Route path=\"/students-input/add-new-professor\" exact>\n          <AddProfessorsPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}