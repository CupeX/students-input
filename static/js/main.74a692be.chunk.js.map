{"version":3,"sources":["components/layout/MainNavigation.js","components/UI/Card.js","components/students/StudentDetails.js","components/students/StudentForm.js","components/students/AddNewStudent.js","pages/NewStudent.js","components/students/StudentList.js","components/students/Students.js","pages/AllStudents.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MainNavigation","className","to","Card","props","children","StudentDetails","useState","studentInfo","setStudentInfo","id","useParams","useEffect","fetch","then","response","json","data","student","fName","lName","year","password","StudentForm","React","memo","enteredFName","setEnteredFName","enteredLName","setEnteredLName","enteredYear","setEnteredYear","enteredPass","setEnteredPass","setFormValid","onSubmit","e","preventDefault","alert","onAddStudent","htmlFor","type","value","onChange","target","min","AddNewStudent","method","body","JSON","stringify","headers","NewStudent","StudentsList","match","useRouteMatch","students","map","st","onClick","onChangeInput","url","onRemoveStudent","Students","userStudents","setUserStudents","isLoading","setIsLoading","isViewing","setIsViewing","uniqeId","setUniqeId","key","push","content","sortProperty","sort","a","b","sorted","parse","sortHandler","studentId","prompt","filter","newList","removeStudentHandler","newFName","newLName","changeUserInput","changedStudent","onViewStudent","check","AllStudents","HomePage","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74a692be.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"logo\">\r\n        <Link to=\"/homepage\">CupeX first app</Link>\r\n      </div>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/allstudents\">All students</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/newstudent\">Add NEW student</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Card from '../UI/Card';\r\n\r\nconst StudentDetails = props => {\r\n  const [studentInfo, setStudentInfo] = useState('');\r\n  const params = useParams();\r\n  const id = params.id;\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student/${id}.json`\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        const student = { ...data };\r\n        setStudentInfo(student);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Card>\r\n      <h2>\r\n        {studentInfo.fName} {studentInfo.lName} info:\r\n      </h2>\r\n\r\n      <table id=\"details-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>birth</th>\r\n            <th>password</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{studentInfo.fName} </span>\r\n            </td>\r\n            <td>\r\n              <span>{studentInfo.lName} </span>\r\n            </td>\r\n            <td>{studentInfo.year}</td>\r\n            <td>{studentInfo.password}</td>\r\n            <td>{id}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StudentDetails;\r\n","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\n\nconst StudentForm = React.memo(props => {\n  const [enteredFName, setEnteredFName] = useState('');\n  const [enteredLName, setEnteredLName] = useState('');\n  const [enteredYear, setEnteredYear] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n\n  const [formValid, setFormValid] = useState(false);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (\n      enteredFName === '' ||\n      enteredLName === '' ||\n      enteredYear === '' ||\n      enteredPass === ''\n    ) {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const student = {\n      fName: enteredFName,\n      lName: enteredLName,\n      year: enteredYear,\n      password: enteredPass,\n    };\n\n    props.onAddStudent(student);\n\n    // clearing input fields\n    setEnteredFName('');\n    setEnteredLName('');\n    setEnteredYear('');\n    setEnteredPass('');\n  };\n\n  const fNameChangeHandler = e => {\n    setEnteredFName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setEnteredLName(e.target.value);\n  };\n  const yearChangeHandler = e => {\n    setEnteredYear(e.target.value);\n  };\n  const passChangeHandler = e => {\n    setEnteredPass(e.target.value);\n  };\n\n  return (\n    <section>\n      <Card>\n        <h2>Students input form</h2>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"fName\">First Name:</label>\n            <input\n              type=\"text\"\n              id=\"fName\"\n              value={enteredFName}\n              onChange={fNameChangeHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"lName\">Last Name:</label>\n            <input\n              type=\"text\"\n              id=\"lName\"\n              value={enteredLName}\n              onChange={lNameChangeHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"year\">date of birth:</label>\n            <input\n              type=\"date\"\n              min=\"1980-01-01\"\n              id=\"year\"\n              value={enteredYear}\n              onChange={yearChangeHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"pass\">Password:</label>\n            <input\n              type=\"number\"\n              id=\"pass\"\n              value={enteredPass}\n              onChange={passChangeHandler}\n            />\n          </div>\n          <div>\n            <button type=\"submit\" className=\"add-btn\">\n              Add student\n            </button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default StudentForm;\n","import StudentForm from './StudentForm';\r\n\r\nconst AddNewStudent = () => {\r\n  const addStudentHandler = student => {\r\n    fetch(\r\n      'https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student.json',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(student),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n\r\n    //   this code is not needed anymore in separate file\r\n    // setUserStudents(prevStudents => [\r\n    //   { id: nanoid(), ...student },\r\n    //   ...prevStudents,\r\n    // ]);\r\n  };\r\n\r\n  return <StudentForm onAddStudent={addStudentHandler} />;\r\n};\r\n\r\nexport default AddNewStudent;\r\n","import AddNewStudent from '../components/students/AddNewStudent';\r\n\r\nconst NewStudent = () => {\r\n  return <AddNewStudent />;\r\n};\r\n\r\nexport default NewStudent;\r\n","import { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport NewStudent from '../../pages/NewStudent';\nimport StudentDetails from './StudentDetails';\nimport './students.css';\n\nconst StudentsList = props => {\n  const match = useRouteMatch();\n\n  return (\n    <section>\n      <table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>birth</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.students.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n              <td>{st.year}</td>\n              <td className=\"btn-td\">\n                <button\n                  className=\"view-btn\"\n                  onClick={() => props.onChangeInput(st.id)}\n                >\n                  change\n                </button>\n              </td>\n              <td className=\"btn-td\">\n                <button className=\"view-btn\">\n                  <Link to={`${match.url}/${st.id}`}>info</Link>\n                </button>\n              </td>\n              <td className=\"btn-td\">\n                <button\n                  className=\"delete-btn\"\n                  onClick={() => props.onRemoveStudent(st.id)}\n                >\n                  delete student\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default StudentsList;\n","import React, { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport StudentDetails from './StudentDetails';\n\nimport StudentsList from './StudentList';\n\nconst Students = () => {\n  const [userStudents, setUserStudents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isViewing, setIsViewing] = useState(false);\n  const [uniqeId, setUniqeId] = useState('');\n\n  // loading students from database\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\n      'https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student.json'\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        const students = [];\n\n        for (const key in data) {\n          const student = { id: key, ...data[key] };\n\n          students.push(student);\n        }\n        setIsLoading(false);\n        setUserStudents(students);\n      });\n  }, []);\n\n  // removing student\n  const removeStudentHandler = studentId => {\n    fetch(\n      `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student/${studentId}.json`,\n      {\n        method: 'DELETE',\n      }\n    );\n    const newList = userStudents.filter(st => st.id !== studentId);\n    setUserStudents(newList);\n  };\n\n  // check password to remove student\n  const checkPassHandler = studentId => {\n    const passInput = prompt('enter password');\n    const getPass = userStudents\n      .filter(st => st.id === studentId)\n      .map(st => st.password);\n\n    if (+passInput === +getPass) {\n      removeStudentHandler(studentId);\n    } else {\n      alert('wrong password!');\n    }\n  };\n\n  // change first and last name\n  const changeInputHandler = studentId => {\n    const newFName = prompt('enter new first name');\n    const newLName = prompt('enter new last name');\n    userStudents\n      .filter(st => st.id === studentId)\n      .map(st => {\n        st.fName = newFName;\n        st.lName = newLName;\n      });\n\n    // change UI list\n    const changeUserInput = JSON.parse(JSON.stringify(userStudents));\n    setUserStudents(changeUserInput);\n\n    // update for database\n    const changedStudent = userStudents.filter(st => st.id === studentId);\n\n    fetch(\n      `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student/${studentId}.json`,\n      {\n        method: 'PUT',\n        body: JSON.stringify(...changedStudent),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userStudents.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userStudents));\n    setUserStudents(sorted);\n  };\n\n  // const viewStudentHandler = studentId => {\n  //   const viewStudent = userStudents.filter(st => st.id === studentId);\n  //   console.log(viewStudent);\n  //   console.log('clicked');\n  // };\n\n  const viewStudentHandler = studentId => {\n    const check = userStudents.filter(st => st.id === studentId);\n    setUniqeId(check);\n    setIsViewing(true);\n  };\n\n  const content = (\n    <div>\n      <h2> All Students</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n        <option value=\"year\">Date of Birth</option>\n      </select>\n    </div>\n  );\n\n  if (isLoading) {\n    return (\n      <Card>\n        <h2>Loading...</h2>\n      </Card>\n    );\n  }\n\n  return (\n    <div>\n      <section>\n        <Card>\n          {isViewing && <StudentDetails student={uniqeId} />}\n\n          {!isViewing && content}\n          {!isViewing && (\n            <StudentsList\n              students={userStudents}\n              onRemoveStudent={checkPassHandler}\n              onChangeInput={changeInputHandler}\n              onViewStudent={viewStudentHandler}\n            />\n          )}\n        </Card>\n      </section>\n    </div>\n  );\n};\n\nexport default Students;\n","import Students from '../components/students/Students';\r\n\r\nconst AllStudents = () => {\r\n  return <Students />;\r\n};\r\n\r\nexport default AllStudents;\r\n","import Card from '../components/UI/Card';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Card>\r\n      <h1>Home Page</h1>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { Route, Switch, useParams } from 'react-router-dom';\n\nimport MainNavigation from './components/layout/MainNavigation';\nimport AllStudents from './pages/AllStudents';\nimport NewStudent from './pages/NewStudent';\nimport HomePage from './pages/HomePage';\nimport StudentDetails from './components/students/StudentDetails';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <MainNavigation />\n      <Switch>\n        <Route path=\"/homepage\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/allstudents\" exact>\n          <AllStudents />\n        </Route>\n        <Route path=\"/allstudents/:id\" exact>\n          <StudentDetails />\n        </Route>\n        <Route path=\"/newstudent\" exact>\n          <NewStudent />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}