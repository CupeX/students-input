{"version":3,"sources":["components/layout/MainNavigation.js","components/UI/Card.js","pages/HomePage.js","components/layout/AddPage.js","pages/AddPage.js","components/firebase.js","components/students/StudentsList.js","pages/studentsPage/AllStudentsPage.js","components/comon/BaseInput.js","components/students/StudentForm.js","components/students/AddNewStudent.js","pages/studentsPage/AddStudentPage.js","components/students/EditStudent.js","pages/studentsPage/EditStudentPage.js","components/students/StudentDetails.js","pages/studentsPage/StudentDetailsPage.js","components/professors/ProfessorsList.js","components/professors/Profesors.js","pages/professorsPage/AllProfessorsPage.js","components/professors/ProfessorForm.js","components/professors/AddNewProfessor.js","pages/professorsPage/AddProfessorsPage.js","components/professors/EditProfessor.js","pages/professorsPage/EditProfessorPage.js","components/professors/ProfessorDetails.js","pages/professorsPage/ProffesorDetailsPage.js","components/subjects/AddProfToSubjectList.js","components/subjects/ModalProfList.js","components/subjects/AddStudentToSubjectList.js","components/subjects/ModalStudentsList.js","components/subjects/SubjectsList.js","pages/subjectsPage/AllSubjectsPage.js","components/subjects/SubjectForm.js","components/subjects/AddNewSubject.js","pages/subjectsPage/AddSubjectPage.js","components/subjects/EditSubject.js","pages/subjectsPage/EditSubjectPage.js","components/subjects/SubjectDetails.js","pages/subjectsPage/SubjectDetailsPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainNavigation","history","useHistory","className","to","onChange","e","push","testing","target","value","Card","props","children","HomePage","AddNew","AddPage","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","StudentsList","match","useRouteMatch","useState","userStudents","setUserStudents","isLoading","setIsLoading","postRef","collection","useEffect","get","then","students","forEach","student","data","id","payload","find","x","checkPassHandler","studentId","prompt","filter","st","map","password","doc","delete","console","log","removeStudentHandler","alert","content","sortProperty","sort","a","b","sorted","JSON","parse","stringify","sortHandler","fName","lName","year","url","onClick","AllStudentsPage","BaseInput","htmlFor","label","placeholder","type","StudentForm","React","memo","enteredFName","setEnteredFName","enteredLName","setEnteredLName","enteredYear","setEnteredYear","enteredPass","setEnteredPass","setFormValid","setStudent","onSubmit","preventDefault","subjects","onAddStudent","replace","min","AddNewStudent","add","docRef","AddStudentPage","EditStudent","params","useParams","editedStudent","update","EditStudentsPage","StudentDetails","userSubjects","setUserSubjects","userProfessors","setUserProfessors","isLoadedStudents","setIsLoadedStudents","isLoadedSubjects","setIsLoadedSubjects","isLoadedProfessors","setIsLoadedProfessors","isLoaded","setIsLoaded","finally","subjArray","subject","professors","profArray","professor","prof","y","StudentDetailsPage","ProfessorsList","professorId","Profesors","AllProfessorsPage","ProfessorForm","profName","setProfName","profLName","setProfLName","professorData","onAddProfessor","AddNewProfessor","AddProfessorsPage","EditProfessor","setProfessor","editedprofessor","EditProfessorPage","ProfessorDetails","subjectTitle","setSubjectTitle","ProfessorDetailsPage","AddProffesorToSubjectList","style","textAlign","subjectId","onAddProfessorToSubject","ModalProfList","profRef","subjRef","onCloseModal","AddProfToSubjectList","AddStudentToSubjectList","filteredList","Object","keys","includes","onAddStudentToSubject","ModalStudentsList","subjectObj","undefined","set","merge","removeStudent","SubjectsList","setSubjectId","studentsModal","setStudentsModal","professorsModal","setProfessorsModal","onAddProfToSubject","removeSubjectHandler","AllSubjectsPage","SubjectForm","enteredSubject","setEnteredSubject","subjectData","onAddSubject","AddNewSubject","AddSubjectPage","EditSubject","setSubject","subjectRef","editedSubject","EditSubjectPage","SubjectDetails","studArray","SubjectDetailsPage","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e93f3b64.chunk.js","sourcesContent":["import { Link, useHistory } from 'react-router-dom';\n\nimport './MainNavigation.css';\n\nconst MainNavigation = () => {\n  const history = useHistory();\n  const testing = e => {\n    history.push(`/students-input/${e}`);\n  };\n  return (\n    <header>\n      <div className=\"logo\">\n        <Link to=\"/students-input\">CupeX first app</Link>\n      </div>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/students-input/all-students\">Students</Link>\n          </li>\n          <li>\n            <Link to=\"/students-input/all-subjects\">Subjects</Link>\n          </li>\n          <li>\n            <Link to=\"/students-input/all-professors\">Professors</Link>\n          </li>\n          <li>\n            <select\n              className=\"sort-btn\"\n              onChange={e => testing(e.target.value)}\n            >\n              <option value=\"add\">Add new?</option>\n              <option value=\"add-new-student\">Add new student</option>\n              <option value=\"add-new-professor\">Add new profesor</option>\n              <option value=\"add-new-subject\">Add new subject</option>\n            </select>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import Card from '../components/UI/Card';\n\nconst HomePage = () => {\n  return (\n    <Card>\n      <h1>Home Page</h1>\n    </Card>\n  );\n};\n\nexport default HomePage;\n","import { Link } from 'react-router-dom';\nimport Card from '../UI/Card';\n\nimport './index.css';\n\nconst AddNew = () => {\n  return (\n    <Card>\n      <h2>Add new:</h2>\n      <ul className=\"addNewUl\">\n        <li>\n          <Link to=\"/students-input/add-new-student\">\n            <button className=\"change-btn\">student</button>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/students-input/add-new-subject\">\n            <button className=\"change-btn\">subject</button>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/students-input/add-new-professor\">\n            <button className=\"change-btn\">professor</button>\n          </Link>\n        </li>\n      </ul>\n    </Card>\n  );\n};\n\nexport default AddNew;\n","import AddNew from '../components/layout/AddPage';\n\nconst AddPage = () => {\n  return <AddNew />;\n};\n\nexport default AddPage;\n","import firebase from 'firebase';\nrequire('firebase/firestore');\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAmiHfPoCndQtpGB3sdhvNAnzER_NYqRq0',\n  authDomain: 'students-input.firebaseapp.com',\n  databaseURL:\n    'https://students-input-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'students-input',\n  storageBucket: 'students-input.appspot.com',\n  messagingSenderId: '1037427824217',\n  appId: '1:1037427824217:web:edad276ef09ea0b4688348',\n  measurementId: 'G-459YJZBEBM',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nvar db = firebase.firestore();\n\n// export const auth = firebase.auth();\nexport const firestore = firebase.firestore;\nexport default db;\n","import { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport db from '../firebase';\nimport Card from '../UI/Card';\n\nimport './students.css';\n\nconst StudentsList = () => {\n  const match = useRouteMatch();\n  const [userStudents, setUserStudents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  let postRef = db.collection('students');\n\n  useEffect(() => {\n    postRef.get().then(students =>\n      students.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userStudents.find(x => (x.id = id))) {\n          setUserStudents(students => [...students, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n\n  const removeStudentHandler = studentId => {\n    postRef\n      .doc(studentId)\n      .delete()\n      .then(() => {\n        console.log('Student successfully deleted!');\n      });\n  };\n\n  const checkPassHandler = studentId => {\n    const passInput = prompt('enter password');\n    const getPass = userStudents\n      .filter(st => st.id === studentId)\n      .map(st => st.password);\n\n    if (+passInput === +getPass) {\n      removeStudentHandler(studentId);\n      console.log('student deleted');\n    } else {\n      alert('wrong password!');\n    }\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userStudents.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userStudents));\n    setUserStudents(sorted);\n  };\n\n  let content = (\n    <div>\n      <h2> All Students</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n        <option value=\"year\">Date of Birth</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {isLoading && <h2>Loading...</h2>}\n      {userStudents.map(st => (\n        <div className=\"item-wrapper\" key={st.id} id={st.id}>\n          <div className=\"info-wrapper\">\n            <span>student: </span>\n            <span>{st.fName}</span>\n            <span>{st.lName},</span>\n            <span>born: {st.year}</span>\n          </div>\n          <div className=\"btn-wrapper\">\n            <Link to={`${match.url}/details/${st.id}`}>\n              <button className=\"info-btn\">&#8505;</button>\n            </Link>\n            <Link to={`${match.url}/edit/${st.id}`}>\n              <button className=\"change-btn\">edit</button>\n            </Link>\n            <button\n              className=\"delete-btn\"\n              onClick={() => checkPassHandler(st.id)}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n      ))}\n    </Card>\n  );\n};\n\nexport default StudentsList;\n","import StudentsList from '../../components/students/StudentsList';\n\nconst AllStudentsPage = () => {\n  return <StudentsList />;\n};\n\nexport default AllStudentsPage;\n","import React from 'react';\n\nconst BaseInput = props => {\n  return (\n    <div className=\"form-control\">\n      <label htmlFor={props.id}>{props.label}</label>\n      <input\n        placeholder={props.placeholder}\n        type={props.type}\n        id={props.fName}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    </div>\n  );\n};\n\nexport default BaseInput;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst StudentForm = React.memo(props => {\n  const [enteredFName, setEnteredFName] = useState('');\n  const [enteredLName, setEnteredLName] = useState('');\n  const [enteredYear, setEnteredYear] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n  const [formValid, setFormValid] = useState(false);\n  const [student, setStudent] = useState({});\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (\n      enteredFName === '' ||\n      enteredLName === '' ||\n      enteredYear === '' ||\n      enteredPass === ''\n    ) {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const student = {\n      fName: enteredFName,\n      lName: enteredLName,\n      year: enteredYear,\n      password: enteredPass,\n      subjects: [],\n    };\n    setStudent(student);\n    props.onAddStudent(student);\n\n    // clearing input fields\n    setEnteredFName('');\n    setEnteredLName('');\n    setEnteredYear('');\n    setEnteredPass('');\n    history.replace('/students-input/all-students');\n  };\n\n  const fNameChangeHandler = e => {\n    setEnteredFName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setEnteredLName(e.target.value);\n  };\n  const yearChangeHandler = e => {\n    setEnteredYear(e.target.value);\n  };\n  const passChangeHandler = e => {\n    setEnteredPass(e.target.value);\n  };\n\n  return (\n    <section>\n      <Card>\n        <h2>Students input form</h2>\n        <form onSubmit={submitHandler}>\n          <BaseInput\n            type=\"text\"\n            id=\"fName\"\n            onChange={fNameChangeHandler}\n            placeholder={props.student ? `${props.student.fName}` : ''}\n            value={enteredFName}\n            label={'First name:'}\n          />\n\n          <BaseInput\n            type=\"text\"\n            id=\"lName\"\n            onChange={lNameChangeHandler}\n            placeholder={props.student ? `${props.student.lName}` : ''}\n            value={enteredLName}\n            label={'Last name:'}\n          />\n\n          <BaseInput\n            type=\"date\"\n            min=\"1111-01-01\"\n            id=\"year\"\n            onChange={yearChangeHandler}\n            placeholder={props.student ? `${props.student.year}` : ''}\n            value={enteredYear}\n            label={'Date of Birth:'}\n          />\n\n          <BaseInput\n            placeholder={props.student ? `${props.student.password}` : ''}\n            type=\"number\"\n            id=\"pass\"\n            value={enteredPass}\n            onChange={passChangeHandler}\n            label={'Password:'}\n          />\n\n          <div>\n            <button type=\"submit\" className=\"add-btn\">\n              {props.student ? 'save changes' : 'add student'}\n            </button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default StudentForm;\n","import React from 'react';\nimport db from '../firebase';\nimport StudentForm from './StudentForm';\n\nconst AddNewStudent = () => {\n  const addStudentHandler = student => {\n    db.collection('students')\n      .add(student)\n      .then(docRef => {});\n  };\n\n  return <StudentForm onAddStudent={addStudentHandler} />;\n};\n\nexport default AddNewStudent;\n","import AddNewStudent from '../../components/students/AddNewStudent';\n\nconst AddStudentPage = () => {\n  return <AddNewStudent />;\n};\n\nexport default AddStudentPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport StudentForm from './StudentForm';\n\nconst EditStudent = () => {\n  const params = useParams();\n  const [student, setStudent] = useState({});\n  let postRef = db.collection('students').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const student = doc.data();\n      setStudent(student);\n    });\n  }, []);\n\n  const changeHandler = editedStudent => {\n    postRef.update(editedStudent).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <StudentForm onAddStudent={changeHandler} student={student} />;\n};\n\nexport default EditStudent;\n","import EditStudent from '../../components/students/EditStudent';\n\nconst EditStudentsPage = () => {\n  return <EditStudent />;\n};\n\nexport default EditStudentsPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Card from '../UI/Card';\nimport db from '../firebase';\n\nconst StudentDetails = () => {\n  const [student, setStudent] = useState({});\n  const [userSubjects, setUserSubjects] = useState([]);\n  const [userProfessors, setUserProfessors] = useState([]);\n  const [isLoadedStudents, setIsLoadedStudents] = useState(false);\n  const [isLoadedSubjects, setIsLoadedSubjects] = useState(false);\n  const [isLoadedProfessors, setIsLoadedProfessors] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const params = useParams();\n  const studentId = params.id;\n\n  useEffect(() => {\n    if (isLoadedStudents && isLoadedSubjects && isLoadedProfessors) {\n      setIsLoaded(true);\n    }\n  }, [isLoadedStudents, isLoadedSubjects, isLoadedProfessors, isLoaded]);\n\n  useEffect(() => {\n    let postRef = db.collection('students').doc(studentId);\n\n    postRef\n      .get()\n      .then(doc => {\n        let data = doc.data();\n        setStudent(data);\n      })\n      .finally(() => {\n        setIsLoadedStudents(true);\n      });\n  }, [studentId]);\n\n  useEffect(() => {\n    let subjectRef = db.collection('subjects');\n    subjectRef\n      .get()\n      .then(subjects => {\n        const subjArray = [];\n        subjects.forEach(subject => {\n          let data = subject.data();\n          let { id } = subject;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          subjArray.push(payload);\n        });\n        setUserSubjects(subjArray);\n      })\n      .finally(() => {\n        setIsLoadedSubjects(true);\n      });\n  }, []);\n\n  useEffect(() => {\n    let profRef = db.collection('professors');\n    profRef\n      .get()\n      .then(professors => {\n        const profArray = [];\n        professors.forEach(professor => {\n          let data = professor.data();\n          let { id } = professor;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          profArray.push(payload);\n        });\n        setUserProfessors(profArray);\n      })\n      .finally(() => {\n        setIsLoadedProfessors(true);\n      });\n  }, []);\n\n  if (!isLoaded) {\n    return (\n      <Card>\n        <h2>Loading student...</h2>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <h2>\n        {student.fName} {student.lName} info:\n      </h2>\n      <table className=\"student-details-dable\">\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>date of birth</th>\n            <th>password</th>\n            <th>unique id</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{student.fName}</td>\n            <td>{student.lName}</td>\n            <td>{student.year}</td>\n            <td>{student.password}</td>\n            <td>{studentId}</td>\n          </tr>\n        </tbody>\n      </table>\n      <table className=\"student-details-dable\">\n        <thead>\n          <tr>\n            <th>Subjects that {student.fName} attend:</th>\n          </tr>\n          <tr>\n            <th>subject</th>\n            <th>professor</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {userSubjects.map(x => {\n            const prof = userProfessors.find(y => y.id === x.professor);\n\n            return (\n              <tr key={x.id}>\n                <td className=\"w50-td\">{x.subject}</td>\n\n                <td className=\"w50-td\">\n                  {prof.fName} {prof.lName}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Card>\n  );\n};\n\nexport default StudentDetails;\n","import StudentDetails from '../../components/students/StudentDetails';\n\nconst StudentDetailsPage = props => {\n  return <StudentDetails />;\n};\nexport default StudentDetailsPage;\n","import { Link, useRouteMatch } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport db from '../firebase';\n\nconst ProfessorsList = props => {\n  const match = useRouteMatch();\n\n  const [userProfessors, setUserProfessors] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  let postRef = db.collection('professors');\n\n  useEffect(() => {\n    postRef.get().then(professors =>\n      professors.forEach(professor => {\n        let data = professor.data();\n        let { id } = professor;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userProfessors.find(x => (x.id = id))) {\n          setUserProfessors(professors => [...professors, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n\n  const removeProfessorHandler = professorId => {\n    postRef\n      .doc(professorId)\n      .delete()\n      .then(() => {\n        console.log('professor successfully deleted!');\n      });\n  };\n\n  if (isLoading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <section>\n      {userProfessors.map(st => (\n        <div className=\"item-wrapper\" key={st.id} id={st.id}>\n          <div className=\"info-wrapper\">\n            <span>professor: </span>\n            <span>{st.fName} </span>\n            <span>{st.lName} </span>\n          </div>\n          <div className=\"btn-wrapper\">\n            <Link to={`${match.url}/details/${st.id}`}>\n              <button className=\"info-btn\">&#8505;</button>\n            </Link>\n            <Link to={`${match.url}/edit/${st.id}`}>\n              <button className=\"change-btn\">edit</button>\n            </Link>\n            <button\n              className=\"delete-btn\"\n              onClick={() => removeProfessorHandler(st.id)}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n      ))}\n    </section>\n  );\n};\n\nexport default ProfessorsList;\n","import { useState } from 'react';\nimport Card from '../UI/Card';\nimport ProfessorsList from './ProfessorsList';\n\nconst Profesors = () => {\n  const [userProfessors, setUserProfessors] = useState([]);\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userProfessors.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userProfessors));\n    setUserProfessors(sorted);\n  };\n\n  const content = (\n    <div>\n      <h2> All Professors</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      <ProfessorsList />\n    </Card>\n  );\n};\n\nexport default Profesors;\n","import Profesors from '../../components/professors/Profesors';\n\nconst AllProfessorsPage = () => {\n  return <Profesors />;\n};\n\nexport default AllProfessorsPage;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport Card from '../UI/Card';\n\nconst ProfessorForm = React.memo(props => {\n  console.log('prof form props', props);\n  const [profName, setProfName] = useState('');\n  const [profLName, setProfLName] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    console.log(e);\n    e.preventDefault();\n\n    // basic input validation\n    if (profName === '' || profLName === '') {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const professorData = {\n      fName: profName,\n      lName: profLName,\n      subject: '',\n    };\n\n    props.onAddProfessor(professorData);\n\n    // clearing input fields\n    setProfName('');\n    setProfLName('');\n\n    history.replace('/students-input/all-professors');\n  };\n\n  const fNameChangeHandler = e => {\n    setProfName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setProfLName(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Professor input form</h2>\n      <form onSubmit={submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"fName\">first name</label>\n          <input\n            placeholder={props.professor ? `${props.professor.fName}` : ''}\n            type=\"text\"\n            id=\"fName\"\n            value={profName}\n            onChange={fNameChangeHandler}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"lName\">last name</label>\n          <input\n            placeholder={props.professor ? `${props.professor.lName}` : ''}\n            type=\"text\"\n            id=\"lName\"\n            value={profLName}\n            onChange={lNameChangeHandler}\n          />\n        </div>\n        <div>\n          <button type=\"submit\" className=\"add-btn\">\n            Add student\n          </button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default ProfessorForm;\n","import React from 'react';\nimport db from '../firebase';\nimport ProfessorForm from './ProfessorForm';\n\nconst AddNewProfessor = () => {\n  const addProfessorHandler = professorData => {\n    db.collection('professors')\n      .add(professorData)\n      .then(docRef => {});\n  };\n\n  return <ProfessorForm onAddProfessor={addProfessorHandler} />;\n};\n\nexport default AddNewProfessor;\n","import AddNewProfessor from '../../components/professors/AddNewProfessor';\n\nconst AddProfessorsPage = () => {\n  return <AddNewProfessor />;\n};\n\nexport default AddProfessorsPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport ProfessorForm from './ProfessorForm';\n\nconst EditProfessor = () => {\n  const params = useParams();\n  const [professor, setProfessor] = useState({});\n  let postRef = db.collection('professors').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const professor = doc.data();\n      setProfessor(professor);\n    });\n  }, []);\n\n  const changeHandler = editedprofessor => {\n    postRef.update(editedprofessor).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <ProfessorForm onAddProfessor={changeHandler} professor={professor} />;\n};\n\nexport default EditProfessor;\n","import EditProfessor from '../../components/professors/EditProfessor';\n\nconst EditProfessorPage = () => {\n  return <EditProfessor />;\n};\n\nexport default EditProfessorPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Card from '../UI/Card';\nimport db from '../firebase';\n\nconst ProfessorDetails = () => {\n  const [professor, setProfessor] = useState({});\n  const [userSubjects, setUserSubjects] = useState([]);\n  const [isLoadedProfessors, setIsLoadedProfessors] = useState(false);\n  const [isLoadedSubjects, setIsLoadedSubjects] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [subjectTitle, setSubjectTitle] = useState('not assigned yet');\n\n  const params = useParams();\n  const professorId = params.id;\n\n  useEffect(() => {\n    if (isLoadedSubjects && isLoadedProfessors) {\n      setIsLoaded(true);\n      if (professor.subject !== '') {\n        const subject = userSubjects.find(\n          x => x.id === professor.subject\n        ).subject;\n        setSubjectTitle(subject);\n      }\n    }\n  }, [isLoadedSubjects, isLoadedProfessors, isLoaded]);\n\n  useEffect(() => {\n    db.collection('professors')\n      .doc(professorId)\n      .get()\n      .then(doc => {\n        let data = doc.data();\n        setProfessor(data);\n        setIsLoadedProfessors(true);\n      });\n  }, [professorId]);\n\n  useEffect(() => {\n    let subjectRef = db.collection('subjects');\n    subjectRef\n      .get()\n      .then(subjects => {\n        const subjArray = [];\n        subjects.forEach(subject => {\n          let data = subject.data();\n          let { id } = subject;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          subjArray.push(payload);\n        });\n        setUserSubjects(subjArray);\n      })\n      .finally(() => {\n        setIsLoadedSubjects(true);\n      });\n  }, []);\n\n  if (!isLoaded) {\n    return (\n      <Card>\n        <h2>Loading professor..</h2>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <h2>{professor.fName} info:</h2>\n\n      <table id=\"details-table\">\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>subject</th>\n            <th>unique id</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <span>{professor.fName} </span>\n            </td>\n            <td>\n              <span>{professor.lName} </span>\n            </td>\n            <td>{subjectTitle}</td>\n            <td>{professorId}</td>\n          </tr>\n        </tbody>\n      </table>\n    </Card>\n  );\n};\n\nexport default ProfessorDetails;\n","import ProfessorDetails from '../../components/professors/ProfessorDetails';\n\nconst ProfessorDetailsPage = props => {\n  return <ProfessorDetails />;\n};\nexport default ProfessorDetailsPage;\n","const AddProffesorToSubjectList = props => {\n  return (\n    <section>\n      <h2>all professors list</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>teaching</th>\n            <th style={{ textAlign: 'end' }}>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.professors.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n              <td>{st.subject === props.subjectId ? 'yes' : 'x'}</td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => props.onAddProfessorToSubject(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default AddProffesorToSubjectList;\n","import { useState, useEffect } from 'react';\nimport db from '../firebase';\nimport AddProfToSubjectList from './AddProfToSubjectList';\n\nimport './Modal.css';\n\nconst ModalProfList = props => {\n  const subjectId = props.subjectId;\n  const subjectObj = props.userSubjects.find(x => x.id === subjectId);\n  const { subject } = subjectObj;\n\n  const [userProfessors, setUserProfessors] = useState([]);\n  let profRef = db.collection('professors');\n  let subjRef = db.collection('subjects');\n  // let studentRef = db.collection('students');\n\n  useEffect(() => {\n    profRef.get().then(professors =>\n      professors.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready professors in list\n        if (!userProfessors.find(x => (x.id = id))) {\n          setUserProfessors(professors => [...professors, payload]);\n        }\n      })\n    );\n  }, []);\n\n  const addProfessorToSubjectHandler = professorId => {\n    // profRef.doc(professorId).update({ subject: { subjectId, title: subject } });\n    profRef.doc(professorId).update({ subject: subjectId });\n    subjRef.doc(subjectId).update({ professor: professorId });\n\n    // const profObj = userProfessors.find(x => x.id === professorId);\n    // const { fName, lName } = profObj;\n\n    // studentRef.get().then(x => {\n    //   x.forEach(doc => {\n    //     doc.ref.set(\n    //       { subjects: { [subjectId]: { fName, lName }, subject: subject } },\n    //       { merge: true }\n    //     );\n    //   });\n    // });\n\n    // [subjectId]: { professor: { fName, lName } },\n\n    // const updatedSubjectInAllStudents = userStudents.map(x => {\n    //   if (x.subjects && Object.keys(x.subjects).includes(subjectId)) {\n    //     x.subjects[subjectId].title = newSubject;\n    //   }\n    //   return x;\n    // });\n    // setUserStudents(updatedSubjectInAllStudents);\n  };\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddProfToSubjectList\n        subjectId={subjectId}\n        professors={userProfessors}\n        onAddProfessorToSubject={addProfessorToSubjectHandler}\n      />\n    </div>\n  );\n};\n\nexport default ModalProfList;\n","const AddStudentToSubjectList = props => {\n  const filteredList = props.students.filter(\n    x => !Object.keys(x.subjects).includes(props.subjectId)\n  );\n\n  return (\n    <section>\n      <table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th style={{ textAlign: 'end' }}>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredList.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => props.onAddStudentToSubject(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default AddStudentToSubjectList;\n","import { useEffect, useState } from 'react';\nimport db from '../firebase';\nimport AddStudentToSubjectList from './AddStudentToSubjectList';\nimport './Modal.css';\n\nconst ModalStudentsList = props => {\n  const subjectId = props.subjectId;\n  const subjectObj = props.userSubjects.find(x => x.id === subjectId);\n  let { subject, professor } = subjectObj;\n\n  const [userStudents, setUserStudents] = useState([]);\n  let postRef = db.collection('students');\n\n  useEffect(() => {\n    postRef.get().then(students =>\n      students.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userStudents.find(x => (x.id = id))) {\n          setUserStudents(students => [...students, payload]);\n        }\n      })\n    );\n  }, []);\n\n  const addStudentToSubjectHandler = studentId => {\n    if (professor === undefined) {\n      professor = '';\n    } else {\n      postRef\n        .doc(studentId)\n        .set({ subjects: { [subjectId]: '' } }, { merge: true });\n    }\n\n    const removeStudent = userStudents.filter(x => x.id !== studentId);\n    setUserStudents(removeStudent);\n  };\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddStudentToSubjectList\n        subjectId={subjectId}\n        students={userStudents}\n        onAddStudentToSubject={addStudentToSubjectHandler}\n      />\n    </div>\n  );\n};\n\nexport default ModalStudentsList;\n","import { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport db from '../firebase';\nimport Card from '../UI/Card';\nimport ModalProfList from './ModalProfList';\nimport ModalStudentsList from './ModalStudentsList';\nimport LoadSubjects from './LoadSubjects';\n\nconst SubjectsList = props => {\n  const match = useRouteMatch();\n  const [userSubjects, setUserSubjects] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [subjectId, setSubjectId] = useState('');\n  const [studentsModal, setStudentsModal] = useState(false);\n  const [professorsModal, setProfessorsModal] = useState(false);\n\n  useEffect(() => {\n    let subjectRef = db.collection('subjects');\n    subjectRef.get().then(subjects =>\n      subjects.forEach(subject => {\n        let data = subject.data();\n        let { id } = subject;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userSubjects.find(x => (x.id = id))) {\n          setUserSubjects(subjects => [...subjects, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n  // useEffect(() => {\n  //   // LoadSubjects();\n  //   // const payload = LoadSubjects();\n  //   // console.log(payload);\n  //   // if (!userSubjects.find(x => (x.id = id))) {\n  //   //   setUserSubjects(subjects => [...subjects, payload]);\n  //   //   setIsLoading(false);\n  //   // }\n  // }, [userSubjects]);\n\n  const removeSubjectHandler = subjectId => {\n    let subjectRef = db.collection('subjects');\n    subjectRef\n      .doc(subjectId)\n      .delete()\n      .then(() => {\n        console.log('Subject successfully deleted!');\n      });\n  };\n\n  const onAddStudentToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setStudentsModal(true);\n  };\n\n  const closeStudentsModal = () => {\n    setStudentsModal(false);\n  };\n\n  const onAddProfToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setProfessorsModal(true);\n  };\n\n  const closeProfessorsModal = () => {\n    setProfessorsModal(false);\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userSubjects.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userSubjects));\n    setUserSubjects(sorted);\n  };\n\n  let content = (\n    <div>\n      <h2> All Subjects</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {isLoading && <h2>Loading...</h2>}\n      {studentsModal && (\n        <ModalStudentsList\n          onCloseModal={closeStudentsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      {professorsModal && (\n        <ModalProfList\n          onCloseModal={closeProfessorsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      {userSubjects.map(st => (\n        <div className=\"item-wrapper\" key={st.id} id={st.id}>\n          <div className=\"info-wrapper\">\n            <span>subject: {st.subject}</span>\n          </div>\n          <div className=\"btn-wrapper\">\n            <Link to={`${match.url}/details/${st.id}`}>\n              <button className=\"info-btn\">&#8505;</button>\n            </Link>\n            <Link to={`${match.url}/edit/${st.id}`}>\n              <button className=\"change-btn\">edit</button>\n            </Link>\n            <button\n              className=\"change-btn\"\n              onClick={() => onAddStudentToSubject(st.id)}\n            >\n              add student\n            </button>\n            <button\n              className=\"change-btn\"\n              onClick={() => onAddProfToSubject(st.id)}\n            >\n              add professor\n            </button>\n\n            <button\n              className=\"delete-btn\"\n              onClick={() => removeSubjectHandler(st.id)}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n      ))}\n    </Card>\n  );\n};\n\nexport default SubjectsList;\n","import SubjectsList from '../../components/subjects/SubjectsList';\n\nconst AllSubjectsPage = () => {\n  return <SubjectsList />;\n};\n\nexport default AllSubjectsPage;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport Card from '../UI/Card';\n\nconst SubjectForm = React.memo(props => {\n  const [enteredSubject, setEnteredSubject] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (enteredSubject === '') {\n      setFormValid(false);\n      alert('pls enter subject name');\n      return;\n    }\n    setFormValid(true);\n\n    const subjectData = {\n      subject: enteredSubject,\n    };\n\n    props.onAddSubject(subjectData);\n\n    setEnteredSubject('');\n\n    history.replace('/students-input/all-subjects');\n  };\n\n  const subjectChangeHandler = e => {\n    setEnteredSubject(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Subject input form</h2>\n      <form onSubmit={submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"subject\">subject name</label>\n          <input\n            placeholder={props.subject ? `${props.subject.subject}` : ''}\n            type=\"text\"\n            id=\"subject\"\n            value={enteredSubject}\n            onChange={subjectChangeHandler}\n          />\n        </div>\n        <div>\n          <button type=\"submit\" className=\"add-btn\">\n            {props.subject ? 'save changes' : 'add subject'}\n          </button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default SubjectForm;\n","import React from 'react';\nimport db from '../firebase';\nimport SubjectForm from './SubjectForm';\n\nconst AddNewSubject = () => {\n  const addSubjectHandler = subjectData => {\n    db.collection('subjects')\n      .add(subjectData)\n      .then(docRef => {});\n  };\n\n  return <SubjectForm onAddSubject={addSubjectHandler} />;\n};\n\nexport default AddNewSubject;\n","import AddNewSubject from '../../components/subjects/AddNewSubject';\nconst AddSubjectPage = () => {\n  return <AddNewSubject />;\n};\n\nexport default AddSubjectPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport SubjectForm from './SubjectForm';\n\nconst EditSubject = () => {\n  const params = useParams();\n  const [subject, setSubject] = useState({});\n  let subjectRef = db.collection('subjects').doc(params.id);\n  let profRef = db.collection('profesors');\n\n  useEffect(() => {\n    subjectRef.get().then(doc => {\n      const subject = doc.data();\n      setSubject(subject);\n    });\n  }, []);\n\n  const changeHandler = editedSubject => {\n    subjectRef.update({ subject: editedSubject.subject });\n  };\n\n  return <SubjectForm onAddSubject={changeHandler} subject={subject} />;\n};\n\nexport default EditSubject;\n","import EditSubject from '../../components/subjects/EditSubject';\n\nconst EditSubjectPage = () => {\n  return <EditSubject />;\n};\n\nexport default EditSubjectPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Card from '../UI/Card';\nimport db from '../firebase';\n\nconst SubjectDetails = () => {\n  const [subject, setSubject] = useState({});\n  const [userStudents, setUserStudents] = useState([]);\n  const [userProfessors, setUserProfessors] = useState([]);\n  const [isLoadedStudents, setIsLoadedStudents] = useState(false);\n  const [isLoadedSubjects, setIsLoadedSubjects] = useState(false);\n  const [isLoadedProfessors, setIsLoadedProfessors] = useState(false);\n\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const params = useParams();\n  const subjectId = params.id;\n\n  useEffect(() => {\n    if (isLoadedStudents && isLoadedSubjects) {\n      setIsLoaded(true);\n    }\n  }, [isLoadedStudents, isLoadedSubjects, isLoadedProfessors, isLoaded]);\n\n  useEffect(() => {\n    db.collection('subjects')\n      .doc(subjectId)\n      .get()\n      .then(doc => {\n        let data = doc.data();\n        setSubject(data);\n      })\n      .finally(() => {\n        setIsLoadedSubjects(true);\n      });\n  }, [subjectId]);\n\n  useEffect(() => {\n    let studentRef = db.collection('students');\n    studentRef\n      .get()\n      .then(students => {\n        const studArray = [];\n        students.forEach(student => {\n          let data = student.data();\n          let { id } = student;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          studArray.push(payload);\n        });\n        setUserStudents(studArray);\n      })\n      .finally(() => {\n        setIsLoadedStudents(true);\n      });\n  }, []);\n\n  useEffect(() => {\n    let profRef = db.collection('professors');\n    profRef\n      .get()\n      .then(professors => {\n        const profArray = [];\n        professors.forEach(professor => {\n          let data = professor.data();\n          let { id } = professor;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          profArray.push(payload);\n        });\n        setUserProfessors(profArray);\n      })\n      .finally(() => {\n        setIsLoadedProfessors(true);\n      });\n  }, []);\n\n  const prof = userProfessors.find(y => y.id === subject.professor);\n\n  if (!isLoaded) {\n    return (\n      <Card>\n        <h2>Loading subject..</h2>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <h2>{subject.subject} info:</h2>\n\n      <table id=\"details-table\">\n        <thead>\n          <tr>\n            <th>title</th>\n            <th>professor</th>\n            <th>unique id</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <span>{subject.subject} </span>\n            </td>\n            <td>\n              <span>{prof.fName}</span>\n              <span>{prof.lName}</span>\n            </td>\n            <td>{subjectId}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Student that attend this subject:</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userStudents.map(x => (\n            <tr key={x.id}>\n              <td>\n                {x.fName} {x.lName}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Card>\n  );\n};\n\nexport default SubjectDetails;\n","import SubjectDetails from '../../components/subjects/SubjectDetails';\n\nconst SubjectDetailsPage = () => {\n  return <SubjectDetails />;\n};\n\nexport default SubjectDetailsPage;\n","import { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport MainNavigation from './components/layout/MainNavigation';\nimport HomePagePage from './pages/HomePage';\nimport AddPage from './pages/AddPage';\nimport AllStudentsPage from './pages/studentsPage/AllStudentsPage';\nimport AddStudentPage from './pages/studentsPage/AddStudentPage';\nimport EditStudentsPage from './pages/studentsPage/EditStudentPage';\nimport StudentDetailsPage from './pages/studentsPage/StudentDetailsPage';\nimport AllProfessorsPage from './pages/professorsPage/AllProfessorsPage';\nimport AddProfessorsPage from './pages/professorsPage/AddProfessorsPage';\nimport EditProfessorPage from './pages/professorsPage/EditProfessorPage';\nimport ProfessorDetailsPage from './pages/professorsPage/ProffesorDetailsPage';\nimport AllSubjectsPage from './pages/subjectsPage/AllSubjectsPage';\nimport AddSubjectPage from './pages/subjectsPage/AddSubjectPage';\nimport EditSubjectsPage from './pages/subjectsPage/EditSubjectPage';\nimport SubjectDetailsPage from './pages/subjectsPage/SubjectDetailsPage';\n\nfunction App() {\n  return (\n    <div>\n      <MainNavigation />\n      <Switch>\n        <Route path=\"/students-input\" exact>\n          <HomePagePage />\n        </Route>\n        <Route path=\"/students-input/add\" exact>\n          <AddPage />\n        </Route>\n        <Route path=\"/students-input/all-students\" exact>\n          <AllStudentsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects\" exact>\n          <AllSubjectsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors\" exact>\n          <AllProfessorsPage />\n        </Route>\n        <Route path=\"/students-input/all-students/details/:id\" exact>\n          <StudentDetailsPage />\n        </Route>\n        <Route path=\"/students-input/all-students/edit/:id\" exact>\n          <EditStudentsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects/details/:id\" exact>\n          <SubjectDetailsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects/edit/:id\" exact>\n          <EditSubjectsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors/details/:id\" exact>\n          <ProfessorDetailsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors/edit/:id\" exact>\n          <EditProfessorPage />\n        </Route>\n        <Route path=\"/students-input/add-new-student\" exact>\n          <AddStudentPage />\n        </Route>\n        <Route path=\"/students-input/add-new-subject\" exact>\n          <AddSubjectPage />\n        </Route>\n        <Route path=\"/students-input/add-new-professor\" exact>\n          <AddProfessorsPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}