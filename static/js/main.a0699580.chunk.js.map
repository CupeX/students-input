{"version":3,"sources":["components/UI/Card.js","components/students/StudentForm.js","components/students/StudentList.js","components/students/Students.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","children","StudentForm","React","memo","useState","enteredFName","setEnteredFName","enteredLName","setEnteredLName","enteredYear","setEnteredYear","enteredPass","setEnteredPass","onSubmit","e","preventDefault","onAddStudent","fName","lName","year","password","htmlFor","type","id","value","onChange","target","StudentsList","onClick","onSortByFName","students","map","st","onRemoveStudent","Students","userStudents","setUserStudents","student","prevStudents","Math","random","toString","studentId","prompt","newList","filter","removeStudentHandler","alert","sort","a","b","nameA","toUpperCase","nameB","sorted","JSON","parse","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0699580.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\n\r\nconst StudentForm = React.memo((props) => {\r\n  const [enteredFName, setEnteredFName] = useState(\"\");\r\n  const [enteredLName, setEnteredLName] = useState(\"\");\r\n  const [enteredYear, setEnteredYear] = useState(\"\");\r\n  const [enteredPass, setEnteredPass] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onAddStudent({\r\n      fName: enteredFName,\r\n      lName: enteredLName,\r\n      year: enteredYear,\r\n      password: enteredPass,\r\n    });\r\n\r\n    setEnteredFName(\"\");\r\n    setEnteredLName(\"\");\r\n    setEnteredYear(\"\");\r\n    setEnteredPass(\"\");\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <Card>\r\n        <h2>Students input form</h2>\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"fName\">First Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"fName\"\r\n              value={enteredFName}\r\n              onChange={(e) => {\r\n                setEnteredFName(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"lName\">Last Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lName\"\r\n              value={enteredLName}\r\n              onChange={(e) => {\r\n                setEnteredLName(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"year\">Date of birth:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"year\"\r\n              value={enteredYear}\r\n              onChange={(e) => {\r\n                setEnteredYear(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"pass\">Password:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"pass\"\r\n              value={enteredPass}\r\n              onChange={(e) => {\r\n                setEnteredPass(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" className=\" add-btn\">\r\n              Add Ingredient\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default StudentForm;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport students from \"./students.css\";\r\n\r\nconst StudentsList = (props) => {\r\n  return (\r\n    <section>\r\n      <Card>\r\n        <h2>All students</h2>\r\n        <div>\r\n          <button className=\"sort-btn\" onClick={props.onSortByFName}>\r\n            sort by first name\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          {props.students.map((st) => (\r\n            <li key={st.id}>\r\n              <div>\r\n                <span>{st.fName} </span>\r\n                <span>{st.lName} </span>\r\n                <span>{st.year}</span>\r\n              </div>\r\n              <button\r\n                className=\"delete-btn\"\r\n                onClick={() => props.onRemoveStudent(st.id)}\r\n              >\r\n                delete student\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default StudentsList;\r\n","import React, { useState } from \"react\";\r\n\r\nimport StudentForm from \"./StudentForm\";\r\nimport StudentsList from \"./StudentList\";\r\n\r\nconst Students = () => {\r\n  const [userStudents, setUserStudents] = useState([]);\r\n\r\n  const addStudentHandler = (student) => {\r\n    setUserStudents((prevStudents) => [\r\n      ...prevStudents,\r\n      { id: Math.random().toString(), ...student },\r\n    ]);\r\n  };\r\n\r\n  const removeStudentHandler = (studentId) => {\r\n    const newList = userStudents.filter((st) => st.id !== studentId);\r\n    setUserStudents(newList);\r\n  };\r\n\r\n  const checkPassHandler = (studentId) => {\r\n    const passInput = prompt(\"enter password\");\r\n    const passGet = userStudents.map((st) => st.password);\r\n\r\n    if (+passInput === +passGet) {\r\n      removeStudentHandler(studentId);\r\n    } else {\r\n      alert(\"wrong password!\");\r\n    }\r\n  };\r\n\r\n  const sortByFNameHandler = () => {\r\n    userStudents.sort((a, b) => {\r\n      const nameA = a.fName.toUpperCase();\r\n      const nameB = b.fName.toUpperCase();\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    const sorted = JSON.parse(JSON.stringify(userStudents));\r\n    setUserStudents(sorted);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StudentForm onAddStudent={addStudentHandler} />\r\n\r\n      <section>\r\n        <StudentsList\r\n          students={userStudents}\r\n          onRemoveStudent={checkPassHandler}\r\n          onSortByFName={sortByFNameHandler}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","import \"./App.css\";\nimport Students from \"./components/students/Students\";\n\nfunction App() {\n  return <Students />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}