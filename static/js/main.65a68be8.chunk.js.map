{"version":3,"sources":["components/layout/MainNavigation.js","components/UI/Card.js","pages/HomePage.js","components/layout/AddPage.js","pages/AddPage.js","store/data-context.js","components/students/StudentsList.js","pages/studentsPage/AllStudentsPage.js","components/firebase.js","components/comon/BaseInput.js","components/students/StudentForm.js","components/students/AddNewStudent.js","pages/studentsPage/AddStudentPage.js","components/students/EditStudent.js","pages/studentsPage/EditStudentPage.js","components/professors/ProfessorsList.js","pages/professorsPage/AllProfessorsPage.js","components/professors/ProfessorForm.js","components/professors/AddNewProfessor.js","pages/professorsPage/AddProfessorsPage.js","components/professors/EditProfessor.js","pages/professorsPage/EditProfessorPage.js","components/subjects/AddProfToSubjectList.js","components/subjects/ModalProfList.js","components/subjects/AddStudentToSubjectList.js","components/subjects/ModalStudentsList.js","components/subjects/SubjectsList.js","pages/subjectsPage/AllSubjectsPage.js","components/subjects/SubjectForm.js","components/subjects/AddNewSubject.js","pages/subjectsPage/AddSubjectPage.js","components/subjects/EditSubject.js","pages/subjectsPage/EditSubjectPage.js","components/students/StudentDetailsTest.js","components/subjects/SubjectDetailsTest.js","components/professors/ProfessorDetailsTest.js","App.js","reportWebVitals.js","store/DataProvider.js","index.js"],"names":["MainNavigation","history","useHistory","useState","isOpen","setIsOpen","Navbar","className","expand","NavbarBrand","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","onChange","e","push","testing","target","value","Card","props","children","HomePage","AddNew","Button","color","AddPage","DataContext","createContext","StudentsList","useContext","userStudents","isLoaded","removeStudentHandler","filteredList","setFilteredList","console","log","useEffect","match","useRouteMatch","content","sortProperty","sort","a","b","sorted","JSON","parse","stringify","sortHandler","ListGroup","map","st","ListGroupItem","id","Table","fName","lName","year","url","studentId","y","prompt","filter","password","alert","AllStudentsPage","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","BaseInput","InputGroup","InputGroupAddon","addonType","InputGroupText","label","Input","placeholder","type","StudentForm","React","memo","enteredFName","setEnteredFName","enteredLName","setEnteredLName","enteredYear","setEnteredYear","enteredPass","setEnteredPass","setFormValid","setStudent","onSubmit","preventDefault","student","subjects","onAddStudent","replace","min","AddNewStudent","collection","add","then","docRef","AddStudentPage","EditStudent","params","useParams","postRef","doc","get","data","editedStudent","update","EditStudentsPage","ProfessorsList","userProfessors","professorId","delete","AllProfessorsPage","ProfessorForm","profName","setProfName","profLName","setProfLName","professorData","subject","onAddProfessor","professor","AddNewProfessor","AddProfessorsPage","EditProfessor","setProfessor","editedprofessor","EditProfessorPage","AddProffesorToSubjectList","x","subjectId","profRef","subjRef","addProfessorToSubjectHandler","ModalProfList","onCloseModal","AddProfToSubjectList","AddStudentToSubjectList","Object","keys","includes","style","textAlign","set","merge","ModalStudentsList","SubjectsList","userSubjects","setSubjectId","studentsModal","setStudentsModal","professorsModal","setProfessorsModal","onAddStudentToSubject","onAddProfToSubject","removeSubjectHandler","AllSubjectsPage","SubjectForm","enteredSubject","setEnteredSubject","subjectData","onAddSubject","AddNewSubject","AddSubjectPage","EditSubject","setSubject","subjectRef","editedSubject","EditSubjectPage","StudentDetailsTest","find","striped","prof","SubjectDetailsTest","attendingStudents","ProfessorDetailsTest","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","DataProvider","setUserSubjects","setUserStudents","setUserProfessors","isLoadedStudents","setIsLoadedStudents","isLoadedSubjects","setIsLoadedSubjects","isLoadedProfessors","setIsLoadedProfessors","setIsLoaded","profArray","forEach","payload","finally","students","studArray","professors","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65a68be8.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  NavItem,\n} from 'reactstrap';\n\nimport './MainNavigation.css';\n\nconst MainNavigation = () => {\n  const history = useHistory();\n  const testing = e => {\n    history.push(`/${e}`);\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <header>\n      <Navbar className=\"px-5 py-3 justify-content-between\" expand=\"md\">\n        <NavbarBrand className=\"logo\" to=\"/\">\n          CupeX first app\n        </NavbarBrand>\n\n        <NavbarToggler onClick={toggle} />\n\n        <Collapse className=\"flex-grow-0\" isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem className=\"px-2\">\n              <Link to=\"/all-students\">Students</Link>\n            </NavItem>\n            <NavItem className=\"px-2\">\n              <Link to=\"/all-subjects\">Subjects</Link>\n            </NavItem>\n            <NavItem className=\"px-2\">\n              <Link to=\"/all-professors\">Professors</Link>\n            </NavItem>\n            <li>\n              <select\n                className=\"sort-btn\"\n                onChange={e => testing(e.target.value)}\n              >\n                <option value=\"add\">Add new?</option>\n                <option value=\"add-new-student\">Add new student</option>\n                <option value=\"add-new-professor\">Add new profesor</option>\n                <option value=\"add-new-subject\">Add new subject</option>\n              </select>\n            </li>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import Card from '../components/UI/Card';\n\nconst HomePage = () => {\n  return (\n    <Card>\n      <h1>Home Page</h1>\n    </Card>\n  );\n};\n\nexport default HomePage;\n","import { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport Card from '../UI/Card';\n\nconst AddNew = () => {\n  return (\n    <Card>\n      <h2>Add new:</h2>\n      <div className=\"d-flex justify-content-around m-5 \">\n        <Link to=\"/students-input/add-new-student\">\n          <Button className=\"btn text-uppercase\" color=\"success\">\n            student\n          </Button>\n        </Link>\n\n        <Link to=\"/students-input/add-new-subject\">\n          <Button className=\"btn text-uppercase\" color=\"success\">\n            subject\n          </Button>\n        </Link>\n\n        <Link to=\"/students-input/add-new-professor\">\n          <Button className=\"btn text-uppercase\" color=\"success\">\n            professor\n          </Button>\n        </Link>\n      </div>\n    </Card>\n  );\n};\n\nexport default AddNew;\n","import AddNew from '../components/layout/AddPage';\n\nconst AddPage = () => {\n  return <AddNew />;\n};\n\nexport default AddPage;\n","import { createContext } from 'react';\r\n\r\nconst DataContext = createContext();\r\n\r\nexport default DataContext;\r\n","import { useContext, useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport { Button, ListGroup, ListGroupItem, Table } from 'reactstrap';\nimport DataContext from '../../store/data-context.js';\n\nconst StudentsList = () => {\n  const { userStudents, isLoaded, removeStudentHandler } =\n    useContext(DataContext);\n  const [filteredList, setFilteredList] = useState([]);\n\n  console.log('isLoaded from students list', isLoaded);\n\n  useEffect(() => {\n    setFilteredList(userStudents);\n  }, [isLoaded, userStudents]);\n\n  const match = useRouteMatch();\n\n  const checkPassHandler = (studentId, y) => {\n    const passInput = prompt('enter password');\n    const getPass = userStudents\n      .filter(st => st.id === studentId)\n      .map(st => st.password);\n\n    if (+passInput === +getPass) {\n      removeStudentHandler(studentId, y);\n      console.log('student deleted');\n    } else {\n      alert('wrong password!');\n    }\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userStudents.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userStudents));\n    setFilteredList(sorted);\n  };\n\n  let content = (\n    <div>\n      <h2> All Students</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n        <option value=\"year\">Date of Birth</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {!isLoaded && <h2>Loading...</h2>}\n      <ListGroup className=\"mt-5\">\n        {filteredList.map(st => (\n          <ListGroupItem\n            className=\"my-3 d-flex justify-content-between align-items-center \"\n            key={st.id}\n            id={st.id}\n          >\n            <Table className=\"text-start w-50 \">\n              <tbody>\n                <tr>\n                  <td>\n                    student:\n                    <strong>\n                      {st.fName} {st.lName}\n                    </strong>\n                  </td>\n                </tr>\n                <tr>\n                  <td>born: {st.year}</td>\n                </tr>\n              </tbody>\n            </Table>\n\n            <div className=\"text-end\">\n              <Link to={`${match.url}/details/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"info\">\n                  info\n                </Button>\n              </Link>\n              <Link to={`${match.url}/edit/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"success\">\n                  edit\n                </Button>\n              </Link>\n              <Button\n                className=\"btn mx-1\"\n                color=\"danger\"\n                onClick={() => checkPassHandler(st.id, 'students')}\n              >\n                delete\n              </Button>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default StudentsList;\n","import StudentsList from '../../components/students/StudentsList';\n\nconst AllStudentsPage = () => {\n  return <StudentsList />;\n};\n\nexport default AllStudentsPage;\n","import firebase from 'firebase';\nrequire('firebase/firestore');\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAmiHfPoCndQtpGB3sdhvNAnzER_NYqRq0',\n  authDomain: 'students-input.firebaseapp.com',\n  databaseURL:\n    'https://students-input-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'students-input',\n  storageBucket: 'students-input.appspot.com',\n  messagingSenderId: '1037427824217',\n  appId: '1:1037427824217:web:edad276ef09ea0b4688348',\n  measurementId: 'G-459YJZBEBM',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nvar db = firebase.firestore();\n\n// export const auth = firebase.auth();\nexport const firestore = firebase.firestore;\nexport default db;\n","import React from 'react';\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\n\nconst BaseInput = props => {\n  return (\n    <InputGroup className=\"py-1\">\n      <InputGroupAddon className=\"w-25\" addonType=\"prepend\">\n        <InputGroupText>{props.label}</InputGroupText>\n      </InputGroupAddon>\n      <Input\n        placeholder={props.placeholder}\n        type={props.type}\n        id={props.fName}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    </InputGroup>\n  );\n};\n\nexport default BaseInput;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BaseInput from '../comon/BaseInput';\nimport { Button } from 'reactstrap';\n\nimport Card from '../UI/Card';\n\nconst StudentForm = React.memo(props => {\n  const [enteredFName, setEnteredFName] = useState('');\n  const [enteredLName, setEnteredLName] = useState('');\n  const [enteredYear, setEnteredYear] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n  const [formValid, setFormValid] = useState(false);\n  const [student, setStudent] = useState({});\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (\n      enteredFName === '' ||\n      enteredLName === '' ||\n      enteredYear === '' ||\n      enteredPass === ''\n    ) {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const student = {\n      fName: enteredFName,\n      lName: enteredLName,\n      year: enteredYear,\n      password: enteredPass,\n      subjects: {},\n    };\n    setStudent(student);\n    props.onAddStudent(student);\n\n    // clearing input fields\n    setEnteredFName('');\n    setEnteredLName('');\n    setEnteredYear('');\n    setEnteredPass('');\n    history.replace('/all-students');\n  };\n\n  const fNameChangeHandler = e => {\n    setEnteredFName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setEnteredLName(e.target.value);\n  };\n  const yearChangeHandler = e => {\n    setEnteredYear(e.target.value);\n  };\n  const passChangeHandler = e => {\n    setEnteredPass(e.target.value);\n  };\n\n  return (\n    <section>\n      <Card>\n        <h2>Students input form</h2>\n\n        <form onSubmit={submitHandler}>\n          <BaseInput\n            type=\"text\"\n            id=\"fName\"\n            onChange={fNameChangeHandler}\n            placeholder={props.student ? `${props.student.fName}` : ''}\n            value={enteredFName}\n            label={'First name:'}\n          />\n\n          <BaseInput\n            type=\"text\"\n            id=\"lName\"\n            onChange={lNameChangeHandler}\n            placeholder={props.student ? `${props.student.lName}` : ''}\n            value={enteredLName}\n            label={'Last name:'}\n          />\n\n          <BaseInput\n            type=\"date\"\n            min=\"1111-01-01\"\n            id=\"year\"\n            onChange={yearChangeHandler}\n            placeholder={props.student ? `${props.student.year}` : ''}\n            value={enteredYear}\n            label={'Date of Birth:'}\n          />\n\n          <BaseInput\n            placeholder={props.student ? `${props.student.password}` : ''}\n            type=\"number\"\n            id=\"pass\"\n            value={enteredPass}\n            onChange={passChangeHandler}\n            label={'Password:'}\n          />\n\n          <div>\n            <Button type=\"submit\" className=\"btn btn-success mt-4\">\n              {props.student ? 'save changes' : 'add student'}\n            </Button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default StudentForm;\n","import React from 'react';\nimport db from '../firebase';\nimport StudentForm from './StudentForm';\n\nconst AddNewStudent = () => {\n  const addStudentHandler = student => {\n    db.collection('students')\n      .add(student)\n      .then(docRef => {});\n  };\n\n  return <StudentForm onAddStudent={addStudentHandler} />;\n};\n\nexport default AddNewStudent;\n","import AddNewStudent from '../../components/students/AddNewStudent';\n\nconst AddStudentPage = () => {\n  return <AddNewStudent />;\n};\n\nexport default AddStudentPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport StudentForm from './StudentForm';\n\nconst EditStudent = () => {\n  const params = useParams();\n  const [student, setStudent] = useState({});\n  let postRef = db.collection('students').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const student = doc.data();\n      setStudent(student);\n    });\n  }, []);\n\n  const changeHandler = editedStudent => {\n    postRef.update(editedStudent).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <StudentForm onAddStudent={changeHandler} student={student} />;\n};\n\nexport default EditStudent;\n","import EditStudent from '../../components/students/EditStudent';\n\nconst EditStudentsPage = () => {\n  return <EditStudent />;\n};\n\nexport default EditStudentsPage;\n","import { Link, useRouteMatch } from 'react-router-dom';\nimport { useContext } from 'react';\nimport db from '../firebase';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\n\nimport DataContext from '../../store/data-context.js';\nimport Card from '../UI/Card';\n\nconst ProfessorsList = () => {\n  const match = useRouteMatch();\n\n  const { userProfessors, isLoaded } = useContext(DataContext);\n\n  const removeProfessorHandler = professorId => {\n    let postRef = db.collection('professors');\n    postRef\n      .doc(professorId)\n      .delete()\n      .then(() => {\n        console.log('professor successfully deleted!');\n      });\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userProfessors.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    // const sorted = JSON.parse(JSON.stringify(userSubjects));\n  };\n\n  let content = (\n    <div>\n      <h2> All Subjects</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {!isLoaded && <h2>Loading...</h2>}\n      <ListGroup className=\"mt-5\">\n        {userProfessors.map(st => (\n          <ListGroupItem\n            className=\"my-3 py-4 d-flex justify-content-between align-items-center \"\n            key={st.id}\n            id={st.id}\n          >\n            <div>\n              <span>\n                professor:{' '}\n                <strong>\n                  {st.fName} {st.lName}\n                </strong>\n              </span>\n            </div>\n            <div className=\"btn-wrapper\">\n              <Link to={`${match.url}/details/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"info\">\n                  info\n                </Button>\n              </Link>\n              <Link to={`${match.url}/edit/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"success\">\n                  edit\n                </Button>\n              </Link>\n              <Button\n                className=\"btn mx-1\"\n                color=\"danger\"\n                onClick={() => removeProfessorHandler(st.id)}\n              >\n                delete\n              </Button>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default ProfessorsList;\n","import ProfessorsList from '../../components/professors/ProfessorsList';\n\nconst AllProfessorsPage = () => {\n  return <ProfessorsList />;\n};\n\nexport default AllProfessorsPage;\n","import { Button } from 'reactstrap';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst ProfessorForm = React.memo(props => {\n  const [profName, setProfName] = useState('');\n  const [profLName, setProfLName] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (profName === '' || profLName === '') {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const professorData = {\n      fName: profName,\n      lName: profLName,\n      subject: 'not teaching yet',\n    };\n\n    props.onAddProfessor(professorData);\n\n    // clearing input fields\n    setProfName('');\n    setProfLName('');\n\n    history.replace('/all-professors');\n  };\n\n  const fNameChangeHandler = e => {\n    setProfName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setProfLName(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Professor input form</h2>\n      <form onSubmit={submitHandler}>\n        <BaseInput\n          placeholder={props.professor ? `${props.professor.fName}` : ''}\n          type=\"text\"\n          id=\"fName\"\n          value={profName}\n          onChange={fNameChangeHandler}\n          label={'First name:'}\n        />\n        <BaseInput\n          placeholder={props.professor ? `${props.professor.lName}` : ''}\n          type=\"text\"\n          id=\"lName\"\n          value={profLName}\n          onChange={lNameChangeHandler}\n          label={'Last name:'}\n        />\n\n        <div>\n          <Button type=\"submit\" className=\"btn btn-success mt-4\">\n            {props.professor ? 'save changes' : 'add profeesor'}\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default ProfessorForm;\n","import React from 'react';\nimport db from '../firebase';\nimport ProfessorForm from './ProfessorForm';\n\nconst AddNewProfessor = () => {\n  const addProfessorHandler = professorData => {\n    db.collection('professors')\n      .add(professorData)\n      .then(docRef => {});\n  };\n\n  return <ProfessorForm onAddProfessor={addProfessorHandler} />;\n};\n\nexport default AddNewProfessor;\n","import AddNewProfessor from '../../components/professors/AddNewProfessor';\n\nconst AddProfessorsPage = () => {\n  return <AddNewProfessor />;\n};\n\nexport default AddProfessorsPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport ProfessorForm from './ProfessorForm';\n\nconst EditProfessor = () => {\n  const params = useParams();\n  const [professor, setProfessor] = useState({});\n  let postRef = db.collection('professors').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const professor = doc.data();\n      setProfessor(professor);\n    });\n  }, []);\n\n  const changeHandler = editedprofessor => {\n    postRef.update(editedprofessor).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <ProfessorForm onAddProfessor={changeHandler} professor={professor} />;\n};\n\nexport default EditProfessor;\n","import EditProfessor from '../../components/professors/EditProfessor';\n\nconst EditProfessorPage = () => {\n  return <EditProfessor />;\n};\n\nexport default EditProfessorPage;\n","import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport DataContext from '../../store/data-context.js';\nimport db from '../firebase';\n\nconst AddProffesorToSubjectList = props => {\n  const { userProfessors } = useContext(DataContext);\n  const filteredList = userProfessors.filter(\n    x => x.subject !== props.subjectId\n  );\n\n  const addProfessorToSubjectHandler = professorId => {\n    let profRef = db.collection('professors');\n    let subjRef = db.collection('subjects');\n    profRef.doc(professorId).update({ subject: props.subjectId });\n    subjRef.doc(props.subjectId).update({ professor: professorId });\n  };\n\n  return (\n    <section>\n      <h2>all professors list</h2>\n      <Table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredList.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => addProfessorToSubjectHandler(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </section>\n  );\n};\n\nexport default AddProffesorToSubjectList;\n","import AddProfToSubjectList from './AddProfToSubjectList';\n\nimport './Modal.css';\n\nconst ModalProfList = props => {\n  const subjectId = props.subjectId;\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddProfToSubjectList subjectId={subjectId} />\n    </div>\n  );\n};\n\nexport default ModalProfList;\n","import { useContext } from 'react';\nimport DataContext from '../../store/data-context.js';\nimport { Table } from 'reactstrap';\nimport db from '../firebase';\n\nconst AddStudentToSubjectList = props => {\n  const { userStudents } = useContext(DataContext);\n  const filteredList = userStudents.filter(\n    x => !Object.keys(x.subjects).includes(props.subjectId)\n  );\n\n  const addStudentToSubjectHandler = studentId => {\n    let postRef = db.collection('students');\n    postRef\n      .doc(studentId)\n      .set({ subjects: { [props.subjectId]: '' } }, { merge: true });\n  };\n\n  return (\n    <section>\n      <Table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th style={{ textAlign: 'end' }}>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredList.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => addStudentToSubjectHandler(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </section>\n  );\n};\n\nexport default AddStudentToSubjectList;\n","import AddStudentToSubjectList from './AddStudentToSubjectList';\nimport './Modal.css';\n\nconst ModalStudentsList = props => {\n  const subjectId = props.subjectId;\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddStudentToSubjectList subjectId={subjectId} />\n    </div>\n  );\n};\n\nexport default ModalStudentsList;\n","import { useState, useContext, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport db from '../firebase';\nimport Card from '../UI/Card';\nimport ModalProfList from './ModalProfList';\nimport ModalStudentsList from './ModalStudentsList';\nimport DataContext from '../../store/data-context.js';\n\nconst SubjectsList = () => {\n  const { userSubjects, isLoaded } = useContext(DataContext);\n  const [subjectId, setSubjectId] = useState('');\n  const [studentsModal, setStudentsModal] = useState(false);\n  const [professorsModal, setProfessorsModal] = useState(false);\n  const match = useRouteMatch();\n\n  const removeSubjectHandler = subjectId => {\n    let subjectRef = db.collection('subjects');\n    subjectRef\n      .doc(subjectId)\n      .delete()\n      .then(() => {\n        console.log('Subject successfully deleted!');\n      });\n  };\n\n  const onAddStudentToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setStudentsModal(true);\n  };\n\n  const closeStudentsModal = () => {\n    setStudentsModal(false);\n  };\n\n  const onAddProfToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setProfessorsModal(true);\n  };\n\n  const closeProfessorsModal = () => {\n    setProfessorsModal(false);\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userSubjects.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    // const sorted = JSON.parse(JSON.stringify(userSubjects));\n  };\n\n  let content = (\n    <div>\n      <h2> All Subjects</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {!isLoaded && <h2>Loading...</h2>}\n      {studentsModal && (\n        <ModalStudentsList\n          onCloseModal={closeStudentsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      {professorsModal && (\n        <ModalProfList\n          onCloseModal={closeProfessorsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      <ListGroup className=\"mt-5\">\n        {userSubjects.map(st => (\n          <ListGroupItem\n            className=\"my-3 py-4 d-flex justify-content-between align-items-center\"\n            key={st.id}\n            id={st.id}\n          >\n            <div className=\"text-start\">\n              <span>\n                subject: <strong> {st.subject}</strong>\n              </span>\n            </div>\n            <div className=\"text-end\">\n              <Link to={`${match.url}/details/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"info\">\n                  info\n                </Button>\n              </Link>\n              <Link to={`${match.url}/edit/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"secondary\">\n                  edit\n                </Button>\n              </Link>\n              <Button\n                className=\"btn mx-1\"\n                color=\"success\"\n                onClick={() => onAddStudentToSubject(st.id)}\n              >\n                add student\n              </Button>\n              <Button\n                className=\"btn mx-1\"\n                color=\"success\"\n                onClick={() => onAddProfToSubject(st.id)}\n              >\n                add professor\n              </Button>\n\n              <Button\n                className=\"btn mx-1\"\n                color=\"danger\"\n                onClick={() => removeSubjectHandler(st.id)}\n              >\n                delete\n              </Button>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default SubjectsList;\n","import SubjectsList from '../../components/subjects/SubjectsList';\n\nconst AllSubjectsPage = () => {\n  return <SubjectsList />;\n};\n\nexport default AllSubjectsPage;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Button } from 'reactstrap';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst SubjectForm = React.memo(props => {\n  const [enteredSubject, setEnteredSubject] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (enteredSubject === '') {\n      setFormValid(false);\n      alert('pls enter subject name');\n      return;\n    }\n    setFormValid(true);\n\n    const subjectData = {\n      subject: enteredSubject,\n      professor: 'not assigned yet',\n    };\n\n    props.onAddSubject(subjectData);\n\n    setEnteredSubject('');\n\n    history.replace('/all-subjects');\n  };\n\n  const subjectChangeHandler = e => {\n    setEnteredSubject(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Subject input form</h2>\n      <form onSubmit={submitHandler}>\n        <BaseInput\n          placeholder={props.subject ? `${props.subject.subject}` : ''}\n          type=\"text\"\n          id=\"subject\"\n          value={enteredSubject}\n          onChange={subjectChangeHandler}\n          label={'Subject title:'}\n        />\n\n        <div>\n          <Button type=\"submit\" className=\"btn btn-success mt-4\">\n            {props.subject ? 'save changes' : 'add subject'}\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default SubjectForm;\n","import React from 'react';\nimport db from '../firebase';\nimport SubjectForm from './SubjectForm';\n\nconst AddNewSubject = () => {\n  const addSubjectHandler = subjectData => {\n    db.collection('subjects')\n      .add(subjectData)\n      .then(docRef => {});\n  };\n\n  return <SubjectForm onAddSubject={addSubjectHandler} />;\n};\n\nexport default AddNewSubject;\n","import AddNewSubject from '../../components/subjects/AddNewSubject';\nconst AddSubjectPage = () => {\n  return <AddNewSubject />;\n};\n\nexport default AddSubjectPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport SubjectForm from './SubjectForm';\n\nconst EditSubject = () => {\n  const params = useParams();\n  const [subject, setSubject] = useState({});\n  let subjectRef = db.collection('subjects').doc(params.id);\n\n  useEffect(() => {\n    subjectRef.get().then(doc => {\n      const subject = doc.data();\n      setSubject(subject);\n    });\n  }, []);\n\n  const changeHandler = editedSubject => {\n    subjectRef.update({ subject: editedSubject.subject });\n  };\n\n  return <SubjectForm onAddSubject={changeHandler} subject={subject} />;\n};\n\nexport default EditSubject;\n","import EditSubject from '../../components/subjects/EditSubject';\n\nconst EditSubjectPage = () => {\n  return <EditSubject />;\n};\n\nexport default EditSubjectPage;\n","import { useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'reactstrap';\r\nimport Card from '../UI/Card';\r\nimport DataContext from '../../store/data-context.js';\r\n\r\nconst StudentDetailsTest = () => {\r\n  const { userStudents, userSubjects, userProfessors } =\r\n    useContext(DataContext);\r\n\r\n  const params = useParams();\r\n  const studentId = params.id;\r\n  const student = userStudents.find(x => x.id === studentId);\r\n\r\n  return (\r\n    <Card>\r\n      <h2>\r\n        {student.fName} {student.lName} info:\r\n      </h2>\r\n      <Table className=\"mt-3 mb-5\">\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>date of birth</th>\r\n            <th>password</th>\r\n            {/* <th>unique id</th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{student.fName}</td>\r\n            <td>{student.lName}</td>\r\n            <td>{student.year}</td>\r\n            <td>{student.password}</td>\r\n            {/* <td>{studentId}</td> */}\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      <h4>Subjects that {student.fName} attend:</h4>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>subject</th>\r\n            <th>professor</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {userSubjects.map(x => {\r\n            const prof = userProfessors.find(y => y.id === x.professor);\r\n\r\n            if (Object.keys(student.subjects).includes(x.id)) {\r\n              return (\r\n                <tr key={x.id}>\r\n                  <td className=\"w50-td\">{x.subject}</td>\r\n\r\n                  {x.professor === 'not assigned yet' ? (\r\n                    <td>not assigned yet</td>\r\n                  ) : (\r\n                    <td className=\"w50-td\">\r\n                      {prof.fName} {prof.lName}\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              );\r\n            }\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StudentDetailsTest;\r\n","import { useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport { Table } from 'reactstrap';\r\nimport Card from '../UI/Card';\r\nimport DataContext from '../../store/data-context.js';\r\n\r\nconst SubjectDetailsTest = props => {\r\n  const { userStudents, userSubjects, userProfessors } =\r\n    useContext(DataContext);\r\n  const params = useParams();\r\n  const subjectId = params.id;\r\n\r\n  const subject = userSubjects.find(x => x.id === subjectId);\r\n  const professor = userProfessors.find(x => x.id === subject.professor);\r\n  const attendingStudents = userStudents.filter(x =>\r\n    Object.keys(x.subjects).includes(subjectId)\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <h2>{subject.subject} info:</h2>\r\n\r\n      <Table id=\"details-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>title</th>\r\n            <th>professor</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{subject.subject} </span>\r\n            </td>\r\n            <td>\r\n              {subject.professor === 'not assigned yet' ? (\r\n                'not assigned yet'\r\n              ) : (\r\n                <span>\r\n                  {professor.fName} {professor.lName}\r\n                </span>\r\n              )}\r\n            </td>\r\n            <td>{subjectId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <Table striped className=\"text-start mt-4\">\r\n        <thead>\r\n          <tr>\r\n            <th>Student that attend this subject:</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {attendingStudents.map(x => (\r\n            <tr key={x.id}>\r\n              <td>\r\n                {x.fName} {x.lName}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SubjectDetailsTest;\r\n","import { useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'reactstrap';\r\nimport Card from '../UI/Card';\r\nimport DataContext from '../../store/data-context.js';\r\n\r\nconst ProfessorDetailsTest = () => {\r\n  const { userSubjects, userProfessors } = useContext(DataContext);\r\n  const params = useParams();\r\n  const professorId = params.id;\r\n\r\n  const professor = userProfessors.find(x => x.id === professorId);\r\n\r\n  return (\r\n    <Card>\r\n      <h2>{professor.fName} info:</h2>\r\n\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>subject</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{professor.fName} </span>\r\n            </td>\r\n            <td>\r\n              <span>{professor.lName} </span>\r\n            </td>\r\n            {professor.subject === 'not teaching yet' ? (\r\n              <td>not teaching yet</td>\r\n            ) : (\r\n              <td>\r\n                {userSubjects.find(x => x.id === professor.subject).subject}\r\n              </td>\r\n            )}\r\n            <td>{professorId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfessorDetailsTest;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport MainNavigation from './components/layout/MainNavigation';\nimport HomePagePage from './pages/HomePage';\nimport AddPage from './pages/AddPage';\nimport AllStudentsPage from './pages/studentsPage/AllStudentsPage';\nimport AddStudentPage from './pages/studentsPage/AddStudentPage';\nimport EditStudentsPage from './pages/studentsPage/EditStudentPage';\nimport AllProfessorsPage from './pages/professorsPage/AllProfessorsPage';\nimport AddProfessorsPage from './pages/professorsPage/AddProfessorsPage';\nimport EditProfessorPage from './pages/professorsPage/EditProfessorPage';\nimport AllSubjectsPage from './pages/subjectsPage/AllSubjectsPage';\nimport AddSubjectPage from './pages/subjectsPage/AddSubjectPage';\nimport EditSubjectsPage from './pages/subjectsPage/EditSubjectPage';\nimport StudentDetailsTest from './components/students/StudentDetailsTest';\nimport SubjectDetailsTest from './components/subjects/SubjectDetailsTest';\nimport ProfessorDetailsTest from './components/professors/ProfessorDetailsTest';\n\nfunction App() {\n  return (\n    <div>\n      <MainNavigation />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePagePage />\n        </Route>\n        <Route path=\"/add\" exact>\n          <AddPage />\n        </Route>\n        <Route path=\"/all-students\" exact>\n          <AllStudentsPage />\n        </Route>\n        <Route path=\"/all-subjects\" exact>\n          <AllSubjectsPage />\n        </Route>\n        <Route path=\"/all-professors\" exact>\n          <AllProfessorsPage />\n        </Route>\n        <Route path=\"/all-students/details/:id\" exact>\n          <StudentDetailsTest />\n        </Route>\n        <Route path=\"/all-students/edit/:id\" exact>\n          <EditStudentsPage />\n        </Route>\n        <Route path=\"/all-subjects/details/:id\" exact>\n          <SubjectDetailsTest />\n        </Route>\n        <Route path=\"/all-subjects/edit/:id\" exact>\n          <EditSubjectsPage />\n        </Route>\n        <Route path=\"/all-professors/details/:id\" exact>\n          <ProfessorDetailsTest />\n        </Route>\n        <Route path=\"/all-professors/edit/:id\" exact>\n          <EditProfessorPage />\n        </Route>\n        <Route path=\"/add-new-student\" exact>\n          <AddStudentPage />\n        </Route>\n        <Route path=\"/add-new-subject\" exact>\n          <AddSubjectPage />\n        </Route>\n        <Route path=\"/add-new-professor\" exact>\n          <AddProfessorsPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from 'react';\r\nimport DataContext from './data-context';\r\nimport db from '../components/firebase';\r\n\r\nconst DataProvider = props => {\r\n  const [userSubjects, setUserSubjects] = useState({});\r\n  const [userStudents, setUserStudents] = useState([]);\r\n  const [userProfessors, setUserProfessors] = useState([]);\r\n  const [isLoadedStudents, setIsLoadedStudents] = useState(false);\r\n  const [isLoadedSubjects, setIsLoadedSubjects] = useState(false);\r\n  const [isLoadedProfessors, setIsLoadedProfessors] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoadedStudents && isLoadedSubjects) {\r\n      setIsLoaded(true);\r\n    }\r\n  }, [isLoadedStudents, isLoadedSubjects, isLoadedProfessors, isLoaded]);\r\n\r\n  useEffect(() => {\r\n    let subjectRef = db.collection('subjects');\r\n    subjectRef\r\n\r\n      .get()\r\n      .then(subjects => {\r\n        const profArray = [];\r\n        subjects.forEach(subject => {\r\n          let data = subject.data();\r\n          let { id } = subject;\r\n\r\n          let payload = {\r\n            id,\r\n            ...data,\r\n          };\r\n          profArray.push(payload);\r\n        });\r\n        setUserSubjects(profArray);\r\n      })\r\n      .finally(() => {\r\n        setIsLoadedSubjects(true);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let studentRef = db.collection('students');\r\n    studentRef\r\n      .get()\r\n      .then(students => {\r\n        const studArray = [];\r\n        students.forEach(student => {\r\n          let data = student.data();\r\n          let { id } = student;\r\n\r\n          let payload = {\r\n            id,\r\n            ...data,\r\n          };\r\n          studArray.push(payload);\r\n        });\r\n        setUserStudents(studArray);\r\n      })\r\n      .finally(() => {\r\n        setIsLoadedStudents(true);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let profRef = db.collection('professors');\r\n    profRef\r\n      .get()\r\n      .then(professors => {\r\n        const profArray = [];\r\n        professors.forEach(professor => {\r\n          let data = professor.data();\r\n          let { id } = professor;\r\n\r\n          let payload = {\r\n            id,\r\n            ...data,\r\n          };\r\n          profArray.push(payload);\r\n        });\r\n        setUserProfessors(profArray);\r\n      })\r\n      .finally(() => {\r\n        setIsLoadedProfessors(true);\r\n      });\r\n  }, []);\r\n\r\n  const removeStudentHandler = (x, y) => {\r\n    let postRef = db.collection(y);\r\n    postRef.doc(x).delete();\r\n    setIsLoaded(false);\r\n  };\r\n\r\n  console.log('isLoaded from context', isLoaded);\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        userSubjects,\r\n        userProfessors,\r\n        userStudents,\r\n        isLoaded,\r\n        removeStudentHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataProvider;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DataProvider from './store/DataProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <DataProvider>\n        <App />\n      </DataProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}