{"version":3,"sources":["components/layout/MainNavigation.js","components/UI/Card.js","pages/HomePage.js","components/layout/AddPage.js","pages/AddPage.js","components/firebase.js","components/students/StudentsList.js","pages/studentsPage/AllStudentsPage.js","components/students/StudentForm.js","components/students/AddNewStudent.js","pages/studentsPage/AddStudentPage.js","components/students/EditStudent.js","pages/studentsPage/EditStudentPage.js","components/students/StudentDetails.js","pages/studentsPage/StudentDetailsPage.js","components/professors/ProfessorsList.js","components/professors/Profesors.js","pages/professorsPage/AllProfessorsPage.js","components/professors/ProfessorForm.js","components/professors/AddNewProfessor.js","pages/professorsPage/AddProfessorsPage.js","components/professors/EditProfessor.js","pages/professorsPage/EditProfessorPage.js","components/professors/ProfessorDetails.js","pages/professorsPage/ProffesorDetailsPage.js","components/subjects/AddProfToSubjectList.js","components/subjects/ModalProfList.js","components/subjects/AddStudentToSubjectList.js","components/subjects/ModalStudentsList.js","components/subjects/SubjectsList.js","pages/subjectsPage/AllSubjectsPage.js","components/subjects/SubjectForm.js","components/subjects/AddNewSubject.js","pages/subjectsPage/AddSubjectPage.js","components/subjects/EditSubject.js","pages/subjectsPage/EditSubjectPage.js","components/subjects/SubjectDetails.js","pages/subjectsPage/SubjectDetailsPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainNavigation","history","useHistory","className","to","onChange","e","push","testing","target","value","Card","props","children","HomePage","AddNew","AddPage","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","StudentsList","match","useRouteMatch","useState","userStudents","setUserStudents","isLoading","setIsLoading","postRef","collection","useEffect","get","then","students","forEach","student","data","id","payload","find","x","checkPassHandler","studentId","prompt","filter","st","map","password","doc","delete","console","log","removeStudentHandler","alert","content","sortProperty","sort","a","b","sorted","JSON","parse","stringify","sortHandler","fName","lName","year","url","onClick","AllStudentsPage","StudentForm","React","memo","enteredFName","setEnteredFName","enteredLName","setEnteredLName","enteredYear","setEnteredYear","enteredPass","setEnteredPass","setFormValid","onSubmit","preventDefault","subjects","onAddStudent","replace","htmlFor","placeholder","type","min","AddNewStudent","add","docRef","AddStudentPage","EditStudent","params","useParams","setStudent","editedStudent","update","EditStudentsPage","StudentDetails","StudentDetailsPage","ProfessorsList","userProfessors","setUserProfessors","professors","professor","professorId","Profesors","AllProfessorsPage","ProfessorForm","profName","setProfName","profLName","setProfLName","professorData","onAddProfessor","AddNewProfessor","AddProfessorsPage","EditProfessor","setProfessor","editedprofessor","EditProfessorPage","ProfessorDetails","undefined","subject","title","ProfessorDetailsPage","AddProffesorToSubjectList","style","textAlign","onAddProfessorToSubject","ModalProfList","subjectId","userSubjects","profRef","subjRef","onCloseModal","AddProfToSubjectList","profObj","AddStudentToSubjectList","onAddStudentToSubject","ModalStudentsList","subjectObj","set","merge","SubjectsList","setUserSubjects","setSubjectId","studentsModal","setStudentsModal","professorsModal","setProfessorsModal","onAddProfToSubject","removeSubjectHandler","AllSubjectsPage","SubjectForm","enteredSubject","setEnteredSubject","subjectData","onAddSubject","AddNewSubject","AddSubjectPage","EditSubject","setSubject","subjectRef","editedSubject","EditSubjectPage","SubjectDetails","SubjectDetailsPage","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2a8ca22.chunk.js","sourcesContent":["import { Link, useHistory } from 'react-router-dom';\r\n\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = () => {\r\n  const history = useHistory();\r\n  const testing = e => {\r\n    history.push(`/students-input/${e}`);\r\n  };\r\n  return (\r\n    <header>\r\n      <div className=\"logo\">\r\n        <Link to=\"/students-input\">CupeX first app</Link>\r\n      </div>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/students-input/all-students\">Students</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/students-input/all-subjects\">Subjects</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/students-input/all-professors\">Professors</Link>\r\n          </li>\r\n          <li>\r\n            <select\r\n              className=\"sort-btn\"\r\n              onChange={e => testing(e.target.value)}\r\n            >\r\n              <option value=\"add\">Add new?</option>\r\n              <option value=\"add-new-student\">Add new student</option>\r\n              <option value=\"add-new-professor\">Add new profesor</option>\r\n              <option value=\"add-new-subject\">Add new subject</option>\r\n            </select>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import Card from '../components/UI/Card';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Card>\r\n      <h1>Home Page</h1>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { Link } from 'react-router-dom';\r\nimport Card from '../UI/Card';\r\n\r\nimport './index.css';\r\n\r\nconst AddNew = () => {\r\n  return (\r\n    <Card>\r\n      <h2>Add new:</h2>\r\n      <ul className=\"addNewUl\">\r\n        <li>\r\n          <Link to=\"/students-input/add-new-student\">\r\n            <button className=\"change-btn\">student</button>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/students-input/add-new-subject\">\r\n            <button className=\"change-btn\">subject</button>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/students-input/add-new-professor\">\r\n            <button className=\"change-btn\">professor</button>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddNew;\r\n","import AddNew from '../components/layout/AddPage';\r\n\r\nconst AddPage = () => {\r\n  return <AddNew />;\r\n};\r\n\r\nexport default AddPage;\r\n","import firebase from 'firebase';\r\nrequire('firebase/firestore');\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyAmiHfPoCndQtpGB3sdhvNAnzER_NYqRq0',\r\n  authDomain: 'students-input.firebaseapp.com',\r\n  databaseURL:\r\n    'https://students-input-default-rtdb.europe-west1.firebasedatabase.app',\r\n  projectId: 'students-input',\r\n  storageBucket: 'students-input.appspot.com',\r\n  messagingSenderId: '1037427824217',\r\n  appId: '1:1037427824217:web:edad276ef09ea0b4688348',\r\n  measurementId: 'G-459YJZBEBM',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nvar db = firebase.firestore();\r\n\r\n// export const auth = firebase.auth();\r\nexport const firestore = firebase.firestore;\r\nexport default db;\r\n","import { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport db from '../firebase';\nimport Card from '../UI/Card';\n\nimport './students.css';\n\nconst StudentsList = () => {\n  const match = useRouteMatch();\n  const [userStudents, setUserStudents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  let postRef = db.collection('students');\n\n  useEffect(() => {\n    postRef.get().then(students =>\n      students.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userStudents.find(x => (x.id = id))) {\n          setUserStudents(students => [...students, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n\n  const removeStudentHandler = studentId => {\n    postRef\n      .doc(studentId)\n      .delete()\n      .then(() => {\n        console.log('Student successfully deleted!');\n      });\n  };\n\n  const checkPassHandler = studentId => {\n    const passInput = prompt('enter password');\n    const getPass = userStudents\n      .filter(st => st.id === studentId)\n      .map(st => st.password);\n\n    if (+passInput === +getPass) {\n      removeStudentHandler(studentId);\n      console.log('student deleted');\n    } else {\n      alert('wrong password!');\n    }\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userStudents.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userStudents));\n    setUserStudents(sorted);\n  };\n\n  let content = (\n    <div>\n      <h2> All Students</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n        <option value=\"year\">Date of Birth</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {isLoading && <h2>Loading...</h2>}\n      {userStudents.map(st => (\n        <div className=\"item-wrapper\" key={st.id} id={st.id}>\n          <div className=\"info-wrapper\">\n            <span>student: </span>\n            <span>{st.fName}</span>\n            <span>{st.lName},</span>\n            <span>born: {st.year}</span>\n          </div>\n          <div className=\"btn-wrapper\">\n            <Link to={`${match.url}/details/${st.id}`}>\n              <button className=\"info-btn\">&#8505;</button>\n            </Link>\n            <Link to={`${match.url}/edit/${st.id}`}>\n              <button className=\"change-btn\">edit</button>\n            </Link>\n            <button\n              className=\"delete-btn\"\n              onClick={() => checkPassHandler(st.id)}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n      ))}\n    </Card>\n  );\n};\n\nexport default StudentsList;\n","import StudentsList from '../../components/students/StudentsList';\r\n\r\nconst AllStudentsPage = () => {\r\n  return <StudentsList />;\r\n};\r\n\r\nexport default AllStudentsPage;\r\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport Card from '../UI/Card';\n\nconst StudentForm = React.memo(props => {\n  const [enteredFName, setEnteredFName] = useState('');\n  const [enteredLName, setEnteredLName] = useState('');\n  const [enteredYear, setEnteredYear] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n\n  const history = useHistory();\n\n  const [formValid, setFormValid] = useState(false);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (\n      enteredFName === '' ||\n      enteredLName === '' ||\n      enteredYear === '' ||\n      enteredPass === ''\n    ) {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const student = {\n      fName: enteredFName,\n      lName: enteredLName,\n      year: enteredYear,\n      password: enteredPass,\n      subjects: [],\n    };\n\n    props.onAddStudent(student);\n\n    // clearing input fields\n    setEnteredFName('');\n    setEnteredLName('');\n    setEnteredYear('');\n    setEnteredPass('');\n    history.replace('/students-input/all-students');\n  };\n\n  const fNameChangeHandler = e => {\n    setEnteredFName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setEnteredLName(e.target.value);\n  };\n  const yearChangeHandler = e => {\n    setEnteredYear(e.target.value);\n  };\n  const passChangeHandler = e => {\n    setEnteredPass(e.target.value);\n  };\n\n  return (\n    <section>\n      <Card>\n        <h2>Students input form</h2>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"fName\">First Name:</label>\n            <input\n              placeholder={props.student ? `${props.student.fName}` : ''}\n              type=\"text\"\n              id=\"fName\"\n              value={enteredFName}\n              onChange={fNameChangeHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"lName\">Last Name:</label>\n            <input\n              placeholder={props.student ? `${props.student.lName}` : ''}\n              type=\"text\"\n              id=\"lName\"\n              value={enteredLName}\n              onChange={lNameChangeHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"year\">date of birth:</label>\n            <input\n              placeholder={props.student ? `${props.student.year}` : ''}\n              type=\"date\"\n              min=\"1111-01-01\"\n              id=\"year\"\n              value={enteredYear}\n              onChange={yearChangeHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"pass\">Password:</label>\n            <input\n              placeholder={props.student ? `${props.student.password}` : ''}\n              type=\"number\"\n              id=\"pass\"\n              value={enteredPass}\n              onChange={passChangeHandler}\n            />\n          </div>\n          <div>\n            <button type=\"submit\" className=\"add-btn\">\n              {props.student ? 'save changes' : 'add student'}\n            </button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default StudentForm;\n","import React from 'react';\r\nimport db from '../firebase';\r\nimport StudentForm from './StudentForm';\r\n\r\nconst AddNewStudent = () => {\r\n  const addStudentHandler = student => {\r\n    db.collection('students')\r\n      .add(student)\r\n      .then(docRef => {});\r\n  };\r\n\r\n  return <StudentForm onAddStudent={addStudentHandler} />;\r\n};\r\n\r\nexport default AddNewStudent;\r\n","import AddNewStudent from '../../components/students/AddNewStudent';\r\n\r\nconst AddStudentPage = () => {\r\n  return <AddNewStudent />;\r\n};\r\n\r\nexport default AddStudentPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport db from '../firebase';\r\nimport StudentForm from './StudentForm';\r\n\r\nconst EditStudent = () => {\r\n  const params = useParams();\r\n  const [student, setStudent] = useState({});\r\n  let postRef = db.collection('students').doc(params.id);\r\n\r\n  useEffect(() => {\r\n    postRef.get().then(doc => {\r\n      const student = doc.data();\r\n      setStudent(student);\r\n    });\r\n  }, []);\r\n\r\n  const changeHandler = editedStudent => {\r\n    postRef.update(editedStudent).then(() => {\r\n      console.log('Document edited');\r\n    });\r\n  };\r\n\r\n  return <StudentForm onAddStudent={changeHandler} student={student} />;\r\n};\r\n\r\nexport default EditStudent;\r\n","import EditStudent from '../../components/students/EditStudent';\r\n\r\nconst EditStudentsPage = () => {\r\n  return <EditStudent />;\r\n};\r\n\r\nexport default EditStudentsPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Card from '../UI/Card';\r\nimport db from '../firebase';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst StudentDetails = () => {\r\n  const [student, setStudent] = useState({});\r\n  const [userSubjects, setUserSubjects] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const params = useParams();\r\n  const studentId = params.id;\r\n\r\n  useEffect(() => {\r\n    let postRef = db.collection('students').doc(studentId);\r\n\r\n    postRef.get().then(doc => {\r\n      let data = doc.data();\r\n      setStudent(data);\r\n      setIsLoading(false);\r\n    });\r\n  }, [studentId]);\r\n\r\n  // useEffect(() => {\r\n  //   let subjectRef = db.collection('subjects');\r\n  //   subjectRef.get().then(subjects =>\r\n  //     subjects.map(subject => {\r\n  //       let data = subject.data();\r\n  //       let { id } = subject;\r\n\r\n  //       let payload = {\r\n  //         id,\r\n  //         ...data,\r\n  //       };\r\n  //       console.log(payload);\r\n  //       return payload;\r\n  //     })\r\n  //   );\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   let subjectRef = db.collection('subjects');\r\n  //   subjectRef.get().then(subjects =>\r\n  //     subjects.map(x => {\r\n  //       const test = x.data();\r\n  //       console.log(test);\r\n  //       return test;\r\n  //     })\r\n  //   );\r\n  // }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card>\r\n        <h2>Loading student...</h2>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <h2>\r\n        {student.fName} {student.lName} info:\r\n      </h2>\r\n      <table className=\"student-details-dable\">\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>date of birth</th>\r\n            <th>password</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{student.fName}</td>\r\n            <td>{student.lName}</td>\r\n            <td>{student.year}</td>\r\n            <td>{student.password}</td>\r\n            <td>{studentId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <table className=\"student-details-dable\">\r\n        <thead>\r\n          <tr>\r\n            <th>Subjects that {student.fName} attend:</th>\r\n          </tr>\r\n          <tr>\r\n            <th>subject</th>\r\n            <th>professor</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        {/* <tbody>\r\n          {Object.values(student.subjects).map(x => (\r\n            <tr key={nanoid + x.subject + x.professor.fName}>\r\n              <td className=\"w50-td\">{x.subject}</td>\r\n              <td className=\"w50-td\">\r\n                {x.professor.fName} {x.professor.lName}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody> */}\r\n      </table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StudentDetails;\r\n","import StudentDetails from '../../components/students/StudentDetails';\r\n\r\nconst StudentDetailsPage = props => {\r\n  return <StudentDetails />;\r\n};\r\nexport default StudentDetailsPage;\r\n","import { Link, useRouteMatch } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport db from '../firebase';\r\n\r\nconst ProfessorsList = props => {\r\n  const match = useRouteMatch();\r\n\r\n  const [userProfessors, setUserProfessors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  let postRef = db.collection('professors');\r\n\r\n  useEffect(() => {\r\n    postRef.get().then(professors =>\r\n      professors.forEach(professor => {\r\n        let data = professor.data();\r\n        let { id } = professor;\r\n\r\n        let payload = {\r\n          id,\r\n          ...data,\r\n        };\r\n\r\n        // check if there is allready students in list\r\n        if (!userProfessors.find(x => (x.id = id))) {\r\n          setUserProfessors(professors => [...professors, payload]);\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const removeProfessorHandler = professorId => {\r\n    postRef\r\n      .doc(professorId)\r\n      .delete()\r\n      .then(() => {\r\n        console.log('professor successfully deleted!');\r\n      });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {userProfessors.map(st => (\r\n        <div className=\"item-wrapper\" key={st.id} id={st.id}>\r\n          <div className=\"info-wrapper\">\r\n            <span>professor: </span>\r\n            <span>{st.fName} </span>\r\n            <span>{st.lName} </span>\r\n          </div>\r\n          <div className=\"btn-wrapper\">\r\n            <Link to={`${match.url}/details/${st.id}`}>\r\n              <button className=\"info-btn\">&#8505;</button>\r\n            </Link>\r\n            <Link to={`${match.url}/edit/${st.id}`}>\r\n              <button className=\"change-btn\">edit</button>\r\n            </Link>\r\n            <button\r\n              className=\"delete-btn\"\r\n              onClick={() => removeProfessorHandler(st.id)}\r\n            >\r\n              delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProfessorsList;\r\n","import { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ProfessorsList from './ProfessorsList';\r\n\r\nconst Profesors = () => {\r\n  const [userProfessors, setUserProfessors] = useState([]);\r\n\r\n  // sorting\r\n  const sortHandler = e => {\r\n    const sortProperty = e;\r\n    userProfessors.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\r\n\r\n    const sorted = JSON.parse(JSON.stringify(userProfessors));\r\n    setUserProfessors(sorted);\r\n  };\r\n\r\n  const content = (\r\n    <div>\r\n      <h2> All Professors</h2>\r\n\r\n      <select\r\n        className=\"sort-btn\"\r\n        onChange={e => {\r\n          sortHandler(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"order\">sort by:</option>\r\n        <option value=\"fName\">First Name</option>\r\n        <option value=\"lName\">Last name</option>\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      {content}\r\n      <ProfessorsList />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Profesors;\r\n","import Profesors from '../../components/professors/Profesors';\r\n\r\nconst AllProfessorsPage = () => {\r\n  return <Profesors />;\r\n};\r\n\r\nexport default AllProfessorsPage;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport Card from '../UI/Card';\r\n\r\nconst ProfessorForm = React.memo(props => {\r\n  console.log('prof form props', props);\r\n  const [profName, setProfName] = useState('');\r\n  const [profLName, setProfLName] = useState('');\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const submitHandler = e => {\r\n    console.log(e);\r\n    e.preventDefault();\r\n\r\n    // basic input validation\r\n    if (profName === '' || profLName === '') {\r\n      setFormValid(false);\r\n      alert('pls fill all fields');\r\n      return;\r\n    }\r\n    setFormValid(true);\r\n\r\n    const professorData = {\r\n      fName: profName,\r\n      lName: profLName,\r\n    };\r\n\r\n    props.onAddProfessor(professorData);\r\n\r\n    // clearing input fields\r\n    setProfName('');\r\n    setProfLName('');\r\n\r\n    history.replace('/students-input/all-professors');\r\n  };\r\n\r\n  const fNameChangeHandler = e => {\r\n    setProfName(e.target.value);\r\n  };\r\n  const lNameChangeHandler = e => {\r\n    setProfLName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <h2>Professor input form</h2>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"fName\">first name</label>\r\n          <input\r\n            placeholder={props.professor ? `${props.professor.fName}` : ''}\r\n            type=\"text\"\r\n            id=\"fName\"\r\n            value={profName}\r\n            onChange={fNameChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"lName\">last name</label>\r\n          <input\r\n            placeholder={props.professor ? `${props.professor.lName}` : ''}\r\n            type=\"text\"\r\n            id=\"lName\"\r\n            value={profLName}\r\n            onChange={lNameChangeHandler}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" className=\"add-btn\">\r\n            Add student\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ProfessorForm;\r\n","import React from 'react';\r\nimport db from '../firebase';\r\nimport ProfessorForm from './ProfessorForm';\r\n\r\nconst AddNewProfessor = () => {\r\n  const addProfessorHandler = professorData => {\r\n    db.collection('professors')\r\n      .add(professorData)\r\n      .then(docRef => {});\r\n  };\r\n\r\n  return <ProfessorForm onAddProfessor={addProfessorHandler} />;\r\n};\r\n\r\nexport default AddNewProfessor;\r\n","import AddNewProfessor from '../../components/professors/AddNewProfessor';\r\n\r\nconst AddProfessorsPage = () => {\r\n  return <AddNewProfessor />;\r\n};\r\n\r\nexport default AddProfessorsPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport db from '../firebase';\r\nimport ProfessorForm from './ProfessorForm';\r\n\r\nconst EditProfessor = () => {\r\n  const params = useParams();\r\n  const [professor, setProfessor] = useState({});\r\n  let postRef = db.collection('professors').doc(params.id);\r\n\r\n  useEffect(() => {\r\n    postRef.get().then(doc => {\r\n      const professor = doc.data();\r\n      setProfessor(professor);\r\n    });\r\n  }, []);\r\n\r\n  const changeHandler = editedprofessor => {\r\n    postRef.update(editedprofessor).then(() => {\r\n      console.log('Document edited');\r\n    });\r\n  };\r\n\r\n  return <ProfessorForm onAddProfessor={changeHandler} professor={professor} />;\r\n};\r\n\r\nexport default EditProfessor;\r\n","import EditProfessor from '../../components/professors/EditProfessor';\r\n\r\nconst EditProfessorPage = () => {\r\n  return <EditProfessor />;\r\n};\r\n\r\nexport default EditProfessorPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Card from '../UI/Card';\r\nimport db from '../firebase';\r\n\r\nconst ProfessorDetails = () => {\r\n  const [professor, setProfessor] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const params = useParams();\r\n  const professorId = params.id;\r\n\r\n  useEffect(() => {\r\n    db.collection('professors')\r\n      .doc(professorId)\r\n      .get()\r\n      .then(doc => {\r\n        let data = doc.data();\r\n        setProfessor(data);\r\n        setIsLoading(false);\r\n      });\r\n  }, [professorId]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card>\r\n        <h2>Loading professor..</h2>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <h2>{professor.fName} info:</h2>\r\n\r\n      <table id=\"details-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>subject</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{professor.fName} </span>\r\n            </td>\r\n            <td>\r\n              <span>{professor.lName} </span>\r\n            </td>\r\n            <td>\r\n              {professor.subject === undefined ? (\r\n                'not assigned yet'\r\n              ) : (\r\n                <span>{professor.subject.title} </span>\r\n              )}\r\n            </td>\r\n            <td>{professorId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfessorDetails;\r\n","import ProfessorDetails from '../../components/professors/ProfessorDetails';\r\n\r\nconst ProfessorDetailsPage = props => {\r\n  return <ProfessorDetails />;\r\n};\r\nexport default ProfessorDetailsPage;\r\n","const AddProffesorToSubjectList = props => {\r\n  return (\r\n    <section>\r\n      <h2>all professors list</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th style={{ textAlign: 'end' }}>add to subject</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.professors.map(st => (\r\n            <tr key={st.id} id={st.id}>\r\n              <td>\r\n                <span>{st.fName} </span>\r\n              </td>\r\n              <td>\r\n                <span>{st.lName} </span>\r\n              </td>\r\n\r\n              <td className=\"btn-td delete-td\">\r\n                <button\r\n                  className=\"add-btn\"\r\n                  onClick={() => props.onAddProfessorToSubject(st.id)}\r\n                >\r\n                  add\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddProffesorToSubjectList;\r\n","import { useState, useEffect } from 'react';\r\nimport db from '../firebase';\r\nimport AddProfToSubjectList from './AddProfToSubjectList';\r\n\r\nimport './Modal.css';\r\n\r\nconst ModalProfList = props => {\r\n  const subjectId = props.subjectId;\r\n  const subjectObj = props.userSubjects.find(x => x.id === subjectId);\r\n  const { subject } = subjectObj;\r\n\r\n  const [userProfessors, setUserProfessors] = useState([]);\r\n  let profRef = db.collection('professors');\r\n  let subjRef = db.collection('subjects');\r\n  // let studentRef = db.collection('students');\r\n\r\n  useEffect(() => {\r\n    profRef.get().then(professors =>\r\n      professors.forEach(student => {\r\n        let data = student.data();\r\n        let { id } = student;\r\n\r\n        let payload = {\r\n          id,\r\n          ...data,\r\n        };\r\n\r\n        // check if there is allready professors in list\r\n        if (!userProfessors.find(x => (x.id = id))) {\r\n          setUserProfessors(professors => [...professors, payload]);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  console.log(userProfessors);\r\n\r\n  const addProfessorToSubjectHandler = professorId => {\r\n    // profRef.doc(professorId).update({ subject: { subjectId, title: subject } });\r\n    profRef.doc(professorId).update({ subject: subjectId });\r\n\r\n    const profObj = userProfessors.find(x => x.id === professorId);\r\n    const { fName, lName } = profObj;\r\n\r\n    subjRef.doc(subjectId).update({ professor: professorId });\r\n\r\n    // studentRef.get().then(x => {\r\n    //   x.forEach(doc => {\r\n    //     doc.ref.set(\r\n    //       { subjects: { [subjectId]: { fName, lName }, subject: subject } },\r\n    //       { merge: true }\r\n    //     );\r\n    //   });\r\n    // });\r\n\r\n    // [subjectId]: { professor: { fName, lName } },\r\n\r\n    // const updatedSubjectInAllStudents = userStudents.map(x => {\r\n    //   if (x.subjects && Object.keys(x.subjects).includes(subjectId)) {\r\n    //     x.subjects[subjectId].title = newSubject;\r\n    //   }\r\n    //   return x;\r\n    // });\r\n    // setUserStudents(updatedSubjectInAllStudents);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Modal\">\r\n      <button onClick={() => props.onCloseModal()}>close modal</button>\r\n\r\n      <AddProfToSubjectList\r\n        professors={userProfessors}\r\n        onAddProfessorToSubject={addProfessorToSubjectHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalProfList;\r\n","const AddStudentToSubjectList = props => {\r\n  return (\r\n    <section>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th style={{ textAlign: 'end' }}>add to subject</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.students.map(st => (\r\n            <tr key={st.id} id={st.id}>\r\n              <td>\r\n                <span>{st.fName} </span>\r\n              </td>\r\n              <td>\r\n                <span>{st.lName} </span>\r\n              </td>\r\n\r\n              <td className=\"btn-td delete-td\">\r\n                <button\r\n                  className=\"add-btn\"\r\n                  onClick={() => props.onAddStudentToSubject(st.id)}\r\n                >\r\n                  add\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddStudentToSubjectList;\r\n","import { useEffect, useState } from 'react';\r\nimport db from '../firebase';\r\nimport AddStudentToSubjectList from './AddStudentToSubjectList';\r\nimport './Modal.css';\r\n\r\nconst ModalStudentsList = props => {\r\n  const subjectId = props.subjectId;\r\n  const subjectObj = props.userSubjects.find(x => x.id === subjectId);\r\n  let { subject, professor } = subjectObj;\r\n\r\n  const [userStudents, setUserStudents] = useState([]);\r\n  let postRef = db.collection('students');\r\n\r\n  useEffect(() => {\r\n    postRef.get().then(students =>\r\n      students.forEach(student => {\r\n        let data = student.data();\r\n        let { id } = student;\r\n\r\n        let payload = {\r\n          id,\r\n          ...data,\r\n        };\r\n\r\n        // check if there is allready students in list\r\n        if (!userStudents.find(x => (x.id = id))) {\r\n          setUserStudents(students => [...students, payload]);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const addStudentToSubjectHandler = studentId => {\r\n    if (professor === undefined) {\r\n      professor = '';\r\n    } else {\r\n      postRef\r\n        .doc(studentId)\r\n        .set({ subjects: { [subjectId]: '' } }, { merge: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Modal\">\r\n      <button onClick={() => props.onCloseModal()}>close modal</button>\r\n\r\n      <AddStudentToSubjectList\r\n        students={userStudents}\r\n        onAddStudentToSubject={addStudentToSubjectHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalStudentsList;\r\n","import { useEffect, useState } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport db from '../firebase';\r\nimport Card from '../UI/Card';\r\nimport ModalProfList from './ModalProfList';\r\nimport ModalStudentsList from './ModalStudentsList';\r\nimport LoadSubjects from './LoadSubjects';\r\n\r\nconst SubjectsList = props => {\r\n  const match = useRouteMatch();\r\n  const [userSubjects, setUserSubjects] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [subjectId, setSubjectId] = useState('');\r\n  const [studentsModal, setStudentsModal] = useState(false);\r\n  const [professorsModal, setProfessorsModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let subjectRef = db.collection('subjects');\r\n    subjectRef.get().then(subjects =>\r\n      subjects.forEach(subject => {\r\n        let data = subject.data();\r\n        let { id } = subject;\r\n\r\n        let payload = {\r\n          id,\r\n          ...data,\r\n        };\r\n\r\n        // check if there is allready students in list\r\n        if (!userSubjects.find(x => (x.id = id))) {\r\n          setUserSubjects(subjects => [...subjects, payload]);\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   // LoadSubjects();\r\n  //   // const payload = LoadSubjects();\r\n  //   // console.log(payload);\r\n  //   // if (!userSubjects.find(x => (x.id = id))) {\r\n  //   //   setUserSubjects(subjects => [...subjects, payload]);\r\n  //   //   setIsLoading(false);\r\n  //   // }\r\n  // }, [userSubjects]);\r\n\r\n  const removeSubjectHandler = subjectId => {\r\n    let subjectRef = db.collection('subjects');\r\n    subjectRef\r\n      .doc(subjectId)\r\n      .delete()\r\n      .then(() => {\r\n        console.log('Subject successfully deleted!');\r\n      });\r\n  };\r\n\r\n  const onAddStudentToSubject = subjectId => {\r\n    setSubjectId(subjectId);\r\n    setStudentsModal(true);\r\n  };\r\n\r\n  const closeStudentsModal = () => {\r\n    setStudentsModal(false);\r\n  };\r\n\r\n  const onAddProfToSubject = subjectId => {\r\n    setSubjectId(subjectId);\r\n    setProfessorsModal(true);\r\n  };\r\n\r\n  const closeProfessorsModal = () => {\r\n    setProfessorsModal(false);\r\n  };\r\n\r\n  // sorting\r\n  const sortHandler = e => {\r\n    const sortProperty = e;\r\n    userSubjects.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\r\n\r\n    const sorted = JSON.parse(JSON.stringify(userSubjects));\r\n    setUserSubjects(sorted);\r\n  };\r\n\r\n  let content = (\r\n    <div>\r\n      <h2> All Subjects</h2>\r\n\r\n      <select\r\n        className=\"sort-btn\"\r\n        onChange={e => {\r\n          sortHandler(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"order\">sort by:</option>\r\n        <option value=\"fName\">First Name</option>\r\n        <option value=\"lName\">Last name</option>\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      {content}\r\n      {isLoading && <h2>Loading...</h2>}\r\n      {studentsModal && (\r\n        <ModalStudentsList\r\n          onCloseModal={closeStudentsModal}\r\n          subjectId={subjectId}\r\n          userSubjects={userSubjects}\r\n        />\r\n      )}\r\n\r\n      {professorsModal && (\r\n        <ModalProfList\r\n          onCloseModal={closeProfessorsModal}\r\n          subjectId={subjectId}\r\n          userSubjects={userSubjects}\r\n        />\r\n      )}\r\n\r\n      {userSubjects.map(st => (\r\n        <div className=\"item-wrapper\" key={st.id} id={st.id}>\r\n          <div className=\"info-wrapper\">\r\n            <span>subject: {st.subject}</span>\r\n          </div>\r\n          <div className=\"btn-wrapper\">\r\n            <Link to={`${match.url}/details/${st.id}`}>\r\n              <button className=\"info-btn\">&#8505;</button>\r\n            </Link>\r\n            <Link to={`${match.url}/edit/${st.id}`}>\r\n              <button className=\"change-btn\">edit</button>\r\n            </Link>\r\n            <button\r\n              className=\"change-btn\"\r\n              onClick={() => onAddStudentToSubject(st.id)}\r\n            >\r\n              add student\r\n            </button>\r\n            <button\r\n              className=\"change-btn\"\r\n              onClick={() => onAddProfToSubject(st.id)}\r\n            >\r\n              add professor\r\n            </button>\r\n\r\n            <button\r\n              className=\"delete-btn\"\r\n              onClick={() => removeSubjectHandler(st.id)}\r\n            >\r\n              delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SubjectsList;\r\n","import SubjectsList from '../../components/subjects/SubjectsList';\r\n\r\nconst AllSubjectsPage = () => {\r\n  return <SubjectsList />;\r\n};\r\n\r\nexport default AllSubjectsPage;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport Card from '../UI/Card';\r\n\r\nconst SubjectForm = React.memo(props => {\r\n  const [enteredSubject, setEnteredSubject] = useState('');\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    if (enteredSubject === '') {\r\n      setFormValid(false);\r\n      alert('pls enter subject name');\r\n      return;\r\n    }\r\n    setFormValid(true);\r\n\r\n    const subjectData = {\r\n      subject: enteredSubject,\r\n    };\r\n\r\n    props.onAddSubject(subjectData);\r\n\r\n    setEnteredSubject('');\r\n\r\n    history.replace('/students-input/all-subjects');\r\n  };\r\n\r\n  const subjectChangeHandler = e => {\r\n    setEnteredSubject(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <h2>Subject input form</h2>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"subject\">subject name</label>\r\n          <input\r\n            placeholder={props.subject ? `${props.subject.subject}` : ''}\r\n            type=\"text\"\r\n            id=\"subject\"\r\n            value={enteredSubject}\r\n            onChange={subjectChangeHandler}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" className=\"add-btn\">\r\n            {props.subject ? 'save changes' : 'add subject'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SubjectForm;\r\n","import React from 'react';\r\nimport db from '../firebase';\r\nimport SubjectForm from './SubjectForm';\r\n\r\nconst AddNewSubject = () => {\r\n  const addSubjectHandler = subjectData => {\r\n    db.collection('subjects')\r\n      .add(subjectData)\r\n      .then(docRef => {});\r\n  };\r\n\r\n  return <SubjectForm onAddSubject={addSubjectHandler} />;\r\n};\r\n\r\nexport default AddNewSubject;\r\n","import AddNewSubject from '../../components/subjects/AddNewSubject';\r\nconst AddSubjectPage = () => {\r\n  return <AddNewSubject />;\r\n};\r\n\r\nexport default AddSubjectPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport db from '../firebase';\r\nimport SubjectForm from './SubjectForm';\r\n\r\nconst EditSubject = () => {\r\n  const params = useParams();\r\n  const [subject, setSubject] = useState({});\r\n  let subjectRef = db.collection('subjects').doc(params.id);\r\n\r\n  useEffect(() => {\r\n    subjectRef.get().then(doc => {\r\n      const subject = doc.data();\r\n      setSubject(subject);\r\n    });\r\n  }, []);\r\n\r\n  const changeHandler = editedSubject => {\r\n    subjectRef.update({ subject: editedSubject.subject });\r\n  };\r\n\r\n  return <SubjectForm onAddSubject={changeHandler} subject={subject} />;\r\n};\r\n\r\nexport default EditSubject;\r\n","import EditSubject from '../../components/subjects/EditSubject';\r\n\r\nconst EditSubjectPage = () => {\r\n  return <EditSubject />;\r\n};\r\n\r\nexport default EditSubjectPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Card from '../UI/Card';\r\nimport db from '../firebase';\r\n\r\nconst SubjectDetails = () => {\r\n  const [subject, setSubject] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const params = useParams();\r\n  const subjectId = params.id;\r\n\r\n  useEffect(() => {\r\n    db.collection('subjects')\r\n      .doc(subjectId)\r\n      .get()\r\n      .then(doc => {\r\n        let data = doc.data();\r\n        setSubject(data);\r\n        setIsLoading(false);\r\n      });\r\n  }, [subjectId]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card>\r\n        <h2>Loading subject..</h2>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <h2>{subject.subject} info:</h2>\r\n\r\n      <table id=\"details-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>title</th>\r\n            <th>professor</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{subject.subject} </span>\r\n            </td>\r\n            <td>\r\n              {subject.professor === undefined ? (\r\n                'not assigned yet'\r\n              ) : (\r\n                <span>\r\n                  {subject.professor.fName} {subject.professor.lName}\r\n                </span>\r\n              )}\r\n            </td>\r\n            <td>{subjectId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SubjectDetails;\r\n","import SubjectDetails from '../../components/subjects/SubjectDetails';\r\n\r\nconst SubjectDetailsPage = () => {\r\n  return <SubjectDetails />;\r\n};\r\n\r\nexport default SubjectDetailsPage;\r\n","import { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport MainNavigation from './components/layout/MainNavigation';\nimport HomePagePage from './pages/HomePage';\nimport AddPage from './pages/AddPage';\nimport AllStudentsPage from './pages/studentsPage/AllStudentsPage';\nimport AddStudentPage from './pages/studentsPage/AddStudentPage';\nimport EditStudentsPage from './pages/studentsPage/EditStudentPage';\nimport StudentDetailsPage from './pages/studentsPage/StudentDetailsPage';\nimport AllProfessorsPage from './pages/professorsPage/AllProfessorsPage';\nimport AddProfessorsPage from './pages/professorsPage/AddProfessorsPage';\nimport EditProfessorPage from './pages/professorsPage/EditProfessorPage';\nimport ProfessorDetailsPage from './pages/professorsPage/ProffesorDetailsPage';\nimport AllSubjectsPage from './pages/subjectsPage/AllSubjectsPage';\nimport AddSubjectPage from './pages/subjectsPage/AddSubjectPage';\nimport EditSubjectsPage from './pages/subjectsPage/EditSubjectPage';\nimport SubjectDetailsPage from './pages/subjectsPage/SubjectDetailsPage';\n\nfunction App() {\n  return (\n    <div>\n      <MainNavigation />\n      <Switch>\n        <Route path=\"/students-input\" exact>\n          <HomePagePage />\n        </Route>\n        <Route path=\"/students-input/add\" exact>\n          <AddPage />\n        </Route>\n        <Route path=\"/students-input/all-students\" exact>\n          <AllStudentsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects\" exact>\n          <AllSubjectsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors\" exact>\n          <AllProfessorsPage />\n        </Route>\n        <Route path=\"/students-input/all-students/details/:id\" exact>\n          <StudentDetailsPage />\n        </Route>\n        <Route path=\"/students-input/all-students/edit/:id\" exact>\n          <EditStudentsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects/details/:id\" exact>\n          <SubjectDetailsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects/edit/:id\" exact>\n          <EditSubjectsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors/details/:id\" exact>\n          <ProfessorDetailsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors/edit/:id\" exact>\n          <EditProfessorPage />\n        </Route>\n        <Route path=\"/students-input/add-new-student\" exact>\n          <AddStudentPage />\n        </Route>\n        <Route path=\"/students-input/add-new-subject\" exact>\n          <AddSubjectPage />\n        </Route>\n        <Route path=\"/students-input/add-new-professor\" exact>\n          <AddProfessorsPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}