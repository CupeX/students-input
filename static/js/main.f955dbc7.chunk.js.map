{"version":3,"sources":["components/layout/MainNavigation.js","components/UI/Card.js","pages/HomePage.js","components/layout/AddPage.js","pages/AddPage.js","store/data-context.js","components/students/StudentsList.js","pages/studentsPage/AllStudentsPage.js","services/firebase.js","components/comon/BaseInput.js","components/students/StudentForm.js","components/students/AddNewStudent.js","pages/studentsPage/AddStudentPage.js","components/students/EditStudent.js","pages/studentsPage/EditStudentPage.js","components/professors/ProfessorsList.js","pages/professorsPage/AllProfessorsPage.js","components/professors/ProfessorForm.js","components/professors/AddNewProfessor.js","pages/professorsPage/AddProfessorsPage.js","components/professors/EditProfessor.js","pages/professorsPage/EditProfessorPage.js","components/subjects/AddProfToSubjectList.js","components/subjects/ModalProfList.js","components/subjects/AddStudentToSubjectList.js","components/subjects/ModalStudentsList.js","components/subjects/SubjectsList.js","pages/subjectsPage/AllSubjectsPage.js","components/subjects/SubjectForm.js","components/subjects/AddNewSubject.js","pages/subjectsPage/AddSubjectPage.js","components/subjects/EditSubject.js","pages/subjectsPage/EditSubjectPage.js","components/students/StudentDetailsTest.js","components/subjects/SubjectDetailsTest.js","components/professors/ProfessorDetailsTest.js","App.js","reportWebVitals.js","services/FetchStudents.js","services/FetchSubjects.js","services/FetchProfessors.js","store/DataProvider.js","index.js"],"names":["MainNavigation","history","useHistory","useState","isOpen","setIsOpen","Navbar","className","expand","NavbarBrand","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","onChange","e","push","testing","target","value","Card","props","children","HomePage","AddNew","Button","color","AddPage","DataContext","createContext","StudentsList","useContext","userStudents","isLoaded","removeHandler","content","filteredList","setFilteredList","useEffect","match","useRouteMatch","ListGroup","map","st","ListGroupItem","id","Table","fName","lName","year","url","studentId","y","passInput","prompt","filter","password","console","log","alert","checkPassHandler","AllStudentsPage","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","BaseInput","passwordVisible","setPasswordVisible","InputGroup","InputGroupAddon","addonType","InputGroupText","label","Input","placeholder","type","test","StudentForm","React","memo","enteredFName","setEnteredFName","enteredLName","setEnteredLName","enteredYear","setEnteredYear","enteredPass","setEnteredPass","setFormValid","onSubmit","preventDefault","student","subjects","onAddStudent","replace","min","AddNewStudent","fetchAll","collection","add","then","docRef","AddStudentPage","EditStudent","params","useParams","setStudent","postRef","doc","get","data","editedStudent","update","EditStudentsPage","ProfessorsList","userProfessors","AllProfessorsPage","ProfessorForm","profName","setProfName","profLName","setProfLName","professorData","subject","onAddProfessor","professor","AddNewProfessor","AddProfessorsPage","EditProfessor","setProfessor","editedprofessor","EditProfessorPage","AddProffesorToSubjectList","x","subjectId","professorId","profRef","subjRef","addProfessorToSubjectHandler","ModalProfList","onCloseModal","AddProfToSubjectList","AddStudentToSubjectList","Object","keys","includes","style","textAlign","set","merge","ModalStudentsList","SubjectsList","userSubjects","setSubjectId","studentsModal","setStudentsModal","professorsModal","setProfessorsModal","onAddStudentToSubject","onAddProfToSubject","AllSubjectsPage","SubjectForm","enteredSubject","setEnteredSubject","subjectData","onAddSubject","AddNewSubject","AddSubjectPage","EditSubject","setSubject","subjectRef","editedSubject","EditSubjectPage","StudentDetailsTest","find","striped","prof","SubjectDetailsTest","attendingStudents","ProfessorDetailsTest","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FetchStudents","Promise","res","rej","students","studArray","forEach","payload","FetchSubjects","subArray","FetchProfessors","professors","profArray","DataProvider","setUserStudents","setUserSubjects","setUserProfessors","isLoadedStudents","setIsLoadedStudents","isLoadedSubjects","setIsLoadedSubjects","isLoadedProfessors","setIsLoadedProfessors","setIsLoaded","sortHandler","sortProperty","sort","a","b","sorted","JSON","parse","stringify","Provider","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f955dbc7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  NavItem,\n} from 'reactstrap';\n\nimport './MainNavigation.css';\n\nconst MainNavigation = () => {\n  const history = useHistory();\n  const testing = e => {\n    history.push(`/${e}`);\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <header>\n      <Navbar className=\"px-5 py-3 justify-content-between\" expand=\"md\">\n        <NavbarBrand className=\"logo\" to=\"/\">\n          CupeX first app\n        </NavbarBrand>\n\n        <NavbarToggler onClick={toggle} />\n\n        <Collapse className=\"flex-grow-0\" isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem className=\"px-2\">\n              <Link to=\"/all-students\">Students</Link>\n            </NavItem>\n            <NavItem className=\"px-2\">\n              <Link to=\"/all-subjects\">Subjects</Link>\n            </NavItem>\n            <NavItem className=\"px-2\">\n              <Link to=\"/all-professors\">Professors</Link>\n            </NavItem>\n            <li>\n              <select\n                className=\"sort-btn\"\n                onChange={e => testing(e.target.value)}\n              >\n                <option value=\"add\">Add new?</option>\n                <option value=\"add-new-student\">Add new student</option>\n                <option value=\"add-new-professor\">Add new profesor</option>\n                <option value=\"add-new-subject\">Add new subject</option>\n              </select>\n            </li>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import Card from '../components/UI/Card';\n\nconst HomePage = () => {\n  return (\n    <Card>\n      <h1>Home Page</h1>\n    </Card>\n  );\n};\n\nexport default HomePage;\n","import { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport Card from '../UI/Card';\n\nconst AddNew = () => {\n  return (\n    <Card>\n      <h2>Add new:</h2>\n      <div className=\"d-flex justify-content-around m-5 \">\n        <Link to=\"/students-input/add-new-student\">\n          <Button className=\"btn text-uppercase\" color=\"success\">\n            student\n          </Button>\n        </Link>\n\n        <Link to=\"/students-input/add-new-subject\">\n          <Button className=\"btn text-uppercase\" color=\"success\">\n            subject\n          </Button>\n        </Link>\n\n        <Link to=\"/students-input/add-new-professor\">\n          <Button className=\"btn text-uppercase\" color=\"success\">\n            professor\n          </Button>\n        </Link>\n      </div>\n    </Card>\n  );\n};\n\nexport default AddNew;\n","import AddNew from '../components/layout/AddPage';\n\nconst AddPage = () => {\n  return <AddNew />;\n};\n\nexport default AddPage;\n","import { createContext } from 'react';\n\nconst DataContext = createContext();\n\nexport default DataContext;\n","import { useContext, useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport { Button, ListGroup, ListGroupItem, Table } from 'reactstrap';\nimport DataContext from '../../store/data-context.js';\n\nconst StudentsList = () => {\n  const { userStudents, isLoaded, removeHandler, content } =\n    useContext(DataContext);\n  const [filteredList, setFilteredList] = useState([]);\n\n  useEffect(() => {\n    setFilteredList(userStudents);\n  }, [isLoaded, userStudents]);\n\n  const match = useRouteMatch();\n\n  const checkPassHandler = (studentId, y) => {\n    const passInput = prompt('enter password');\n    const [password] = userStudents\n      .filter(st => st.id === studentId)\n      .map(st => st.password);\n\n    if (passInput === password) {\n      removeHandler(studentId, y);\n      console.log('student deleted');\n    } else {\n      alert('wrong password!');\n    }\n  };\n\n  return (\n    <Card>\n      <h2> All Students</h2>\n\n      {content(userStudents, 'userStudents', 'fName', 'lName', 'year')}\n\n      {!isLoaded && <h2>Loading...</h2>}\n      <ListGroup className=\"mt-5\">\n        {filteredList.map(st => (\n          <ListGroupItem\n            className=\"my-3 d-flex justify-content-between align-items-center \"\n            key={st.id}\n            id={st.id}\n          >\n            <Table className=\"text-start w-50 \">\n              <tbody>\n                <tr>\n                  <td>\n                    student:\n                    <strong>\n                      {st.fName} {st.lName}\n                    </strong>\n                  </td>\n                </tr>\n                <tr>\n                  <td>born: {st.year}</td>\n                </tr>\n              </tbody>\n            </Table>\n\n            <div className=\"text-end\">\n              <Link to={`${match.url}/details/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"info\">\n                  info\n                </Button>\n              </Link>\n              <Link to={`${match.url}/edit/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"success\">\n                  edit\n                </Button>\n              </Link>\n              <Button\n                className=\"btn mx-1\"\n                color=\"danger\"\n                onClick={() => checkPassHandler(st.id, 'students')}\n              >\n                delete\n              </Button>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default StudentsList;\n","import StudentsList from '../../components/students/StudentsList';\n\nconst AllStudentsPage = () => {\n  return <StudentsList />;\n};\n\nexport default AllStudentsPage;\n","import firebase from 'firebase';\nrequire('firebase/firestore');\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAmiHfPoCndQtpGB3sdhvNAnzER_NYqRq0',\n  authDomain: 'students-input.firebaseapp.com',\n  databaseURL:\n    'https://students-input-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'students-input',\n  storageBucket: 'students-input.appspot.com',\n  messagingSenderId: '1037427824217',\n  appId: '1:1037427824217:web:edad276ef09ea0b4688348',\n  measurementId: 'G-459YJZBEBM',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nvar db = firebase.firestore();\n\n// export const auth = firebase.auth();\nexport const firestore = firebase.firestore;\nexport default db;\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from 'reactstrap';\n\nconst BaseInput = props => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const showPasswordHandler = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  return (\n    <InputGroup className=\"py-1\">\n      <InputGroupAddon className=\"w-25\" addonType=\"prepend\">\n        <InputGroupText>{props.label}</InputGroupText>\n      </InputGroupAddon>\n      <Input\n        placeholder={props.placeholder}\n        type={passwordVisible ? 'text' : props.type}\n        id={props.fName}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      {props.test && <Button onClick={showPasswordHandler}>&#x1F441;</Button>}\n    </InputGroup>\n  );\n};\n\nexport default BaseInput;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BaseInput from '../comon/BaseInput';\nimport { Button } from 'reactstrap';\n\nimport Card from '../UI/Card';\n\nconst StudentForm = React.memo(props => {\n  const [enteredFName, setEnteredFName] = useState('');\n  const [enteredLName, setEnteredLName] = useState('');\n  const [enteredYear, setEnteredYear] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (\n      enteredFName === '' ||\n      enteredLName === '' ||\n      enteredYear === '' ||\n      enteredPass === ''\n    ) {\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const student = {\n      fName: enteredFName,\n      lName: enteredLName,\n      year: enteredYear,\n      password: enteredPass,\n      subjects: {},\n    };\n    props.onAddStudent(student);\n\n    // clearing input fields\n    setEnteredFName('');\n    setEnteredLName('');\n    setEnteredYear('');\n    setEnteredPass('');\n    history.replace('/all-students');\n  };\n\n  const fNameChangeHandler = e => {\n    setEnteredFName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setEnteredLName(e.target.value);\n  };\n  const yearChangeHandler = e => {\n    setEnteredYear(e.target.value);\n  };\n  const passChangeHandler = e => {\n    setEnteredPass(e.target.value);\n  };\n\n  return (\n    <section>\n      <Card>\n        <h2>Students input form</h2>\n\n        <form onSubmit={submitHandler}>\n          <BaseInput\n            type=\"text\"\n            id=\"fName\"\n            onChange={fNameChangeHandler}\n            placeholder={props.student ? `${props.student.fName}` : ''}\n            value={enteredFName}\n            label={'First name:'}\n          />\n\n          <BaseInput\n            type=\"text\"\n            id=\"lName\"\n            onChange={lNameChangeHandler}\n            placeholder={props.student ? `${props.student.lName}` : ''}\n            value={enteredLName}\n            label={'Last name:'}\n          />\n\n          <BaseInput\n            type=\"date\"\n            min=\"1111-01-01\"\n            id=\"year\"\n            onChange={yearChangeHandler}\n            placeholder={props.student ? `${props.student.year}` : ''}\n            value={enteredYear}\n            label={'Date of Birth:'}\n          />\n\n          <BaseInput\n            placeholder={props.student ? `${props.student.password}` : ''}\n            type=\"password\"\n            id=\"pass\"\n            value={enteredPass}\n            onChange={passChangeHandler}\n            label={'Password:'}\n            test=\"test\"\n          />\n\n          <div>\n            <Button type=\"submit\" className=\"btn btn-success mt-4\">\n              {props.student ? 'save changes' : 'add student'}\n            </Button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default StudentForm;\n","import React, { useContext } from 'react';\nimport db from '../../services/firebase';\nimport StudentForm from './StudentForm';\nimport DataContext from '../../store/data-context.js';\n\nconst AddNewStudent = () => {\n  const { fetchAll } = useContext(DataContext);\n\n  const addStudentHandler = student => {\n    db.collection('students')\n      .add(student)\n      .then(docRef => {})\n      .then(() => {\n        fetchAll();\n      });\n  };\n\n  return <StudentForm onAddStudent={addStudentHandler} />;\n};\n\nexport default AddNewStudent;\n","import AddNewStudent from '../../components/students/AddNewStudent';\n\nconst AddStudentPage = () => {\n  return <AddNewStudent />;\n};\n\nexport default AddStudentPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../../services/firebase';\nimport StudentForm from './StudentForm';\n\nconst EditStudent = () => {\n  const params = useParams();\n  const [student, setStudent] = useState({});\n  let postRef = db.collection('students').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const student = doc.data();\n      setStudent(student);\n    });\n  }, []);\n\n  const changeHandler = editedStudent => {\n    postRef.update(editedStudent).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <StudentForm onAddStudent={changeHandler} student={student} />;\n};\n\nexport default EditStudent;\n","import EditStudent from '../../components/students/EditStudent';\n\nconst EditStudentsPage = () => {\n  return <EditStudent />;\n};\n\nexport default EditStudentsPage;\n","import { useContext, useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport DataContext from '../../store/data-context.js';\nimport Card from '../UI/Card';\n\nconst ProfessorsList = () => {\n  const match = useRouteMatch();\n  const [filteredList, setFilteredList] = useState([]);\n\n  const { userProfessors, isLoaded, removeHandler, content } =\n    useContext(DataContext);\n\n  useEffect(() => {\n    setFilteredList(userProfessors);\n  }, [isLoaded, userProfessors]);\n\n  return (\n    <Card>\n      <h2> All Students</h2>\n\n      {content(userProfessors, 'userProfessors', 'fName', 'lName')}\n\n      {!isLoaded && <h2>Loading...</h2>}\n      <ListGroup className=\"mt-5\">\n        {filteredList.map(st => (\n          <ListGroupItem\n            className=\"my-3 py-4 d-flex justify-content-between align-items-center \"\n            key={st.id}\n            id={st.id}\n          >\n            <div>\n              <span>\n                professor:{' '}\n                <strong>\n                  {st.fName} {st.lName}\n                </strong>\n              </span>\n            </div>\n            <div className=\"btn-wrapper\">\n              <Link to={`${match.url}/details/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"info\">\n                  info\n                </Button>\n              </Link>\n              <Link to={`${match.url}/edit/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"success\">\n                  edit\n                </Button>\n              </Link>\n              <Button\n                className=\"btn mx-1\"\n                color=\"danger\"\n                onClick={() => removeHandler(st.id, 'professors')}\n              >\n                delete\n              </Button>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default ProfessorsList;\n","import ProfessorsList from '../../components/professors/ProfessorsList';\n\nconst AllProfessorsPage = () => {\n  return <ProfessorsList />;\n};\n\nexport default AllProfessorsPage;\n","import { Button } from 'reactstrap';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst ProfessorForm = React.memo(props => {\n  const [profName, setProfName] = useState('');\n  const [profLName, setProfLName] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (profName === '' || profLName === '') {\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const professorData = {\n      fName: profName,\n      lName: profLName,\n      subject: 'not teaching yet',\n    };\n\n    props.onAddProfessor(professorData);\n\n    // clearing input fields\n    setProfName('');\n    setProfLName('');\n\n    history.replace('/all-professors');\n  };\n\n  const fNameChangeHandler = e => {\n    setProfName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setProfLName(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Professor input form</h2>\n      <form onSubmit={submitHandler}>\n        <BaseInput\n          placeholder={props.professor ? `${props.professor.fName}` : ''}\n          type=\"text\"\n          id=\"fName\"\n          value={profName}\n          onChange={fNameChangeHandler}\n          label={'First name:'}\n        />\n        <BaseInput\n          placeholder={props.professor ? `${props.professor.lName}` : ''}\n          type=\"text\"\n          id=\"lName\"\n          value={profLName}\n          onChange={lNameChangeHandler}\n          label={'Last name:'}\n        />\n\n        <div>\n          <Button type=\"submit\" className=\"btn btn-success mt-4\">\n            {props.professor ? 'save changes' : 'add profeesor'}\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default ProfessorForm;\n","import React, { useContext } from 'react';\nimport db from '../../services/firebase';\nimport ProfessorForm from './ProfessorForm';\nimport DataContext from '../../store/data-context.js';\n\nconst AddNewProfessor = () => {\n  const { fetchAll } = useContext(DataContext);\n\n  const addProfessorHandler = professorData => {\n    db.collection('professors')\n      .add(professorData)\n      .then(docRef => {})\n      .then(() => {\n        fetchAll();\n      });\n  };\n\n  return <ProfessorForm onAddProfessor={addProfessorHandler} />;\n};\n\nexport default AddNewProfessor;\n","import AddNewProfessor from '../../components/professors/AddNewProfessor';\n\nconst AddProfessorsPage = () => {\n  return <AddNewProfessor />;\n};\n\nexport default AddProfessorsPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../../services/firebase';\nimport ProfessorForm from './ProfessorForm';\n\nconst EditProfessor = () => {\n  const params = useParams();\n  const [professor, setProfessor] = useState({});\n  let postRef = db.collection('professors').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const professor = doc.data();\n      setProfessor(professor);\n    });\n  }, []);\n\n  const changeHandler = editedprofessor => {\n    postRef.update(editedprofessor).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <ProfessorForm onAddProfessor={changeHandler} professor={professor} />;\n};\n\nexport default EditProfessor;\n","import EditProfessor from '../../components/professors/EditProfessor';\n\nconst EditProfessorPage = () => {\n  return <EditProfessor />;\n};\n\nexport default EditProfessorPage;\n","import { useContext } from 'react';\nimport { Table } from 'reactstrap';\nimport DataContext from '../../store/data-context.js';\nimport db from '../../services/firebase';\n\nconst AddProffesorToSubjectList = props => {\n  const { userProfessors } = useContext(DataContext);\n  const filteredList = userProfessors.filter(\n    x => x.subject !== props.subjectId\n  );\n\n  const addProfessorToSubjectHandler = professorId => {\n    let profRef = db.collection('professors');\n    let subjRef = db.collection('subjects');\n    profRef.doc(professorId).update({ subject: props.subjectId });\n    subjRef.doc(props.subjectId).update({ professor: professorId });\n  };\n\n  return (\n    <section>\n      <h2>all professors list</h2>\n      <Table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredList.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => addProfessorToSubjectHandler(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </section>\n  );\n};\n\nexport default AddProffesorToSubjectList;\n","import AddProfToSubjectList from './AddProfToSubjectList';\n\nimport './Modal.css';\n\nconst ModalProfList = props => {\n  const subjectId = props.subjectId;\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddProfToSubjectList subjectId={subjectId} />\n    </div>\n  );\n};\n\nexport default ModalProfList;\n","import { useContext } from 'react';\nimport DataContext from '../../store/data-context.js';\nimport { Table } from 'reactstrap';\nimport db from '../../services/firebase';\n\nconst AddStudentToSubjectList = props => {\n  const { userStudents } = useContext(DataContext);\n  const filteredList = userStudents.filter(\n    x => !Object.keys(x.subjects).includes(props.subjectId)\n  );\n\n  const addStudentToSubjectHandler = studentId => {\n    let postRef = db.collection('students');\n    postRef\n      .doc(studentId)\n      .set({ subjects: { [props.subjectId]: '' } }, { merge: true });\n  };\n\n  return (\n    <section>\n      <Table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th style={{ textAlign: 'end' }}>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredList.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => addStudentToSubjectHandler(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </section>\n  );\n};\n\nexport default AddStudentToSubjectList;\n","import AddStudentToSubjectList from './AddStudentToSubjectList';\nimport './Modal.css';\n\nconst ModalStudentsList = props => {\n  const subjectId = props.subjectId;\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddStudentToSubjectList subjectId={subjectId} />\n    </div>\n  );\n};\n\nexport default ModalStudentsList;\n","import { useState, useContext, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport Card from '../UI/Card';\nimport ModalProfList from './ModalProfList';\nimport ModalStudentsList from './ModalStudentsList';\nimport DataContext from '../../store/data-context.js';\n\nconst SubjectsList = () => {\n  const { userSubjects, isLoaded, removeHandler, content } =\n    useContext(DataContext);\n  const [subjectId, setSubjectId] = useState('');\n  const [studentsModal, setStudentsModal] = useState(false);\n  const [professorsModal, setProfessorsModal] = useState(false);\n  const [filteredList, setFilteredList] = useState([]);\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    if (isLoaded) {\n      setFilteredList(userSubjects);\n    }\n  }, [isLoaded, userSubjects]);\n\n  const onAddStudentToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setStudentsModal(true);\n  };\n\n  const closeStudentsModal = () => {\n    setStudentsModal(false);\n  };\n\n  const onAddProfToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setProfessorsModal(true);\n  };\n\n  const closeProfessorsModal = () => {\n    setProfessorsModal(false);\n  };\n\n  // // sorting\n  // const sortHandler = e => {\n  //   const sortProperty = e;\n  //   userSubjects.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n  //   const sorted = JSON.parse(JSON.stringify(userSubjects));\n  //   setFilteredList(sorted);\n  // };\n\n  // let content = (\n  //   <div>\n  //     <h2> All Subjects</h2>\n\n  //     <select\n  //       className=\"sort-btn\"\n  //       onChange={e => {\n  //         sortHandler(e.target.value);\n  //       }}\n  //     >\n  //       <option value=\"order\">sort by:</option>\n  //       <option value=\"fName\">First Name</option>\n  //       <option value=\"lName\">Last name</option>\n  //     </select>\n  //   </div>\n  // );\n\n  return (\n    <Card>\n      <h2> All Subjects</h2>\n\n      {content(userSubjects, 'userSubjects', 'fName', 'lName')}\n\n      {!isLoaded && <h2>Loading...</h2>}\n\n      {studentsModal && (\n        <ModalStudentsList\n          onCloseModal={closeStudentsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      {professorsModal && (\n        <ModalProfList\n          onCloseModal={closeProfessorsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      <ListGroup className=\"mt-5\">\n        {isLoaded &&\n          filteredList.map(st => (\n            <ListGroupItem\n              className=\"my-3 py-4 d-flex justify-content-between align-items-center\"\n              key={st.id}\n              id={st.id}\n            >\n              <div className=\"text-start\">\n                <span>\n                  subject: <strong> {st.subject}</strong>\n                </span>\n              </div>\n              <div className=\"text-end\">\n                <Link to={`${match.url}/details/${st.id}`}>\n                  <Button className=\"btn mx-1\" color=\"info\">\n                    info\n                  </Button>\n                </Link>\n                <Link to={`${match.url}/edit/${st.id}`}>\n                  <Button className=\"btn mx-1\" color=\"secondary\">\n                    edit\n                  </Button>\n                </Link>\n                <Button\n                  className=\"btn mx-1\"\n                  color=\"success\"\n                  onClick={() => onAddStudentToSubject(st.id)}\n                >\n                  add student\n                </Button>\n                <Button\n                  className=\"btn mx-1\"\n                  color=\"success\"\n                  onClick={() => onAddProfToSubject(st.id)}\n                >\n                  add professor\n                </Button>\n\n                <Button\n                  className=\"btn mx-1\"\n                  color=\"danger\"\n                  onClick={() => removeHandler(st.id, 'subjects')}\n                >\n                  delete\n                </Button>\n              </div>\n            </ListGroupItem>\n          ))}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default SubjectsList;\n","import SubjectsList from '../../components/subjects/SubjectsList';\n\nconst AllSubjectsPage = () => {\n  return <SubjectsList />;\n};\n\nexport default AllSubjectsPage;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Button } from 'reactstrap';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst SubjectForm = React.memo(props => {\n  const [enteredSubject, setEnteredSubject] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (enteredSubject === '') {\n      alert('pls enter subject name');\n      return;\n    }\n    setFormValid(true);\n\n    const subjectData = {\n      subject: enteredSubject,\n      professor: 'not assigned yet',\n    };\n\n    props.onAddSubject(subjectData);\n\n    setEnteredSubject('');\n\n    history.replace('/all-subjects');\n  };\n\n  const subjectChangeHandler = e => {\n    setEnteredSubject(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Subject input form</h2>\n      <form onSubmit={submitHandler}>\n        <BaseInput\n          placeholder={props.subject ? `${props.subject.subject}` : ''}\n          type=\"text\"\n          id=\"subject\"\n          value={enteredSubject}\n          onChange={subjectChangeHandler}\n          label={'Subject title:'}\n        />\n        <div>\n          <Button type=\"submit\" className=\"btn btn-success mt-4\">\n            {props.subject ? 'save changes' : 'add subject'}\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default SubjectForm;\n","import React, { useContext } from 'react';\nimport db from '../../services/firebase';\nimport SubjectForm from './SubjectForm';\nimport DataContext from '../../store/data-context.js';\n\nconst AddNewSubject = () => {\n  const { fetchAll } = useContext(DataContext);\n\n  const addSubjectHandler = subjectData => {\n    db.collection('subjects')\n      .add(subjectData)\n      .then(docRef => {})\n      .then(() => {\n        fetchAll();\n      });\n  };\n\n  return <SubjectForm onAddSubject={addSubjectHandler} />;\n};\n\nexport default AddNewSubject;\n","import AddNewSubject from '../../components/subjects/AddNewSubject';\nconst AddSubjectPage = () => {\n  return <AddNewSubject />;\n};\n\nexport default AddSubjectPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../../services/firebase';\nimport SubjectForm from './SubjectForm';\n\nconst EditSubject = () => {\n  const params = useParams();\n  const [subject, setSubject] = useState({});\n  let subjectRef = db.collection('subjects').doc(params.id);\n\n  useEffect(() => {\n    subjectRef.get().then(doc => {\n      const subject = doc.data();\n      setSubject(subject);\n    });\n  }, []);\n\n  const changeHandler = editedSubject => {\n    subjectRef.update({ subject: editedSubject.subject });\n  };\n\n  return <SubjectForm onAddSubject={changeHandler} subject={subject} />;\n};\n\nexport default EditSubject;\n","import EditSubject from '../../components/subjects/EditSubject';\n\nconst EditSubjectPage = () => {\n  return <EditSubject />;\n};\n\nexport default EditSubjectPage;\n","import { useContext } from 'react';\nimport { useParams } from 'react-router';\nimport { Table } from 'reactstrap';\nimport Card from '../UI/Card';\nimport DataContext from '../../store/data-context.js';\n\nconst StudentDetailsTest = () => {\n  const { userStudents, userSubjects, userProfessors } =\n    useContext(DataContext);\n\n  const params = useParams();\n  const studentId = params.id;\n  const student = userStudents.find(x => x.id === studentId);\n\n  return (\n    <Card>\n      <h2>\n        {student.fName} {student.lName} info:\n      </h2>\n      <Table className=\"mt-3 mb-5\">\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>date of birth</th>\n            <th>password</th>\n            {/* <th>unique id</th> */}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{student.fName}</td>\n            <td>{student.lName}</td>\n            <td>{student.year}</td>\n            <td>{student.password}</td>\n            {/* <td>{studentId}</td> */}\n          </tr>\n        </tbody>\n      </Table>\n      <h4>Subjects that {student.fName} attend:</h4>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>subject</th>\n            <th>professor</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {userSubjects.map(x => {\n            const prof = userProfessors.find(y => y.id === x.professor);\n\n            if (Object.keys(student.subjects).includes(x.id)) {\n              return (\n                <tr key={x.id}>\n                  <td className=\"w50-td\">{x.subject}</td>\n\n                  {x.professor === 'not assigned yet' ? (\n                    <td>not assigned yet</td>\n                  ) : (\n                    <td className=\"w50-td\">\n                      {prof.fName} {prof.lName}\n                    </td>\n                  )}\n                </tr>\n              );\n            }\n          })}\n        </tbody>\n      </Table>\n    </Card>\n  );\n};\n\nexport default StudentDetailsTest;\n","import { useContext } from 'react';\nimport { useParams } from 'react-router';\n\nimport { Table } from 'reactstrap';\nimport Card from '../UI/Card';\nimport DataContext from '../../store/data-context.js';\n\nconst SubjectDetailsTest = props => {\n  const { userStudents, userSubjects, userProfessors } =\n    useContext(DataContext);\n  const params = useParams();\n  const subjectId = params.id;\n\n  const subject = userSubjects.find(x => x.id === subjectId);\n  const professor = userProfessors.find(x => x.id === subject.professor);\n  const attendingStudents = userStudents.filter(x =>\n    Object.keys(x.subjects).includes(subjectId)\n  );\n\n  return (\n    <Card>\n      <h2>{subject.subject} info:</h2>\n\n      <Table id=\"details-table\">\n        <thead>\n          <tr>\n            <th>title</th>\n            <th>professor</th>\n            <th>unique id</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <span>{subject.subject} </span>\n            </td>\n            <td>\n              {subject.professor === 'not assigned yet' ? (\n                'not assigned yet'\n              ) : (\n                <span>\n                  {professor.fName} {professor.lName}\n                </span>\n              )}\n            </td>\n            <td>{subjectId}</td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <Table striped className=\"text-start mt-4\">\n        <thead>\n          <tr>\n            <th>Student that attend this subject:</th>\n          </tr>\n        </thead>\n        <tbody>\n          {attendingStudents.map(x => (\n            <tr key={x.id}>\n              <td>\n                {x.fName} {x.lName}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Card>\n  );\n};\n\nexport default SubjectDetailsTest;\n","import { useContext } from 'react';\nimport { useParams } from 'react-router';\nimport { Table } from 'reactstrap';\nimport Card from '../UI/Card';\nimport DataContext from '../../store/data-context.js';\n\nconst ProfessorDetailsTest = () => {\n  const { userSubjects, userProfessors } = useContext(DataContext);\n  const params = useParams();\n  const professorId = params.id;\n\n  const professor = userProfessors.find(x => x.id === professorId);\n\n  return (\n    <Card>\n      <h2>{professor.fName} info:</h2>\n\n      <Table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>subject</th>\n            <th>unique id</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <span>{professor.fName} </span>\n            </td>\n            <td>\n              <span>{professor.lName} </span>\n            </td>\n            {professor.subject === 'not teaching yet' ? (\n              <td>not teaching yet</td>\n            ) : (\n              <td>\n                {userSubjects.find(x => x.id === professor.subject).subject}\n              </td>\n            )}\n            <td>{professorId}</td>\n          </tr>\n        </tbody>\n      </Table>\n    </Card>\n  );\n};\n\nexport default ProfessorDetailsTest;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport MainNavigation from './components/layout/MainNavigation';\nimport HomePagePage from './pages/HomePage';\nimport AddPage from './pages/AddPage';\nimport AllStudentsPage from './pages/studentsPage/AllStudentsPage';\nimport AddStudentPage from './pages/studentsPage/AddStudentPage';\nimport EditStudentsPage from './pages/studentsPage/EditStudentPage';\nimport AllProfessorsPage from './pages/professorsPage/AllProfessorsPage';\nimport AddProfessorsPage from './pages/professorsPage/AddProfessorsPage';\nimport EditProfessorPage from './pages/professorsPage/EditProfessorPage';\nimport AllSubjectsPage from './pages/subjectsPage/AllSubjectsPage';\nimport AddSubjectPage from './pages/subjectsPage/AddSubjectPage';\nimport EditSubjectsPage from './pages/subjectsPage/EditSubjectPage';\nimport StudentDetailsTest from './components/students/StudentDetailsTest';\nimport SubjectDetailsTest from './components/subjects/SubjectDetailsTest';\nimport ProfessorDetailsTest from './components/professors/ProfessorDetailsTest';\n\nfunction App() {\n  return (\n    <div>\n      <MainNavigation />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePagePage />\n        </Route>\n        <Route path=\"/add\" exact>\n          <AddPage />\n        </Route>\n        <Route path=\"/all-students\" exact>\n          <AllStudentsPage />\n        </Route>\n        <Route path=\"/all-subjects\" exact>\n          <AllSubjectsPage />\n        </Route>\n        <Route path=\"/all-professors\" exact>\n          <AllProfessorsPage />\n        </Route>\n        <Route path=\"/all-students/details/:id\" exact>\n          <StudentDetailsTest />\n        </Route>\n        <Route path=\"/all-students/edit/:id\" exact>\n          <EditStudentsPage />\n        </Route>\n        <Route path=\"/all-subjects/details/:id\" exact>\n          <SubjectDetailsTest />\n        </Route>\n        <Route path=\"/all-subjects/edit/:id\" exact>\n          <EditSubjectsPage />\n        </Route>\n        <Route path=\"/all-professors/details/:id\" exact>\n          <ProfessorDetailsTest />\n        </Route>\n        <Route path=\"/all-professors/edit/:id\" exact>\n          <EditProfessorPage />\n        </Route>\n        <Route path=\"/add-new-student\" exact>\n          <AddStudentPage />\n        </Route>\n        <Route path=\"/add-new-subject\" exact>\n          <AddSubjectPage />\n        </Route>\n        <Route path=\"/add-new-professor\" exact>\n          <AddProfessorsPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import db from './firebase';\n\nconst FetchStudents = () => {\n  return new Promise((res, rej) => {\n    db.collection('students')\n      .get()\n      .then(students => {\n        const studArray = [];\n        students.forEach(student => {\n          let data = student.data();\n          let { id } = student;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          studArray.push(payload);\n        });\n        res(studArray);\n      });\n  });\n};\n\nexport default FetchStudents;\n","import db from './firebase';\n\nconst FetchSubjects = () => {\n  return new Promise((res, rej) => {\n    db.collection('subjects')\n      .get()\n      .then(subjects => {\n        const subArray = [];\n        subjects.forEach(subject => {\n          let data = subject.data();\n          let { id } = subject;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          subArray.push(payload);\n        });\n        res(subArray);\n      });\n  });\n};\n\nexport default FetchSubjects;\n","import db from './firebase';\n\nconst FetchProfessors = () => {\n  return new Promise((res, rej) => {\n    db.collection('professors')\n      .get()\n      .then(professors => {\n        const profArray = [];\n        professors.forEach(professor => {\n          let data = professor.data();\n          let { id } = professor;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          profArray.push(payload);\n        });\n        res(profArray);\n      });\n  });\n};\n\nexport default FetchProfessors;\n","import React, { useEffect, useState } from 'react';\nimport DataContext from './data-context';\nimport db from '../services/firebase';\nimport FetchStudents from '../services/FetchStudents';\nimport FetchSubjects from '../services/FetchSubjects';\nimport FetchProfessors from '../services/FetchProfessors';\n\nconst DataProvider = props => {\n  const [userStudents, setUserStudents] = useState([]);\n  const [userSubjects, setUserSubjects] = useState({});\n  const [userProfessors, setUserProfessors] = useState([]);\n  const [isLoadedStudents, setIsLoadedStudents] = useState(false);\n  const [isLoadedSubjects, setIsLoadedSubjects] = useState(false);\n  const [isLoadedProfessors, setIsLoadedProfessors] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    fetchAll();\n  }, []);\n\n  useEffect(() => {\n    if (isLoadedStudents && isLoadedSubjects) {\n      setIsLoaded(true);\n    }\n  }, [isLoadedStudents, isLoadedSubjects, isLoadedProfessors, isLoaded]);\n\n  const fetchAll = () => {\n    FetchStudents().then(x => {\n      setUserStudents(x);\n      setIsLoadedStudents(true);\n    });\n    FetchSubjects().then(x => {\n      setUserSubjects(x);\n      setIsLoadedSubjects(true);\n    });\n    FetchProfessors().then(x => {\n      setUserProfessors(x);\n      setIsLoadedProfessors(true);\n    });\n  };\n\n  const removeHandler = (x, y) => {\n    let postRef = db.collection(y);\n    postRef\n      .doc(x)\n      .delete()\n      .then(() => {\n        fetchAll();\n      });\n  };\n\n  const content = (x, y, fName, lName, year) => {\n    return (\n      <div>\n        <select\n          className=\"sort-btn\"\n          onChange={e => {\n            sortHandler(e.target.value, x, y);\n          }}\n        >\n          <option value=\"order\">sort by:</option>\n          <option value={fName}>First Name</option>\n          <option value={lName}>Last name</option>\n          {year && <option value={year}>Date of Birth</option>}\n        </select>\n      </div>\n    );\n  };\n\n  const sortHandler = (e, x, y) => {\n    const sortProperty = e;\n    x.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(x));\n    if (y === 'userStudents') {\n      setUserStudents(sorted);\n    } else if (y === 'userSubjects') {\n      setUserSubjects(sorted);\n    } else if (y === 'userProfessors') {\n      setUserProfessors(sorted);\n    }\n  };\n\n  return (\n    <DataContext.Provider\n      value={{\n        userSubjects,\n        userProfessors,\n        userStudents,\n        isLoaded,\n        removeHandler,\n        content,\n        fetchAll,\n      }}\n    >\n      {props.children}\n    </DataContext.Provider>\n  );\n};\n\nexport default DataProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DataProvider from './store/DataProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <DataProvider>\n        <App />\n      </DataProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}