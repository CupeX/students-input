{"version":3,"sources":["components/layout/MainNavigation.js","components/UI/Card.js","pages/HomePage.js","components/layout/AddPage.js","pages/AddPage.js","components/firebase.js","components/students/StudentsList.js","pages/studentsPage/AllStudentsPage.js","components/comon/BaseInput.js","components/students/StudentForm.js","components/students/AddNewStudent.js","pages/studentsPage/AddStudentPage.js","components/students/EditStudent.js","pages/studentsPage/EditStudentPage.js","components/professors/ProfessorsList.js","components/professors/Profesors.js","pages/professorsPage/AllProfessorsPage.js","components/professors/ProfessorForm.js","components/professors/AddNewProfessor.js","pages/professorsPage/AddProfessorsPage.js","components/professors/EditProfessor.js","pages/professorsPage/EditProfessorPage.js","components/subjects/AddProfToSubjectList.js","components/subjects/ModalProfList.js","components/subjects/AddStudentToSubjectList.js","components/subjects/ModalStudentsList.js","components/subjects/SubjectsList.js","pages/subjectsPage/AllSubjectsPage.js","components/subjects/SubjectForm.js","components/subjects/AddNewSubject.js","pages/subjectsPage/AddSubjectPage.js","components/subjects/EditSubject.js","pages/subjectsPage/EditSubjectPage.js","components/students/StudentDetailsTest.js","components/subjects/SubjectDetailsTest.js","components/professors/ProfessorDetailsTest.js","App.js","reportWebVitals.js","index.js"],"names":["MainNavigation","history","useHistory","useState","isOpen","setIsOpen","Navbar","className","expand","NavbarBrand","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","onChange","e","push","testing","target","value","Card","props","children","HomePage","AddNew","Button","color","AddPage","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","StudentsList","match","useRouteMatch","userStudents","setUserStudents","isLoading","setIsLoading","postRef","collection","useEffect","get","then","students","forEach","student","data","id","payload","find","x","checkPassHandler","studentId","prompt","filter","st","map","password","doc","delete","console","log","removeStudentHandler","alert","content","sortProperty","sort","a","b","sorted","JSON","parse","stringify","sortHandler","ListGroup","ListGroupItem","Table","fName","lName","year","url","AllStudentsPage","BaseInput","InputGroup","InputGroupAddon","addonType","InputGroupText","label","Input","placeholder","type","StudentForm","React","memo","enteredFName","setEnteredFName","enteredLName","setEnteredLName","enteredYear","setEnteredYear","enteredPass","setEnteredPass","setFormValid","setStudent","onSubmit","preventDefault","subjects","onAddStudent","replace","min","AddNewStudent","add","docRef","AddStudentPage","EditStudent","params","useParams","editedStudent","update","EditStudentsPage","ProfessorsList","userProfessors","setUserProfessors","professors","professor","professorId","Profesors","AllProfessorsPage","ProfessorForm","profName","setProfName","profLName","setProfLName","professorData","subject","onAddProfessor","profeesor","AddNewProfessor","AddProfessorsPage","EditProfessor","setProfessor","editedprofessor","EditProfessorPage","AddProffesorToSubjectList","style","textAlign","subjectId","onAddProfessorToSubject","ModalProfList","userSubjects","profRef","subjRef","onCloseModal","AddProfToSubjectList","AddStudentToSubjectList","filteredList","Object","keys","includes","onAddStudentToSubject","ModalStudentsList","subjectObj","undefined","set","merge","removeStudent","SubjectsList","setUserSubjects","setSubjectId","studentsModal","setStudentsModal","professorsModal","setProfessorsModal","onAddProfToSubject","removeSubjectHandler","AllSubjectsPage","SubjectForm","enteredSubject","setEnteredSubject","subjectData","onAddSubject","AddNewSubject","AddSubjectPage","EditSubject","setSubject","subjectRef","editedSubject","EditSubjectPage","StudentDetailsTest","striped","prof","y","SubjectDetailsTest","attendingStudents","ProfessorDetailsTest","App","isLoadedStudents","setIsLoadedStudents","isLoadedSubjects","setIsLoadedSubjects","isLoadedProfessors","setIsLoadedProfessors","isLoaded","setIsLoaded","profArray","finally","studArray","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db0f56f7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  NavItem,\n} from 'reactstrap';\n\nimport './MainNavigation.css';\n\nconst MainNavigation = () => {\n  const history = useHistory();\n  const testing = e => {\n    history.push(`/students-input/${e}`);\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <header>\n      <Navbar className=\"px-5 py-3 justify-content-between\" expand=\"md\">\n        <NavbarBrand className=\"logo\">\n          <Link to=\"/students-input\">CupeX first app</Link>\n        </NavbarBrand>\n\n        <NavbarToggler onClick={toggle} />\n\n        <Collapse className=\"flex-grow-0\" isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem className=\"px-2\">\n              <Link to=\"/students-input/all-students\">Students</Link>\n            </NavItem>\n            <NavItem className=\"px-2\">\n              <Link to=\"/students-input/all-subjects\">Subjects</Link>\n            </NavItem>\n            <NavItem className=\"px-2\">\n              <Link to=\"/students-input/all-professors\">Professors</Link>\n            </NavItem>\n            <li>\n              <select\n                className=\"sort-btn\"\n                onChange={e => testing(e.target.value)}\n              >\n                <option value=\"add\">Add new?</option>\n                <option value=\"add-new-student\">Add new student</option>\n                <option value=\"add-new-professor\">Add new profesor</option>\n                <option value=\"add-new-subject\">Add new subject</option>\n              </select>\n            </li>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import Card from '../components/UI/Card';\n\nconst HomePage = () => {\n  return (\n    <Card>\n      <h1>Home Page</h1>\n    </Card>\n  );\n};\n\nexport default HomePage;\n","import { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport Card from '../UI/Card';\n\nimport './index.css';\n\nconst AddNew = () => {\n  return (\n    <Card>\n      <h2>Add new:</h2>\n      <div className=\"d-flex justify-content-around m-5 \">\n        <Link to=\"/students-input/add-new-student\">\n          <Button className=\"btn text-uppercase\" color=\"success\">\n            student\n          </Button>\n        </Link>\n\n        <Link to=\"/students-input/add-new-subject\">\n          <Button className=\"btn text-uppercase\" color=\"success\">\n            subject\n          </Button>\n        </Link>\n\n        <Link to=\"/students-input/add-new-professor\">\n          <Button className=\"btn text-uppercase\" color=\"success\">\n            professor\n          </Button>\n        </Link>\n      </div>\n    </Card>\n  );\n};\n\nexport default AddNew;\n","import AddNew from '../components/layout/AddPage';\n\nconst AddPage = () => {\n  return <AddNew />;\n};\n\nexport default AddPage;\n","import firebase from 'firebase';\nrequire('firebase/firestore');\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAmiHfPoCndQtpGB3sdhvNAnzER_NYqRq0',\n  authDomain: 'students-input.firebaseapp.com',\n  databaseURL:\n    'https://students-input-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'students-input',\n  storageBucket: 'students-input.appspot.com',\n  messagingSenderId: '1037427824217',\n  appId: '1:1037427824217:web:edad276ef09ea0b4688348',\n  measurementId: 'G-459YJZBEBM',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nvar db = firebase.firestore();\n\n// export const auth = firebase.auth();\nexport const firestore = firebase.firestore;\nexport default db;\n","import { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport db from '../firebase';\nimport Card from '../UI/Card';\n\n// import './students.css';\nimport { Button, ListGroup, ListGroupItem, Table } from 'reactstrap';\n\nconst StudentsList = () => {\n  const match = useRouteMatch();\n  const [userStudents, setUserStudents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  let postRef = db.collection('students');\n\n  useEffect(() => {\n    postRef.get().then(students =>\n      students.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userStudents.find(x => (x.id = id))) {\n          setUserStudents(students => [...students, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n\n  const removeStudentHandler = studentId => {\n    postRef\n      .doc(studentId)\n      .delete()\n      .then(() => {\n        console.log('Student successfully deleted!');\n      });\n  };\n\n  const checkPassHandler = studentId => {\n    const passInput = prompt('enter password');\n    const getPass = userStudents\n      .filter(st => st.id === studentId)\n      .map(st => st.password);\n\n    if (+passInput === +getPass) {\n      removeStudentHandler(studentId);\n      console.log('student deleted');\n    } else {\n      alert('wrong password!');\n    }\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userStudents.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userStudents));\n    setUserStudents(sorted);\n  };\n\n  let content = (\n    <div>\n      <h2> All Students</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n        <option value=\"year\">Date of Birth</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {isLoading && <h2>Loading...</h2>}\n      <ListGroup className=\"mt-5\">\n        {userStudents.map(st => (\n          <ListGroupItem\n            className=\"my-3 d-flex justify-content-between align-items-center \"\n            key={st.id}\n            id={st.id}\n          >\n            <Table className=\"text-start w-50 \">\n              <tr>\n                <td>\n                  student:\n                  <strong>\n                    {st.fName} {st.lName}\n                  </strong>\n                </td>\n              </tr>\n              <tr>\n                <td>born: {st.year}</td>\n              </tr>\n            </Table>\n\n            <div className=\"text-end\">\n              <Link to={`${match.url}/details/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"info\">\n                  info\n                </Button>\n              </Link>\n              <Link to={`${match.url}/edit/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"success\">\n                  edit\n                </Button>\n              </Link>\n              <Button\n                className=\"btn mx-1\"\n                color=\"danger\"\n                onClick={() => checkPassHandler(st.id)}\n              >\n                delete\n              </Button>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default StudentsList;\n","import StudentsList from '../../components/students/StudentsList';\n\nconst AllStudentsPage = () => {\n  return <StudentsList />;\n};\n\nexport default AllStudentsPage;\n","import React from 'react';\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\n\nconst BaseInput = props => {\n  return (\n    <InputGroup className=\"py-1\">\n      <InputGroupAddon className=\"w-25\" addonType=\"prepend\">\n        <InputGroupText>{props.label}</InputGroupText>\n      </InputGroupAddon>\n      <Input\n        placeholder={props.placeholder}\n        type={props.type}\n        id={props.fName}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    </InputGroup>\n  );\n};\n\nexport default BaseInput;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BaseInput from '../comon/BaseInput';\nimport { Button } from 'reactstrap';\n\nimport Card from '../UI/Card';\n\nconst StudentForm = React.memo(props => {\n  const [enteredFName, setEnteredFName] = useState('');\n  const [enteredLName, setEnteredLName] = useState('');\n  const [enteredYear, setEnteredYear] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n  const [formValid, setFormValid] = useState(false);\n  const [student, setStudent] = useState({});\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (\n      enteredFName === '' ||\n      enteredLName === '' ||\n      enteredYear === '' ||\n      enteredPass === ''\n    ) {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const student = {\n      fName: enteredFName,\n      lName: enteredLName,\n      year: enteredYear,\n      password: enteredPass,\n      subjects: {},\n    };\n    setStudent(student);\n    props.onAddStudent(student);\n\n    // clearing input fields\n    setEnteredFName('');\n    setEnteredLName('');\n    setEnteredYear('');\n    setEnteredPass('');\n    history.replace('/students-input/all-students');\n  };\n\n  const fNameChangeHandler = e => {\n    setEnteredFName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setEnteredLName(e.target.value);\n  };\n  const yearChangeHandler = e => {\n    setEnteredYear(e.target.value);\n  };\n  const passChangeHandler = e => {\n    setEnteredPass(e.target.value);\n  };\n\n  return (\n    <section>\n      <Card>\n        <h2>Students input form</h2>\n\n        <form onSubmit={submitHandler}>\n          <BaseInput\n            type=\"text\"\n            id=\"fName\"\n            onChange={fNameChangeHandler}\n            placeholder={props.student ? `${props.student.fName}` : ''}\n            value={enteredFName}\n            label={'First name:'}\n          />\n\n          <BaseInput\n            type=\"text\"\n            id=\"lName\"\n            onChange={lNameChangeHandler}\n            placeholder={props.student ? `${props.student.lName}` : ''}\n            value={enteredLName}\n            label={'Last name:'}\n          />\n\n          <BaseInput\n            type=\"date\"\n            min=\"1111-01-01\"\n            id=\"year\"\n            onChange={yearChangeHandler}\n            placeholder={props.student ? `${props.student.year}` : ''}\n            value={enteredYear}\n            label={'Date of Birth:'}\n          />\n\n          <BaseInput\n            placeholder={props.student ? `${props.student.password}` : ''}\n            type=\"number\"\n            id=\"pass\"\n            value={enteredPass}\n            onChange={passChangeHandler}\n            label={'Password:'}\n          />\n\n          <div>\n            <Button type=\"submit\" className=\"btn btn-success mt-4\">\n              {props.student ? 'save changes' : 'add student'}\n            </Button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default StudentForm;\n","import React from 'react';\nimport db from '../firebase';\nimport StudentForm from './StudentForm';\n\nconst AddNewStudent = () => {\n  const addStudentHandler = student => {\n    db.collection('students')\n      .add(student)\n      .then(docRef => {});\n  };\n\n  return <StudentForm onAddStudent={addStudentHandler} />;\n};\n\nexport default AddNewStudent;\n","import AddNewStudent from '../../components/students/AddNewStudent';\n\nconst AddStudentPage = () => {\n  return <AddNewStudent />;\n};\n\nexport default AddStudentPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport StudentForm from './StudentForm';\n\nconst EditStudent = () => {\n  const params = useParams();\n  const [student, setStudent] = useState({});\n  let postRef = db.collection('students').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const student = doc.data();\n      setStudent(student);\n    });\n  }, []);\n\n  const changeHandler = editedStudent => {\n    postRef.update(editedStudent).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <StudentForm onAddStudent={changeHandler} student={student} />;\n};\n\nexport default EditStudent;\n","import EditStudent from '../../components/students/EditStudent';\n\nconst EditStudentsPage = () => {\n  return <EditStudent />;\n};\n\nexport default EditStudentsPage;\n","import { Link, useRouteMatch } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport db from '../firebase';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\n\nconst ProfessorsList = props => {\n  const match = useRouteMatch();\n\n  const [userProfessors, setUserProfessors] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  let postRef = db.collection('professors');\n\n  useEffect(() => {\n    postRef.get().then(professors =>\n      professors.forEach(professor => {\n        let data = professor.data();\n        let { id } = professor;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userProfessors.find(x => (x.id = id))) {\n          setUserProfessors(professors => [...professors, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n\n  const removeProfessorHandler = professorId => {\n    postRef\n      .doc(professorId)\n      .delete()\n      .then(() => {\n        console.log('professor successfully deleted!');\n      });\n  };\n\n  if (isLoading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <ListGroup className=\"mt-5\">\n      {userProfessors.map(st => (\n        <ListGroupItem\n          className=\"my-3 py-4 d-flex justify-content-between align-items-center \"\n          key={st.id}\n          id={st.id}\n        >\n          <div>\n            <span>\n              professor:{' '}\n              <strong>\n                {st.fName} {st.lName}\n              </strong>\n            </span>\n          </div>\n          <div className=\"btn-wrapper\">\n            <Link to={`${match.url}/details/${st.id}`}>\n              <Button className=\"btn mx-1\" color=\"info\">\n                info\n              </Button>\n            </Link>\n            <Link to={`${match.url}/edit/${st.id}`}>\n              <Button className=\"btn mx-1\" color=\"success\">\n                edit\n              </Button>\n            </Link>\n            <Button\n              className=\"btn mx-1\"\n              color=\"danger\"\n              onClick={() => removeProfessorHandler(st.id)}\n            >\n              delete\n            </Button>\n          </div>\n        </ListGroupItem>\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default ProfessorsList;\n","import { useState } from 'react';\nimport Card from '../UI/Card';\nimport ProfessorsList from './ProfessorsList';\n\nconst Profesors = () => {\n  const [userProfessors, setUserProfessors] = useState([]);\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userProfessors.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userProfessors));\n    setUserProfessors(sorted);\n  };\n\n  const content = (\n    <div>\n      <h2> All Professors</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      <ProfessorsList />\n    </Card>\n  );\n};\n\nexport default Profesors;\n","import Profesors from '../../components/professors/Profesors';\n\nconst AllProfessorsPage = () => {\n  return <Profesors />;\n};\n\nexport default AllProfessorsPage;\n","import { Button } from 'reactstrap';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst ProfessorForm = React.memo(props => {\n  const [profName, setProfName] = useState('');\n  const [profLName, setProfLName] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (profName === '' || profLName === '') {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const professorData = {\n      fName: profName,\n      lName: profLName,\n      subject: '',\n    };\n\n    props.onAddProfessor(professorData);\n\n    // clearing input fields\n    setProfName('');\n    setProfLName('');\n\n    history.replace('/students-input/all-professors');\n  };\n\n  const fNameChangeHandler = e => {\n    setProfName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setProfLName(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Professor input form</h2>\n      <form onSubmit={submitHandler}>\n        <BaseInput\n          placeholder={props.professor ? `${props.professor.fName}` : ''}\n          type=\"text\"\n          id=\"fName\"\n          value={profName}\n          onChange={fNameChangeHandler}\n          label={'First name:'}\n        />\n        <BaseInput\n          placeholder={props.professor ? `${props.professor.lName}` : ''}\n          type=\"text\"\n          id=\"lName\"\n          value={profLName}\n          onChange={lNameChangeHandler}\n          label={'Last name:'}\n        />\n\n        <div>\n          <Button type=\"submit\" className=\"btn btn-success mt-4\">\n            {props.profeesor ? 'save changes' : 'add profeesor'}\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default ProfessorForm;\n","import React from 'react';\nimport db from '../firebase';\nimport ProfessorForm from './ProfessorForm';\n\nconst AddNewProfessor = () => {\n  const addProfessorHandler = professorData => {\n    db.collection('professors')\n      .add(professorData)\n      .then(docRef => {});\n  };\n\n  return <ProfessorForm onAddProfessor={addProfessorHandler} />;\n};\n\nexport default AddNewProfessor;\n","import AddNewProfessor from '../../components/professors/AddNewProfessor';\n\nconst AddProfessorsPage = () => {\n  return <AddNewProfessor />;\n};\n\nexport default AddProfessorsPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport ProfessorForm from './ProfessorForm';\n\nconst EditProfessor = () => {\n  const params = useParams();\n  const [professor, setProfessor] = useState({});\n  let postRef = db.collection('professors').doc(params.id);\n\n  useEffect(() => {\n    postRef.get().then(doc => {\n      const professor = doc.data();\n      setProfessor(professor);\n    });\n  }, []);\n\n  const changeHandler = editedprofessor => {\n    postRef.update(editedprofessor).then(() => {\n      console.log('Document edited');\n    });\n  };\n\n  return <ProfessorForm onAddProfessor={changeHandler} professor={professor} />;\n};\n\nexport default EditProfessor;\n","import EditProfessor from '../../components/professors/EditProfessor';\n\nconst EditProfessorPage = () => {\n  return <EditProfessor />;\n};\n\nexport default EditProfessorPage;\n","const AddProffesorToSubjectList = props => {\n  return (\n    <section>\n      <h2>all professors list</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th>teaching</th>\n            <th style={{ textAlign: 'end' }}>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.professors.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n              <td>{st.subject === props.subjectId ? 'yes' : 'x'}</td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => props.onAddProfessorToSubject(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default AddProffesorToSubjectList;\n","import { useState, useEffect } from 'react';\nimport db from '../firebase';\nimport AddProfToSubjectList from './AddProfToSubjectList';\n\nimport './Modal.css';\n\nconst ModalProfList = props => {\n  const subjectId = props.subjectId;\n  const subjectObj = props.userSubjects.find(x => x.id === subjectId);\n  const { subject } = subjectObj;\n\n  const [userProfessors, setUserProfessors] = useState([]);\n  let profRef = db.collection('professors');\n  let subjRef = db.collection('subjects');\n  // let studentRef = db.collection('students');\n\n  useEffect(() => {\n    profRef.get().then(professors =>\n      professors.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready professors in list\n        if (!userProfessors.find(x => (x.id = id))) {\n          setUserProfessors(professors => [...professors, payload]);\n        }\n      })\n    );\n  }, []);\n\n  const addProfessorToSubjectHandler = professorId => {\n    // profRef.doc(professorId).update({ subject: { subjectId, title: subject } });\n    profRef.doc(professorId).update({ subject: subjectId });\n    subjRef.doc(subjectId).update({ professor: professorId });\n\n    // const profObj = userProfessors.find(x => x.id === professorId);\n    // const { fName, lName } = profObj;\n\n    // studentRef.get().then(x => {\n    //   x.forEach(doc => {\n    //     doc.ref.set(\n    //       { subjects: { [subjectId]: { fName, lName }, subject: subject } },\n    //       { merge: true }\n    //     );\n    //   });\n    // });\n\n    // [subjectId]: { professor: { fName, lName } },\n\n    // const updatedSubjectInAllStudents = userStudents.map(x => {\n    //   if (x.subjects && Object.keys(x.subjects).includes(subjectId)) {\n    //     x.subjects[subjectId].title = newSubject;\n    //   }\n    //   return x;\n    // });\n    // setUserStudents(updatedSubjectInAllStudents);\n  };\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddProfToSubjectList\n        subjectId={subjectId}\n        professors={userProfessors}\n        onAddProfessorToSubject={addProfessorToSubjectHandler}\n      />\n    </div>\n  );\n};\n\nexport default ModalProfList;\n","const AddStudentToSubjectList = props => {\n  const filteredList = props.students.filter(\n    x => !Object.keys(x.subjects).includes(props.subjectId)\n  );\n\n  return (\n    <section>\n      <table>\n        <thead>\n          <tr>\n            <th>first name</th>\n            <th>last name</th>\n            <th style={{ textAlign: 'end' }}>add to subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredList.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"add-btn\"\n                  onClick={() => props.onAddStudentToSubject(st.id)}\n                >\n                  add\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default AddStudentToSubjectList;\n","import { useEffect, useState } from 'react';\nimport db from '../firebase';\nimport AddStudentToSubjectList from './AddStudentToSubjectList';\nimport './Modal.css';\n\nconst ModalStudentsList = props => {\n  const subjectId = props.subjectId;\n  const subjectObj = props.userSubjects.find(x => x.id === subjectId);\n  let { subject, professor } = subjectObj;\n\n  const [userStudents, setUserStudents] = useState([]);\n  let postRef = db.collection('students');\n\n  useEffect(() => {\n    postRef.get().then(students =>\n      students.forEach(student => {\n        let data = student.data();\n        let { id } = student;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userStudents.find(x => (x.id = id))) {\n          setUserStudents(students => [...students, payload]);\n        }\n      })\n    );\n  }, []);\n\n  const addStudentToSubjectHandler = studentId => {\n    if (professor === undefined) {\n      professor = '';\n    } else {\n      postRef\n        .doc(studentId)\n        .set({ subjects: { [subjectId]: '' } }, { merge: true });\n    }\n\n    const removeStudent = userStudents.filter(x => x.id !== studentId);\n    setUserStudents(removeStudent);\n  };\n\n  return (\n    <div className=\"Modal\">\n      <button className=\"add-btn\" onClick={() => props.onCloseModal()}>\n        close list\n      </button>\n\n      <AddStudentToSubjectList\n        subjectId={subjectId}\n        students={userStudents}\n        onAddStudentToSubject={addStudentToSubjectHandler}\n      />\n    </div>\n  );\n};\n\nexport default ModalStudentsList;\n","import { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { Button, ButtonGroup, ListGroup, ListGroupItem } from 'reactstrap';\nimport db from '../firebase';\nimport Card from '../UI/Card';\nimport ModalProfList from './ModalProfList';\nimport ModalStudentsList from './ModalStudentsList';\n\nconst SubjectsList = props => {\n  const match = useRouteMatch();\n  const [userSubjects, setUserSubjects] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [subjectId, setSubjectId] = useState('');\n  const [studentsModal, setStudentsModal] = useState(false);\n  const [professorsModal, setProfessorsModal] = useState(false);\n\n  useEffect(() => {\n    let subjectRef = db.collection('subjects');\n    subjectRef.get().then(subjects =>\n      subjects.forEach(subject => {\n        let data = subject.data();\n        let { id } = subject;\n\n        let payload = {\n          id,\n          ...data,\n        };\n\n        // check if there is allready students in list\n        if (!userSubjects.find(x => (x.id = id))) {\n          setUserSubjects(subjects => [...subjects, payload]);\n          setIsLoading(false);\n        }\n      })\n    );\n  }, []);\n\n  const removeSubjectHandler = subjectId => {\n    let subjectRef = db.collection('subjects');\n    subjectRef\n      .doc(subjectId)\n      .delete()\n      .then(() => {\n        console.log('Subject successfully deleted!');\n      });\n  };\n\n  const onAddStudentToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setStudentsModal(true);\n  };\n\n  const closeStudentsModal = () => {\n    setStudentsModal(false);\n  };\n\n  const onAddProfToSubject = subjectId => {\n    setSubjectId(subjectId);\n    setProfessorsModal(true);\n  };\n\n  const closeProfessorsModal = () => {\n    setProfessorsModal(false);\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userSubjects.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userSubjects));\n    setUserSubjects(sorted);\n  };\n\n  let content = (\n    <div>\n      <h2> All Subjects</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n      </select>\n    </div>\n  );\n\n  return (\n    <Card>\n      {content}\n      {isLoading && <h2>Loading...</h2>}\n      {studentsModal && (\n        <ModalStudentsList\n          onCloseModal={closeStudentsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      {professorsModal && (\n        <ModalProfList\n          onCloseModal={closeProfessorsModal}\n          subjectId={subjectId}\n          userSubjects={userSubjects}\n        />\n      )}\n\n      <ListGroup className=\"mt-5\">\n        {userSubjects.map(st => (\n          <ListGroupItem\n            className=\"my-3 py-4 d-flex justify-content-between align-items-center\"\n            key={st.id}\n            id={st.id}\n          >\n            <div className=\"text-start\">\n              <span>\n                subject: <strong> {st.subject}</strong>\n              </span>\n            </div>\n            <div className=\"text-end\">\n              <Link to={`${match.url}/details/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"info\">\n                  info\n                </Button>\n              </Link>\n              <Link to={`${match.url}/edit/${st.id}`}>\n                <Button className=\"btn mx-1\" color=\"secondary\">\n                  edit\n                </Button>\n              </Link>\n              <Button\n                className=\"btn mx-1\"\n                color=\"success\"\n                onClick={() => onAddStudentToSubject(st.id)}\n              >\n                add student\n              </Button>\n              <Button\n                className=\"btn mx-1\"\n                color=\"success\"\n                onClick={() => onAddProfToSubject(st.id)}\n              >\n                add professor\n              </Button>\n\n              <Button\n                className=\"btn mx-1\"\n                color=\"danger\"\n                onClick={() => removeSubjectHandler(st.id)}\n              >\n                delete\n              </Button>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport default SubjectsList;\n","import SubjectsList from '../../components/subjects/SubjectsList';\n\nconst AllSubjectsPage = () => {\n  return <SubjectsList />;\n};\n\nexport default AllSubjectsPage;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Button } from 'reactstrap';\nimport BaseInput from '../comon/BaseInput';\n\nimport Card from '../UI/Card';\n\nconst SubjectForm = React.memo(props => {\n  const [enteredSubject, setEnteredSubject] = useState('');\n  const [formValid, setFormValid] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (enteredSubject === '') {\n      setFormValid(false);\n      alert('pls enter subject name');\n      return;\n    }\n    setFormValid(true);\n\n    const subjectData = {\n      subject: enteredSubject,\n    };\n\n    props.onAddSubject(subjectData);\n\n    setEnteredSubject('');\n\n    history.replace('/students-input/all-subjects');\n  };\n\n  const subjectChangeHandler = e => {\n    setEnteredSubject(e.target.value);\n  };\n\n  return (\n    <Card>\n      <h2>Subject input form</h2>\n      <form onSubmit={submitHandler}>\n        <BaseInput\n          placeholder={props.subject ? `${props.subject.subject}` : ''}\n          type=\"text\"\n          id=\"subject\"\n          value={enteredSubject}\n          onChange={subjectChangeHandler}\n          label={'Subject title:'}\n        />\n\n        <div>\n          <Button type=\"submit\" className=\"btn btn-success mt-4\">\n            {props.subject ? 'save changes' : 'add subject'}\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n});\n\nexport default SubjectForm;\n","import React from 'react';\nimport db from '../firebase';\nimport SubjectForm from './SubjectForm';\n\nconst AddNewSubject = () => {\n  const addSubjectHandler = subjectData => {\n    db.collection('subjects')\n      .add(subjectData)\n      .then(docRef => {});\n  };\n\n  return <SubjectForm onAddSubject={addSubjectHandler} />;\n};\n\nexport default AddNewSubject;\n","import AddNewSubject from '../../components/subjects/AddNewSubject';\nconst AddSubjectPage = () => {\n  return <AddNewSubject />;\n};\n\nexport default AddSubjectPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport db from '../firebase';\nimport SubjectForm from './SubjectForm';\n\nconst EditSubject = () => {\n  const params = useParams();\n  const [subject, setSubject] = useState({});\n  let subjectRef = db.collection('subjects').doc(params.id);\n  let profRef = db.collection('profesors');\n\n  useEffect(() => {\n    subjectRef.get().then(doc => {\n      const subject = doc.data();\n      setSubject(subject);\n    });\n  }, []);\n\n  const changeHandler = editedSubject => {\n    subjectRef.update({ subject: editedSubject.subject });\n  };\n\n  return <SubjectForm onAddSubject={changeHandler} subject={subject} />;\n};\n\nexport default EditSubject;\n","import EditSubject from '../../components/subjects/EditSubject';\n\nconst EditSubjectPage = () => {\n  return <EditSubject />;\n};\n\nexport default EditSubjectPage;\n","import { useParams } from 'react-router';\r\nimport { Table } from 'reactstrap';\r\nimport Card from '../UI/Card';\r\n\r\nconst StudentDetailsTest = props => {\r\n  const params = useParams();\r\n  const studentId = params.id;\r\n\r\n  const student = props.userStudents.find(x => x.id === studentId);\r\n\r\n  return (\r\n    <Card>\r\n      <h2>\r\n        {student.fName} {student.lName} info:\r\n      </h2>\r\n      <Table className=\"mt-3 mb-5\">\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>date of birth</th>\r\n            <th>password</th>\r\n            {/* <th>unique id</th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{student.fName}</td>\r\n            <td>{student.lName}</td>\r\n            <td>{student.year}</td>\r\n            <td>{student.password}</td>\r\n            {/* <td>{studentId}</td> */}\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      <h4>Subjects that {student.fName} attend:</h4>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>subject</th>\r\n            <th>professor</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {props.userSubjects.map(x => {\r\n            const prof = props.userProfessors.find(y => y.id === x.professor);\r\n\r\n            if (Object.keys(student.subjects).includes(x.id)) {\r\n              return (\r\n                <tr key={x.id}>\r\n                  <td className=\"w50-td\">{x.subject}</td>\r\n\r\n                  <td className=\"w50-td\">\r\n                    {prof.fName} {prof.lName}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StudentDetailsTest;\r\n","import { useParams } from 'react-router';\r\nimport { Table } from 'reactstrap';\r\nimport Card from '../UI/Card';\r\n\r\nconst SubjectDetailsTest = props => {\r\n  const params = useParams();\r\n  const subjectId = params.id;\r\n\r\n  const subject = props.userSubjects.find(x => x.id === subjectId);\r\n  const professor = props.userProfessors.find(x => x.id === subject.professor);\r\n  const attendingStudents = props.userStudents.filter(x =>\r\n    Object.keys(x.subjects).includes(subjectId)\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <h2>{subject.subject} info:</h2>\r\n\r\n      <Table id=\"details-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>title</th>\r\n            <th>professor</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{subject.subject} </span>\r\n            </td>\r\n            <td>\r\n              <span>\r\n                {professor.fName} {professor.lName}\r\n              </span>\r\n            </td>\r\n            <td>{subjectId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <Table striped className=\"text-start mt-4\">\r\n        <thead>\r\n          <tr>\r\n            <th>Student that attend this subject:</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {attendingStudents.map(x => (\r\n            <tr key={x.id}>\r\n              <td>\r\n                {x.fName} {x.lName}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SubjectDetailsTest;\r\n","import { useParams } from 'react-router';\r\nimport { Table } from 'reactstrap';\r\nimport Card from '../UI/Card';\r\n\r\nconst ProfessorDetailsTest = props => {\r\n  const params = useParams();\r\n  const professorId = params.id;\r\n\r\n  const professor = props.userProfessors.find(x => x.id === professorId);\r\n\r\n  return (\r\n    <Card>\r\n      <h2>{professor.fName} info:</h2>\r\n\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>subject</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{professor.fName} </span>\r\n            </td>\r\n            <td>\r\n              <span>{professor.lName} </span>\r\n            </td>\r\n            {professor.subject === '' ? (\r\n              <td>not teaching yet</td>\r\n            ) : (\r\n              <td>\r\n                {\r\n                  props.userSubjects.find(x => x.id === professor.subject)\r\n                    .subject\r\n                }\r\n              </td>\r\n            )}\r\n            <td>{professorId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfessorDetailsTest;\r\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport MainNavigation from './components/layout/MainNavigation';\nimport HomePagePage from './pages/HomePage';\nimport AddPage from './pages/AddPage';\nimport AllStudentsPage from './pages/studentsPage/AllStudentsPage';\nimport AddStudentPage from './pages/studentsPage/AddStudentPage';\nimport EditStudentsPage from './pages/studentsPage/EditStudentPage';\nimport AllProfessorsPage from './pages/professorsPage/AllProfessorsPage';\nimport AddProfessorsPage from './pages/professorsPage/AddProfessorsPage';\nimport EditProfessorPage from './pages/professorsPage/EditProfessorPage';\nimport AllSubjectsPage from './pages/subjectsPage/AllSubjectsPage';\nimport AddSubjectPage from './pages/subjectsPage/AddSubjectPage';\nimport EditSubjectsPage from './pages/subjectsPage/EditSubjectPage';\nimport StudentDetailsTest from './components/students/StudentDetailsTest';\nimport SubjectDetailsTest from './components/subjects/SubjectDetailsTest';\nimport ProfessorDetailsTest from './components/professors/ProfessorDetailsTest';\nimport db from './components/firebase';\n\nfunction App() {\n  const [userSubjects, setUserSubjects] = useState({});\n  const [userStudents, setUserStudents] = useState([]);\n  const [userProfessors, setUserProfessors] = useState([]);\n  const [isLoadedStudents, setIsLoadedStudents] = useState(false);\n  const [isLoadedSubjects, setIsLoadedSubjects] = useState(false);\n  const [isLoadedProfessors, setIsLoadedProfessors] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    if (isLoadedStudents && isLoadedSubjects) {\n      setIsLoaded(true);\n    }\n  }, [isLoadedStudents, isLoadedSubjects, isLoadedProfessors, isLoaded]);\n\n  useEffect(() => {\n    let subjectRef = db.collection('subjects');\n    subjectRef\n      .get()\n      .then(subjects => {\n        const profArray = [];\n        subjects.forEach(subject => {\n          let data = subject.data();\n          let { id } = subject;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          profArray.push(payload);\n        });\n        setUserSubjects(profArray);\n      })\n      .finally(() => {\n        setIsLoadedSubjects(true);\n      });\n  }, []);\n\n  useEffect(() => {\n    let studentRef = db.collection('students');\n    studentRef\n      .get()\n      .then(students => {\n        const studArray = [];\n        students.forEach(student => {\n          let data = student.data();\n          let { id } = student;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          studArray.push(payload);\n        });\n        setUserStudents(studArray);\n      })\n      .finally(() => {\n        setIsLoadedStudents(true);\n      });\n  }, []);\n\n  useEffect(() => {\n    let profRef = db.collection('professors');\n    profRef\n      .get()\n      .then(professors => {\n        const profArray = [];\n        professors.forEach(professor => {\n          let data = professor.data();\n          let { id } = professor;\n\n          let payload = {\n            id,\n            ...data,\n          };\n          profArray.push(payload);\n        });\n        setUserProfessors(profArray);\n      })\n      .finally(() => {\n        setIsLoadedProfessors(true);\n      });\n  }, []);\n\n  return (\n    <div>\n      <MainNavigation />\n      <Switch>\n        <Route path=\"/students-input\" exact>\n          <HomePagePage />\n        </Route>\n        <Route path=\"/students-input/add\" exact>\n          <AddPage />\n        </Route>\n        <Route path=\"/students-input/all-students\" exact>\n          <AllStudentsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects\" exact>\n          <AllSubjectsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors\" exact>\n          <AllProfessorsPage />\n        </Route>\n        <Route path=\"/students-input/all-students/details/:id\" exact>\n          <StudentDetailsTest\n            userSubjects={userSubjects}\n            userStudents={userStudents}\n            userProfessors={userProfessors}\n          />\n        </Route>\n        <Route path=\"/students-input/all-students/edit/:id\" exact>\n          <EditStudentsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects/details/:id\" exact>\n          <SubjectDetailsTest\n            userSubjects={userSubjects}\n            userStudents={userStudents}\n            userProfessors={userProfessors}\n          />\n        </Route>\n        <Route path=\"/students-input/all-subjects/edit/:id\" exact>\n          <EditSubjectsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors/details/:id\" exact>\n          <ProfessorDetailsTest\n            userSubjects={userSubjects}\n            userStudents={userStudents}\n            userProfessors={userProfessors}\n          />\n        </Route>\n        <Route path=\"/students-input/all-professors/edit/:id\" exact>\n          <EditProfessorPage />\n        </Route>\n        <Route path=\"/students-input/add-new-student\" exact>\n          <AddStudentPage />\n        </Route>\n        <Route path=\"/students-input/add-new-subject\" exact>\n          <AddSubjectPage />\n        </Route>\n        <Route path=\"/students-input/add-new-professor\" exact>\n          <AddProfessorsPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import './components/comon/custom.scss';\n// import './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}