{"version":3,"sources":["components/layout/MainNavigation.js","components/UI/Card.js","pages/HomePage.js","components/students/FetchStudents.js","components/students/StudentDetails.js","pages/studentsPage/StudentDetailsPage.js","components/students/StudentList.js","components/students/Students.js","pages/studentsPage/AllStudentsPage.js","components/students/StudentForm.js","components/students/AddNewStudent.js","pages/studentsPage/AddStudentPage.js","components/professors/FetchProfessors.js","components/subjects/AddProfToSubjectList.js","components/subjects/ModalProfList.js","components/subjects/AddStudentToSubjectList.js","components/subjects/ModalStudentsList.js","components/subjects/SubjectsList.js","components/subjects/Subjects.js","pages/subjectsPage/AllSubjectsPage.js","components/subjects/SubjectForm.js","components/subjects/AddNewSubject.js","pages/subjectsPage/AddSubjectPage.js","components/professors/ProfessorsList.js","components/professors/Profesors.js","pages/professorsPage/AllProfessorsPage.js","components/professors/ProfessorForm.js","components/professors/AddNewProfessor.js","pages/professorsPage/AddProfessorsPage.js","components/layout/AddPage.js","pages/professorsPage/AddPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainNavigation","history","useHistory","className","to","onChange","e","push","testing","target","value","Card","props","children","HomePage","fetchStudents","fetch","then","response","json","data","students","key","student","id","StudentDetails","useState","studentsData","setStudentsData","setStudent","isLoading","setIsLoading","subjects","setSubjects","studentId","useParams","useEffect","getStudents","a","length","filteredStudent","find","x","console","log","hasOwnProperty","filteredSubject","Object","values","fName","lName","map","subject","nanoid","professor","year","password","StudentDetailsPage","StudentsList","match","useRouteMatch","st","url","onClick","onChangeInput","onRemoveStudent","Students","userStudents","setUserStudents","content","sortProperty","sort","b","sorted","JSON","parse","stringify","sortHandler","prompt","filter","method","newList","removeStudentHandler","alert","newFName","newLName","changeUserInput","changedStudent","body","headers","AllStudentsPage","StudentForm","React","memo","enteredFName","setEnteredFName","enteredLName","setEnteredLName","enteredYear","setEnteredYear","enteredPass","setEnteredPass","setFormValid","onSubmit","preventDefault","onAddStudent","htmlFor","type","min","AddNewStudent","AddStudentPage","fetchProfessors","professors","prof","title","AddProffesorToSubjectList","loading","style","textAlign","onAddProfessorToSubject","ModalProfList","professorsData","setProfessorsData","subjectId","subjectObj","getProfessors","onCloseModal","AddProfToSubjectList","profId","AddStudentToSubjectList","onAddStudentToSubject","ModalStudentsList","SubjectsList","onAddProfToSubject","onRemoveSubject","Subjects","userSubjects","setUserSubjects","setUserProfessors","studentsModal","setStudentsModal","profModal","setProfModal","setSubjectId","newSubject","updateSubjectsName","changeUISubjName","updatedSubjectInAllStudents","keys","includes","test","forEach","AllSubjectsPage","SubjectForm","enteredSubject","setEnteredSubject","subjectData","onAddSubject","AddNewSubject","AddSubjectPage","ProfessorsList","Profesors","userProfessors","AllProfessorsPage","ProfessorForm","profName","setProfName","profLName","setProfLName","professorData","onAddProfessor","AddNewProfessor","AddProfessorsPage","AddNew","AddPage","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fcd7094.chunk.js","sourcesContent":["import { Link, useHistory } from 'react-router-dom';\r\n\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = () => {\r\n  const history = useHistory();\r\n  const testing = e => {\r\n    history.push(`/students-input/${e}`);\r\n  };\r\n  return (\r\n    <header>\r\n      <div className=\"logo\">\r\n        <Link to=\"/students-input\">CupeX first app</Link>\r\n      </div>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/students-input/all-students\">Students</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/students-input/all-subjects\">Subjects</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/students-input/all-professors\">Professors</Link>\r\n          </li>\r\n          <li>\r\n            <select\r\n              className=\"sort-btn\"\r\n              onChange={e => testing(e.target.value)}\r\n            >\r\n              <option value=\"add\">Add new?</option>\r\n              <option value=\"add-new-student\">Add new student</option>\r\n              <option value=\"add-new-professor\">Add new profesor</option>\r\n              <option value=\"add-new-subject\">Add new subject</option>\r\n            </select>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import Card from '../components/UI/Card';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Card>\r\n      <h1>Home Page</h1>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","const fetchStudents = () => {\r\n  return fetch(\r\n    'https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student.json'\r\n  )\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      const students = [];\r\n\r\n      for (const key in data) {\r\n        const student = { id: key, ...data[key] };\r\n\r\n        students.push(student);\r\n      }\r\n      return students;\r\n    });\r\n};\r\n\r\nexport default fetchStudents;\r\n","import { nanoid } from 'nanoid';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Card from '../UI/Card';\r\nimport fetchStudents from './FetchStudents';\r\n\r\nconst StudentDetails = () => {\r\n  const [studentsData, setStudentsData] = useState([]);\r\n  const [student, setStudent] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [subjects, setSubjects] = useState([]);\r\n\r\n  const params = useParams();\r\n  const studentId = params.id;\r\n\r\n  fetchStudents();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getStudents();\r\n  }, []);\r\n\r\n  const getStudents = async () => {\r\n    const students = await fetchStudents();\r\n    setStudentsData(students);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (studentsData.length) {\r\n      const filteredStudent = studentsData.find(x => x.id === studentId);\r\n      setStudent(filteredStudent);\r\n      console.log('filteredStudent', filteredStudent);\r\n      if (filteredStudent.hasOwnProperty('subjects')) {\r\n        const filteredSubject = Object.values(filteredStudent.subjects);\r\n        setSubjects(filteredSubject);\r\n      }\r\n    }\r\n  }, [studentsData, studentId]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card>\r\n        <h2>Loading students list...</h2>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <h2>\r\n        {student.fName} {student.lName} info:\r\n      </h2>\r\n\r\n      <table id=\"details-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>subject/s</th>\r\n            <th>professor/s</th>\r\n            <th>birth</th>\r\n            <th>password</th>\r\n            <th>unique id</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span>{student.fName} </span>\r\n            </td>\r\n            <td>\r\n              <span>{student.lName} </span>\r\n            </td>\r\n            <td>\r\n              {subjects.map(x => (\r\n                <li key={nanoid()}>{x.subject}</li>\r\n              ))}\r\n            </td>\r\n            <td>\r\n              {subjects.map(x => (\r\n                <li key={x.id}>{x.professor}</li>\r\n              ))}\r\n            </td>\r\n\r\n            <td>{student.year}</td>\r\n            <td>{student.password}</td>\r\n            <td>{studentId}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StudentDetails;\r\n","import StudentDetails from '../../components/students/StudentDetails';\r\n\r\nconst StudentDetailsPage = props => {\r\n  return <StudentDetails />;\r\n};\r\nexport default StudentDetailsPage;\r\n","import { Link, useRouteMatch } from 'react-router-dom';\nimport './students.css';\n\nconst StudentsList = props => {\n  const match = useRouteMatch();\n\n  return (\n    <section>\n      <table>\n        <thead>\n          <tr>\n            <th>info</th>\n            <th>first name</th>\n            <th>last name</th>\n            <th>birth</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.students.map(st => (\n            <tr key={st.id} id={st.id}>\n              <td className=\"btn-td\">\n                <Link to={`${match.url}/${st.id}`}>\n                  <button className=\"info-btn\">&#8505;</button>\n                </Link>\n              </td>\n              <td>\n                <span>{st.fName} </span>\n              </td>\n              <td>\n                <span>{st.lName} </span>\n              </td>\n              <td>{st.year}</td>\n              <td className=\"btn-td change-td\">\n                <button\n                  className=\"change-btn\"\n                  onClick={() => props.onChangeInput(st.id)}\n                >\n                  change\n                </button>\n              </td>\n              <td className=\"btn-td delete-td\">\n                <button\n                  className=\"delete-btn\"\n                  onClick={() => props.onRemoveStudent(st.id)}\n                >\n                  delete student\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default StudentsList;\n","import React, { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport fetchStudents from './FetchStudents';\n\nimport StudentsList from './StudentList';\n\nconst Students = () => {\n  const [userStudents, setUserStudents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getStudents = async () => {\n    const students = await fetchStudents();\n    setIsLoading(false);\n    setUserStudents(students);\n  };\n\n  // loading students from database\n  useEffect(() => {\n    setIsLoading(true);\n    fetchStudents();\n    getStudents();\n  }, []);\n\n  // removing student\n  const removeStudentHandler = studentId => {\n    fetch(\n      `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student/${studentId}.json`,\n      {\n        method: 'DELETE',\n      }\n    );\n    const newList = userStudents.filter(st => st.id !== studentId);\n    setUserStudents(newList);\n  };\n\n  // check password to remove student\n  const checkPassHandler = studentId => {\n    const passInput = prompt('enter password');\n    const getPass = userStudents\n      .filter(st => st.id === studentId)\n      .map(st => st.password);\n\n    if (+passInput === +getPass) {\n      removeStudentHandler(studentId);\n    } else {\n      alert('wrong password!');\n    }\n  };\n\n  // change first and last name\n  const changeInputHandler = studentId => {\n    const newFName = prompt('enter new first name');\n    const newLName = prompt('enter new last name');\n    userStudents\n      .filter(st => st.id === studentId)\n      .map(st => {\n        st.fName = newFName;\n        st.lName = newLName;\n      });\n\n    // change UI list\n    const changeUserInput = JSON.parse(JSON.stringify(userStudents));\n    setUserStudents(changeUserInput);\n\n    // update for database\n    const changedStudent = userStudents.filter(st => st.id === studentId);\n\n    fetch(\n      `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student/${studentId}.json`,\n      {\n        method: 'PUT',\n        body: JSON.stringify(...changedStudent),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n  };\n\n  // sorting\n  const sortHandler = e => {\n    const sortProperty = e;\n    userStudents.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\n\n    const sorted = JSON.parse(JSON.stringify(userStudents));\n    setUserStudents(sorted);\n  };\n\n  const content = (\n    <div>\n      <h2> All Students</h2>\n\n      <select\n        className=\"sort-btn\"\n        onChange={e => {\n          sortHandler(e.target.value);\n        }}\n      >\n        <option value=\"order\">sort by:</option>\n        <option value=\"fName\">First Name</option>\n        <option value=\"lName\">Last name</option>\n        <option value=\"year\">Date of Birth</option>\n      </select>\n    </div>\n  );\n\n  if (isLoading) {\n    return (\n      <Card>\n        <h2>Loading...</h2>\n      </Card>\n    );\n  }\n  return (\n    <Card>\n      {content}\n\n      <StudentsList\n        students={userStudents}\n        onRemoveStudent={checkPassHandler}\n        onChangeInput={changeInputHandler}\n      />\n    </Card>\n  );\n};\n\nexport default Students;\n","import Students from '../../components/students/Students';\r\n\r\nconst AllStudentsPage = () => {\r\n  return <Students />;\r\n};\r\n\r\nexport default AllStudentsPage;\r\n","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\n\nconst StudentForm = React.memo(props => {\n  const [enteredFName, setEnteredFName] = useState('');\n  const [enteredLName, setEnteredLName] = useState('');\n  const [enteredYear, setEnteredYear] = useState('');\n  const [enteredPass, setEnteredPass] = useState('');\n\n  const [formValid, setFormValid] = useState(false);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    // basic input validation\n    if (\n      enteredFName === '' ||\n      enteredLName === '' ||\n      enteredYear === '' ||\n      enteredPass === ''\n    ) {\n      setFormValid(false);\n      alert('pls fill all fields');\n      return;\n    }\n    setFormValid(true);\n\n    const student = {\n      fName: enteredFName,\n      lName: enteredLName,\n      year: enteredYear,\n      password: enteredPass,\n    };\n\n    console.log('student form submit', props);\n    props.onAddStudent(student);\n\n    // clearing input fields\n    setEnteredFName('');\n    setEnteredLName('');\n    setEnteredYear('');\n    setEnteredPass('');\n  };\n\n  const fNameChangeHandler = e => {\n    setEnteredFName(e.target.value);\n  };\n  const lNameChangeHandler = e => {\n    setEnteredLName(e.target.value);\n  };\n  const yearChangeHandler = e => {\n    setEnteredYear(e.target.value);\n  };\n  const passChangeHandler = e => {\n    setEnteredPass(e.target.value);\n  };\n\n  return (\n    <section>\n      <Card>\n        <h2>Students input form</h2>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"fName\">First Name:</label>\n            <input\n              type=\"text\"\n              id=\"fName\"\n              value={enteredFName}\n              onChange={fNameChangeHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"lName\">Last Name:</label>\n            <input\n              type=\"text\"\n              id=\"lName\"\n              value={enteredLName}\n              onChange={lNameChangeHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"year\">date of birth:</label>\n            <input\n              type=\"date\"\n              min=\"1111-01-01\"\n              id=\"year\"\n              value={enteredYear}\n              onChange={yearChangeHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"pass\">Password:</label>\n            <input\n              type=\"number\"\n              id=\"pass\"\n              value={enteredPass}\n              onChange={passChangeHandler}\n            />\n          </div>\n          <div>\n            <button type=\"submit\" className=\"add-btn\">\n              Add student\n            </button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default StudentForm;\n","import StudentForm from './StudentForm';\r\n\r\nconst AddNewStudent = () => {\r\n  const addStudentHandler = student => {\r\n    fetch(\r\n      'https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student.json',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(student),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  return <StudentForm onAddStudent={addStudentHandler} />;\r\n};\r\n\r\nexport default AddNewStudent;\r\n","import AddNewStudent from '../../components/students/AddNewStudent';\r\n\r\nconst AddStudentPage = () => {\r\n  return <AddNewStudent />;\r\n};\r\n\r\nexport default AddStudentPage;\r\n","const fetchProfessors = () => {\r\n  return fetch(\r\n    'https://students-input-default-rtdb.europe-west1.firebasedatabase.app/professors.json'\r\n  )\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      const professors = [];\r\n\r\n      for (const key in data) {\r\n        const prof = { id: key, title: data[key] };\r\n\r\n        professors.push(prof);\r\n      }\r\n      return professors;\r\n    });\r\n};\r\n\r\nexport default fetchProfessors;\r\n","const AddProffesorToSubjectList = props => {\r\n  if (props.loading) {\r\n    return <h2>Loading students list...</h2>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {!props.loading && <h2>all students list</h2>}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th style={{ textAlign: 'end' }}>add to subject</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.professors.map(st => (\r\n            <tr key={st.id} id={st.id}>\r\n              <td>\r\n                <span>{st.title.fName} </span>\r\n              </td>\r\n              <td>\r\n                <span>{st.title.lName} </span>\r\n              </td>\r\n\r\n              <td className=\"btn-td delete-td\">\r\n                <button\r\n                  className=\"add-btn\"\r\n                  onClick={() => props.onAddProfessorToSubject(st.id)}\r\n                >\r\n                  add\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddProffesorToSubjectList;\r\n","import { useState, useEffect } from 'react';\r\nimport fetchProfessors from '../professors/FetchProfessors';\r\nimport AddProfToSubjectList from './AddProfToSubjectList';\r\n\r\nimport './Modal.css';\r\n\r\nconst ModalProfList = props => {\r\n  const [professorsData, setProfessorsData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const subjectId = props.subjectId;\r\n  const subjectObj = props.subjects.find(x => x.id === subjectId);\r\n\r\n  fetchProfessors();\r\n\r\n  const getProfessors = async () => {\r\n    const professors = await fetchProfessors();\r\n    setIsLoading(false);\r\n    setProfessorsData(professors);\r\n  };\r\n  // loading professors\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getProfessors();\r\n  }, []);\r\n\r\n  const addProfessorToSubjectHandler = profId => {\r\n    // filter picked student\r\n    const prof = professorsData.find(x => x.id === profId);\r\n\r\n    if (!prof.hasOwnProperty('subject')) {\r\n      prof.subject = '';\r\n    }\r\n    const title = subjectObj.title.title;\r\n    // const subjects = {\r\n    //   ...prof.subjects,\r\n    //   [subjectId]: title,\r\n    // };\r\n    // console.log('title', title);\r\n    // console.log('subjects', subjects);\r\n\r\n    if (prof.subject.hasOwnProperty(subjectId)) {\r\n      console.log('allready have this subject');\r\n    } else {\r\n      console.log('not attending this subject, i will add!');\r\n      fetch(\r\n        `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/professors/${profId}/subject.json`,\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(title),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      ).then(() => {\r\n        getProfessors();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Modal\">\r\n      <button onClick={() => props.onCloseModal()}>close modal</button>\r\n      <AddProfToSubjectList\r\n        loading={isLoading}\r\n        professors={professorsData}\r\n        onAddProfessorToSubject={addProfessorToSubjectHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalProfList;\r\n","const AddStudentToSubjectList = props => {\r\n  if (props.loading) {\r\n    return <h2>Loading students list...</h2>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {!props.loading && <h2>all students list</h2>}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th style={{ textAlign: 'end' }}>add to subject</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.students.map(st => (\r\n            <tr key={st.id} id={st.id}>\r\n              <td>\r\n                <span>{st.fName} </span>\r\n              </td>\r\n              <td>\r\n                <span>{st.lName} </span>\r\n              </td>\r\n\r\n              <td className=\"btn-td delete-td\">\r\n                <button\r\n                  className=\"add-btn\"\r\n                  onClick={() => props.onAddStudentToSubject(st.id)}\r\n                >\r\n                  add\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddStudentToSubjectList;\r\n","import { useState, useEffect } from 'react';\r\nimport fetchStudents from '../students/FetchStudents';\r\n\r\nimport AddStudentToSubjectList from './AddStudentToSubjectList';\r\nimport './Modal.css';\r\n\r\nconst ModalStudentsList = props => {\r\n  const [studentsData, setStudentsData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const subjectId = props.subjectId;\r\n  const subjectObj = props.subjects.find(x => x.id === subjectId);\r\n\r\n  fetchStudents();\r\n\r\n  const getStudents = async () => {\r\n    const students = await fetchStudents();\r\n    setIsLoading(false);\r\n    setStudentsData(students);\r\n  };\r\n  // loading students\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getStudents();\r\n  }, []);\r\n\r\n  const addStudentToSubjectHandler = studentId => {\r\n    // filter picked student\r\n    const student = studentsData.find(x => x.id === studentId);\r\n\r\n    if (!student.hasOwnProperty('subjects')) {\r\n      student.subjects = {};\r\n    }\r\n    const title = subjectObj.title;\r\n    const subjects = {\r\n      ...student.subjects,\r\n      [subjectId]: title,\r\n    };\r\n\r\n    if (student.subjects.hasOwnProperty(subjectId)) {\r\n      console.log('allready have this subject');\r\n    } else {\r\n      console.log('not attending this subject, i will add!');\r\n      fetch(\r\n        `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student/${studentId}/subjects.json`,\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(subjects),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      ).then(() => {\r\n        getStudents();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Modal\">\r\n      <button onClick={() => props.onCloseModal()}>close modal</button>\r\n      <AddStudentToSubjectList\r\n        loading={isLoading}\r\n        students={studentsData}\r\n        onAddStudentToSubject={addStudentToSubjectHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalStudentsList;\r\n","import { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nconst SubjectsList = props => {\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <section>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>more info</th>\r\n            <th>subject name</th>\r\n            <th>change sbject title</th>\r\n            <th>add student</th>\r\n            <th>add professor</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.subjects.map(st => (\r\n            <tr key={st.id} id={st.id}>\r\n              <td className=\"btn-td\">\r\n                <Link to={`${match.url}/${st.id}`}>\r\n                  <button className=\"info-btn\">&#8505;</button>\r\n                </Link>\r\n              </td>\r\n              <td>\r\n                <span>{st.title.title} </span>\r\n              </td>\r\n              <td className=\"btn-td change-td\">\r\n                <button\r\n                  className=\"change-btn\"\r\n                  onClick={() => props.onChangeInput(st.id)}\r\n                >\r\n                  change\r\n                </button>\r\n              </td>\r\n              <td className=\"btn-td change-td\">\r\n                <button\r\n                  className=\"change-btn\"\r\n                  onClick={() => props.onAddStudentToSubject(st.id)}\r\n                >\r\n                  add\r\n                </button>\r\n              </td>\r\n              <td className=\"btn-td change-td\">\r\n                <button\r\n                  className=\"change-btn\"\r\n                  onClick={() => props.onAddProfToSubject(st.id)}\r\n                >\r\n                  add\r\n                </button>\r\n              </td>\r\n              <td className=\"btn-td delete-td\">\r\n                <button\r\n                  className=\"delete-btn\"\r\n                  onClick={() => props.onRemoveSubject(st.id)}\r\n                >\r\n                  delete subject\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SubjectsList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport fetchProfessors from '../professors/FetchProfessors';\r\nimport fetchStudents from '../students/FetchStudents';\r\nimport Card from '../UI/Card';\r\nimport ModalProfList from './ModalProfList';\r\nimport ModalStudentsList from './ModalStudentsList';\r\n\r\nimport SubjectsList from './SubjectsList';\r\n\r\nconst Subjects = () => {\r\n  const [userSubjects, setUserSubjects] = useState([]);\r\n  const [userStudents, setUserStudents] = useState([]);\r\n  const [userProfessors, setUserProfessors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [studentsModal, setStudentsModal] = useState(false);\r\n  const [profModal, setProfModal] = useState(false);\r\n  const [subjectId, setSubjectId] = useState('');\r\n\r\n  // getting students for change of subject title\r\n  const getStudents = async () => {\r\n    const students = await fetchStudents();\r\n    setUserStudents(students);\r\n  };\r\n  // loading students from database\r\n  useEffect(() => {\r\n    fetchStudents();\r\n    getStudents();\r\n  }, []);\r\n\r\n  const getProfessors = async () => {\r\n    const professors = await fetchProfessors();\r\n    setUserProfessors(professors);\r\n  };\r\n  // loading professors\r\n  useEffect(() => {\r\n    fetchProfessors();\r\n    getProfessors();\r\n  }, []);\r\n\r\n  // loading subjects from database\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(\r\n      'https://students-input-default-rtdb.europe-west1.firebasedatabase.app/subjects.json'\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        const subjects = [];\r\n\r\n        for (const key in data) {\r\n          const subject = { id: key, title: data[key] };\r\n\r\n          subjects.push(subject);\r\n        }\r\n        setIsLoading(false);\r\n        setUserSubjects(subjects);\r\n      });\r\n  }, []);\r\n\r\n  // removing subject\r\n  const removeSubjectHandler = subjectId => {\r\n    fetch(\r\n      `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student/${subjectId}.json`,\r\n      {\r\n        method: 'DELETE',\r\n      }\r\n    );\r\n    const newList = userSubjects.filter(st => st.id !== subjectId);\r\n    setUserSubjects(newList);\r\n  };\r\n\r\n  // change first and last name\r\n  const changeInputHandler = subjectId => {\r\n    const newSubject = prompt('enter new subjects title');\r\n    userSubjects.find(st => st.id === subjectId).title.title = newSubject;\r\n\r\n    // update UI\r\n    const subject = userSubjects.find(x => x.id === subjectId);\r\n    const updateSubjectsName = subject.title;\r\n    const changeUISubjName = JSON.parse(JSON.stringify(userSubjects));\r\n    setUserSubjects(changeUISubjName);\r\n\r\n    // update subject on database\r\n    fetch(\r\n      `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/subjects/${subjectId}.json`,\r\n      {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updateSubjectsName),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n\r\n    const updatedSubjectInAllStudents = userStudents.map(x => {\r\n      if (x.subjects && Object.keys(x.subjects).includes(subjectId)) {\r\n        x.subjects[subjectId].title = newSubject;\r\n      }\r\n      return x;\r\n    });\r\n    setUserStudents(updatedSubjectInAllStudents);\r\n\r\n    console.log('updatedSubjectInAllStudents', updatedSubjectInAllStudents);\r\n    const test = updatedSubjectInAllStudents.forEach(x => console.log(x));\r\n    console.log('test', test);\r\n    // fetch(\r\n    //   `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/student/.json`,\r\n    //   {\r\n    //     method: 'PUT',\r\n    //     body: JSON.stringify(updatedSubjectInAllStudents),\r\n    //     headers: {\r\n    //       'Content-Type': 'application/json',\r\n    //     },\r\n    //   }\r\n    // );\r\n  };\r\n\r\n  // sorting\r\n  const sortHandler = e => {\r\n    const sortProperty = e;\r\n    userSubjects.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\r\n\r\n    const sorted = JSON.parse(JSON.stringify(userSubjects));\r\n    setUserSubjects(sorted);\r\n  };\r\n\r\n  const content = (\r\n    <div>\r\n      <h2> All Subjects</h2>\r\n\r\n      <select\r\n        className=\"sort-btn\"\r\n        onChange={e => {\r\n          sortHandler(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"order\">sort by:</option>\r\n        <option value=\"fName\">First Name</option>\r\n        <option value=\"lName\">Last name</option>\r\n        <option value=\"year\">Date of Birth</option>\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n  const addStudentToSubjectHandler = subjectId => {\r\n    setStudentsModal(true);\r\n    setSubjectId(subjectId);\r\n  };\r\n\r\n  const addProfToSubjectHandler = subjectId => {\r\n    setProfModal(true);\r\n    setSubjectId(subjectId);\r\n  };\r\n\r\n  const closeStudentsModal = () => {\r\n    setStudentsModal(false);\r\n  };\r\n\r\n  const closeProfModal = () => {\r\n    setProfModal(false);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card>\r\n        <h2>Loading...</h2>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      {content}\r\n      {studentsModal && (\r\n        <ModalStudentsList\r\n          onCloseModal={closeStudentsModal}\r\n          subjects={userSubjects}\r\n          subjectId={subjectId}\r\n        />\r\n      )}\r\n\r\n      {profModal && (\r\n        <ModalProfList\r\n          onCloseModal={closeProfModal}\r\n          subjects={userSubjects}\r\n          subjectId={subjectId}\r\n        />\r\n      )}\r\n\r\n      <SubjectsList\r\n        subjects={userSubjects}\r\n        onRemoveSubject={removeSubjectHandler}\r\n        onChangeInput={changeInputHandler}\r\n        onAddStudentToSubject={addStudentToSubjectHandler}\r\n        onAddProfToSubject={addProfToSubjectHandler}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Subjects;\r\n","import Subjects from '../../components/subjects/Subjects';\r\n\r\nconst AllSubjectsPage = () => {\r\n  return <Subjects />;\r\n};\r\n\r\nexport default AllSubjectsPage;\r\n","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\n\r\nconst SubjectForm = React.memo(props => {\r\n  const [enteredSubject, setEnteredSubject] = useState('');\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    if (enteredSubject === '') {\r\n      setFormValid(false);\r\n      alert('pls enter subject name');\r\n      return;\r\n    }\r\n    setFormValid(true);\r\n\r\n    const subjectData = {\r\n      subject: enteredSubject,\r\n    };\r\n\r\n    props.onAddSubject(subjectData);\r\n\r\n    setEnteredSubject('');\r\n  };\r\n\r\n  const subjectChangeHandler = e => {\r\n    setEnteredSubject(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <h2>Students input form</h2>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"subject\">subject name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"subject\"\r\n            value={enteredSubject}\r\n            onChange={subjectChangeHandler}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" className=\"add-btn\">\r\n            Add subject\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SubjectForm;\r\n","import SubjectForm from './SubjectForm';\r\n\r\nconst AddNewSubject = () => {\r\n  const addSubjectHandler = subjectData => {\r\n    const subject = { title: subjectData.subject, professor: '' };\r\n\r\n    fetch(\r\n      'https://students-input-default-rtdb.europe-west1.firebasedatabase.app/subjects.json',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(subject),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  return <SubjectForm onAddSubject={addSubjectHandler} />;\r\n};\r\n\r\nexport default AddNewSubject;\r\n","import AddNewSubject from '../../components/subjects/AddNewSubject';\r\nconst AddSubjectPage = () => {\r\n  return <AddNewSubject />;\r\n};\r\n\r\nexport default AddSubjectPage;\r\n","import { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nconst ProfessorsList = props => {\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <section>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>more info</th>\r\n            <th>title</th>\r\n            <th>first name</th>\r\n            <th>last name</th>\r\n            <th>subject</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.professors.map(st => (\r\n            <tr key={st.id} id={st.id}>\r\n              <td className=\"btn-td\">\r\n                <Link to={`${match.url}/${st.id}`}>\r\n                  <button className=\"info-btn\">&#8505;</button>\r\n                </Link>\r\n              </td>\r\n              <td>\r\n                <span>prof: </span>\r\n              </td>\r\n              <td>\r\n                <span>{st.title.fName} </span>\r\n              </td>\r\n              <td>\r\n                <span>{st.title.lName} </span>\r\n              </td>\r\n              <td>\r\n                <span>{st.title.subject} </span>\r\n              </td>\r\n              {/* <td className=\"btn-td change-td\">\r\n                <button\r\n                  className=\"change-btn\"\r\n                  onClick={() => props.onChangeInput(st.id)}\r\n                >\r\n                  change\r\n                </button>\r\n              </td>\r\n              <td className=\"btn-td change-td\">\r\n                <button\r\n                  className=\"change-btn\"\r\n                  onClick={() => props.onAddStudentToSubject(st.id)}\r\n                >\r\n                  add student\r\n                </button>\r\n              </td>*/}\r\n              <td className=\"btn-td delete-td\">\r\n                <button\r\n                  className=\"delete-btn\"\r\n                  onClick={() => props.onRemoveSubject(st.id)}\r\n                >\r\n                  delete subject\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProfessorsList;\r\n","import { useState, useEffect } from 'react';\r\nimport Card from '../UI/Card';\r\nimport fetchProfessors from './FetchProfessors';\r\nimport ProfessorsList from './ProfessorsList';\r\n\r\nconst Profesors = () => {\r\n  const [userProfessors, setUserProfessors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getProfessors = async () => {\r\n    const professors = await fetchProfessors();\r\n    setIsLoading(false);\r\n    setUserProfessors(professors);\r\n  };\r\n\r\n  // loading professors from database\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n    fetchProfessors();\r\n    getProfessors();\r\n  }, []);\r\n\r\n  // removing prof\r\n  const removeProfessorHandler = profId => {\r\n    fetch(\r\n      `https://students-input-default-rtdb.europe-west1.firebasedatabase.app/professors/${profId}.json`,\r\n      {\r\n        method: 'DELETE',\r\n      }\r\n    );\r\n    const newList = userProfessors.filter(st => st.id !== profId);\r\n    setUserProfessors(newList);\r\n  };\r\n\r\n  // sorting\r\n  const sortHandler = e => {\r\n    const sortProperty = e;\r\n    userProfessors.sort((a, b) => (a[sortProperty] > b[sortProperty] ? 1 : -1));\r\n\r\n    const sorted = JSON.parse(JSON.stringify(userProfessors));\r\n    setUserProfessors(sorted);\r\n  };\r\n\r\n  const content = (\r\n    <div>\r\n      <h2> All Subjects</h2>\r\n\r\n      <select\r\n        className=\"sort-btn\"\r\n        onChange={e => {\r\n          sortHandler(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"order\">sort by:</option>\r\n        <option value=\"fName\">First Name</option>\r\n        <option value=\"lName\">Last name</option>\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card>\r\n        <h2>Loading...</h2>\r\n      </Card>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      {content}\r\n\r\n      <ProfessorsList\r\n        professors={userProfessors}\r\n        onRemoveSubject={removeProfessorHandler}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Profesors;\r\n","import Profesors from '../../components/professors/Profesors';\r\n\r\nconst AllProfessorsPage = () => {\r\n  return <Profesors />;\r\n};\r\n\r\nexport default AllProfessorsPage;\r\n","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\n\r\nconst ProfessorForm = React.memo(props => {\r\n  console.log('prof form props', props);\r\n  const [profName, setProfName] = useState('');\r\n  const [profLName, setProfLName] = useState('');\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  const submitHandler = e => {\r\n    console.log(e);\r\n    e.preventDefault();\r\n\r\n    // basic input validation\r\n    if (profName === '' || profLName === '') {\r\n      setFormValid(false);\r\n      alert('pls fill all fields');\r\n      return;\r\n    }\r\n    setFormValid(true);\r\n\r\n    const professorData = {\r\n      fName: profName,\r\n      lName: profLName,\r\n    };\r\n\r\n    props.onAddProfessor(professorData);\r\n\r\n    // clearing input fields\r\n    setProfName('');\r\n    setProfLName('');\r\n  };\r\n\r\n  const fNameChangeHandler = e => {\r\n    setProfName(e.target.value);\r\n  };\r\n  const lNameChangeHandler = e => {\r\n    setProfLName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <h2>Professor input form</h2>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"fName\">first name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fName\"\r\n            value={profName}\r\n            onChange={fNameChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"lName\">last name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lName\"\r\n            value={profLName}\r\n            onChange={lNameChangeHandler}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" className=\"add-btn\">\r\n            Add student\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ProfessorForm;\r\n","import ProfessorForm from './ProfessorForm';\r\n\r\nconst AddNewProfessor = () => {\r\n  const addProfessorHandler = professorData => {\r\n    fetch(\r\n      'https://students-input-default-rtdb.europe-west1.firebasedatabase.app/professors.json',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(professorData),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  return <ProfessorForm onAddProfessor={addProfessorHandler} />;\r\n};\r\n\r\nexport default AddNewProfessor;\r\n","import AddNewProfessor from '../../components/professors/AddNewProfessor';\r\n\r\nconst AddProfessorsPage = () => {\r\n  return <AddNewProfessor />;\r\n};\r\n\r\nexport default AddProfessorsPage;\r\n","import { Link } from 'react-router-dom';\r\nimport Card from '../UI/Card';\r\n\r\nimport './index.css';\r\n\r\nconst AddNew = () => {\r\n  return (\r\n    <Card>\r\n      <h2>Add new:</h2>\r\n      <ul className=\"addNewUl\">\r\n        <li>\r\n          <Link to=\"/students-input/add-new-student\">\r\n            <button className=\"change-btn\">student</button>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/students-input/add-new-subject\">\r\n            <button className=\"change-btn\">subject</button>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/students-input/add-new-professor\">\r\n            <button className=\"change-btn\">professor</button>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddNew;\r\n","import AddNew from '../../components/layout/AddPage';\r\n\r\nconst AddPage = () => {\r\n  return <AddNew />;\r\n};\r\n\r\nexport default AddPage;\r\n","import { Route, Switch } from 'react-router-dom';\n\nimport MainNavigation from './components/layout/MainNavigation';\nimport HomePagePage from './pages/HomePage';\nimport StudentDetailsPage from './pages/studentsPage/StudentDetailsPage';\nimport AllStudentsPage from './pages/studentsPage/AllStudentsPage';\nimport AddStudentPage from './pages/studentsPage/AddStudentPage';\nimport AllSubjectsPage from './pages/subjectsPage/AllSubjectsPage';\nimport AddSubjectPage from './pages/subjectsPage/AddSubjectPage';\nimport AllProfessorsPage from './pages/professorsPage/AllProfessorsPage';\nimport './App.css';\nimport AddProfessorsPage from './pages/professorsPage/AddProfessorsPage';\nimport AddPage from './pages/professorsPage/AddPage';\n\nfunction App() {\n  return (\n    <div>\n      <MainNavigation />\n      <Switch>\n        <Route path=\"/students-input\" exact>\n          <HomePagePage />\n        </Route>\n        <Route path=\"/students-input/all-students\" exact>\n          <AllStudentsPage />\n        </Route>\n        <Route path=\"/students-input/all-subjects\" exact>\n          <AllSubjectsPage />\n        </Route>\n        <Route path=\"/students-input/all-professors\" exact>\n          <AllProfessorsPage />\n        </Route>\n        <Route path=\"/students-input/all-students/:id\" exact>\n          <StudentDetailsPage />\n        </Route>\n        <Route path=\"/students-input/add-new-student\" exact>\n          <AddStudentPage />\n        </Route>\n        <Route path=\"/students-input/add-new-subject\" exact>\n          <AddSubjectPage />\n        </Route>\n        <Route path=\"/students-input/add-new-professor\" exact>\n          <AddProfessorsPage />\n        </Route>\n        <Route path=\"/students-input/add\" exact>\n          <AddPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}